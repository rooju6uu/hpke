Initial state
Game 1 is
      Ostart() :=
      key_extr_3 <-R hash_key_t;
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        return((skS: Z_t <- sk; {23}let (skE: Z_t, pkE_2: G_t) = (z <-R Z_t; (z, exp(g, z))) in dh_2: GG_t <- concatDH(exp(pk_R, skE), exp(pk_R, skS)); enc_1: bitstring <- Serialize(pkE_2); pkS: G_t <- exp(g, skS); kemContext_2: GGG_t <- concatContext(pkE_2, pk_R, pkS); zz_2: eae_output_t <- (key: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_2); info: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_2); ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key, info))); AuthEncap_tuple(zz_2, enc_1) else AuthEncap_None))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        return((skR: Z_t <- sk; let Serialize(pkE_3: G_t) = enc_2 in dh_3: GG_t <- concatDH(exp(pkE_3, skR), exp(pk_S, skR)); pkR_1: G_t <- exp(g, skR); kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S); zz_3: eae_output_t <- (key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3); info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3); ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_1, info_1))); AuthDecap_Some(zz_3) else AuthDecap_None))
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        return(ExtractAndExpand_inner(key_extr_3, x1))
      ))


Applying expand
  - Expand if/find/let
    - Simplify pattern (skE: Z_t, pkE_2: G_t) (tuple expanded) at 23
    - Remove else branch of let at 23
yields

Game 2 is
      Ostart() :=
      key_extr_3 <-R hash_key_t;
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        skS: Z_t <- sk;
        z <-R Z_t;
        pkE_2: G_t <- exp(g, z);
        skE: Z_t <- z;
        dh_2: GG_t <- concatDH(exp(pk_R, skE), exp(pk_R, skS));
        enc_1: bitstring <- Serialize(pkE_2);
        pkS: G_t <- exp(g, skS);
        kemContext_2: GGG_t <- concatContext(pkE_2, pk_R, pkS);
        key: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_2);
        info: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_2);
        zz_2: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key, info));
        return(AuthEncap_tuple(zz_2, enc_1))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        skR: Z_t <- sk;
        let Serialize(pkE_3: G_t) = enc_2 in
          dh_3: GG_t <- concatDH(exp(pkE_3, skR), exp(pk_S, skR));
          pkR_1: G_t <- exp(g, skR);
          kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
          key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
          info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
          zz_3: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_1, info_1));
          return(AuthDecap_Some(zz_3))
        else
          return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        return(ExtractAndExpand_inner(key_extr_3, x1))
      ))


Applying remove assignments of findcond
  - Remove assignments on skR (definition removed, all usages removed)
  - Remove assignments on skS (definition removed, all usages removed)
  - Remove assignments on skE (definition removed, all usages removed)
yields

Game 3 is
      Ostart() :=
      key_extr_3 <-R hash_key_t;
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
  {18}  z <-R Z_t;
        pkE_2: G_t <- exp(g, z);
        dh_2: GG_t <- concatDH(exp(pk_R, z), exp(pk_R, sk));
        enc_1: bitstring <- Serialize(pkE_2);
        pkS: G_t <- exp(g, sk);
        kemContext_2: GGG_t <- concatContext(pkE_2, pk_R, pkS);
        key: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_2);
        info: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_2);
        zz_2: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key, info));
        return(AuthEncap_tuple(zz_2, enc_1))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        let Serialize(pkE_3: G_t) = enc_2 in
          dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
          pkR_1: G_t <- exp(g, sk);
          kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
          key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
          info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
          zz_3: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_1, info_1));
          return(AuthDecap_Some(zz_3))
        else
          return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        return(ExtractAndExpand_inner(key_extr_3, x1))
      ))


Applying insert instruction find i1 <= N suchthat
      defined(sk[i1])
      && pk_R = exp(g, sk[i1]) then at occurrence 18
yields

Game 4 is
      Ostart() :=
      key_extr_3 <-R hash_key_t;
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z <-R Z_t;
          pkE_2: G_t <- exp(g, z);
          dh_2: GG_t <- concatDH(exp(pk_R, z), exp(pk_R, sk));
          enc_1: bitstring <- Serialize(pkE_2);
          pkS: G_t <- exp(g, sk);
          kemContext_2: GGG_t <- concatContext(pkE_2, pk_R, pkS);
          key: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_2);
          info: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_2);
          zz_2: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key, info));
          return(AuthEncap_tuple(zz_2, enc_1))
        else
          z <-R Z_t;
          pkE_2: G_t <- exp(g, z);
          dh_2: GG_t <- concatDH(exp(pk_R, z), exp(pk_R, sk));
          enc_1: bitstring <- Serialize(pkE_2);
          pkS: G_t <- exp(g, sk);
          kemContext_2: GGG_t <- concatContext(pkE_2, pk_R, pkS);
          key: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_2);
          info: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_2);
          zz_2: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key, info));
          return(AuthEncap_tuple(zz_2, enc_1))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        let Serialize(pkE_3: G_t) = enc_2 in
          dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
          pkR_1: G_t <- exp(g, sk);
          kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
          key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
          info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
          zz_3: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_1, info_1));
          return(AuthDecap_Some(zz_3))
        else
          return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        return(ExtractAndExpand_inner(key_extr_3, x1))
      ))


Applying SA rename z
  - Rename variable z into z_6, z_5
yields

Game 5 is
      Ostart() :=
      key_extr_3 <-R hash_key_t;
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_2: G_t <- exp(g, z_5);
          dh_2: GG_t <- {36}concatDH(exp(pk_R, z_5), exp(pk_R, sk));
          enc_1: bitstring <- Serialize(pkE_2);
          pkS: G_t <- exp(g, sk);
          kemContext_2: GGG_t <- concatContext(pkE_2, pk_R, pkS);
          key: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_2);
          info: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_2);
          zz_2: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key, info));
          return(AuthEncap_tuple(zz_2, enc_1))
        else
          z_6 <-R Z_t;
          pkE_2: G_t <- exp(g, z_6);
          dh_2: GG_t <- concatDH(exp(pk_R, z_6), exp(pk_R, sk));
          enc_1: bitstring <- Serialize(pkE_2);
          pkS: G_t <- exp(g, sk);
          kemContext_2: GGG_t <- concatContext(pkE_2, pk_R, pkS);
          key: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_2);
          info: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_2);
          zz_2: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key, info));
          return(AuthEncap_tuple(zz_2, enc_1))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        let Serialize(pkE_3: G_t) = enc_2 in
          dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
          pkR_1: G_t <- exp(g, sk);
          kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
          key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
          info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
          zz_3: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_1, info_1));
          return(AuthDecap_Some(zz_3))
        else
          return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        return(ExtractAndExpand_inner(key_extr_3, x1))
      ))


Applying simplify
  - Simplification pass
    - Replaced concatDH(exp(pk_R, z_5), exp(pk_R, sk)) with concatDH(exp(g, mult(sk[i1_6], z_5)), exp(g, mult(sk[i1_6], sk))) at 36
yields

Game 6 is
      Ostart() :=
      key_extr_3 <-R hash_key_t;
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_2: G_t <- exp(g, z_5);
          dh_2: GG_t <- concatDH(exp(g, mult(sk[i1_6], z_5)), exp(g, mult(sk[i1_6], sk)));
          enc_1: bitstring <- Serialize(pkE_2);
          pkS: G_t <- exp(g, sk);
          kemContext_2: GGG_t <- concatContext(pkE_2, pk_R, pkS);
          key: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_2);
          info: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_2);
          zz_2: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key, info));
          return(AuthEncap_tuple(zz_2, enc_1))
        else
          z_6 <-R Z_t;
          pkE_2: G_t <- exp(g, z_6);
          dh_2: GG_t <- concatDH(exp(pk_R, z_6), exp(pk_R, sk));
          enc_1: bitstring <- Serialize(pkE_2);
          pkS: G_t <- exp(g, sk);
          kemContext_2: GGG_t <- concatContext(pkE_2, pk_R, pkS);
          key: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_2);
          info: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_2);
          zz_2: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key, info));
          return(AuthEncap_tuple(zz_2, enc_1))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        let Serialize(pkE_3: G_t) = enc_2 in
          dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
          pkR_1: G_t <- exp(g, sk);
          kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
          key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
          info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
          zz_3: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_1, info_1));
          return(AuthDecap_Some(zz_3))
        else
          return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        return(ExtractAndExpand_inner(key_extr_3, x1))
      ))


Applying SA rename enc_1
  - Rename variable enc_1 into enc_9, enc_8
yields

Game 7 is
      Ostart() :=
      key_extr_3 <-R hash_key_t;
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_2: G_t <- exp(g, z_5);
          dh_2: GG_t <- concatDH(exp(g, mult(sk[i1_6], z_5)), exp(g, mult(sk[i1_6], sk)));
          enc_8: bitstring <- Serialize(pkE_2);
          pkS: G_t <- exp(g, sk);
          kemContext_2: GGG_t <- concatContext(pkE_2, pk_R, pkS);
          key: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_2);
          info: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_2);
          zz_2: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key, info));
          return(AuthEncap_tuple(zz_2, enc_8))
        else
          z_6 <-R Z_t;
          pkE_2: G_t <- exp(g, z_6);
          dh_2: GG_t <- concatDH(exp(pk_R, z_6), exp(pk_R, sk));
          enc_9: bitstring <- Serialize(pkE_2);
          pkS: G_t <- exp(g, sk);
          kemContext_2: GGG_t <- concatContext(pkE_2, pk_R, pkS);
          key: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_2);
          info: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_2);
          zz_2: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key, info));
          return(AuthEncap_tuple(zz_2, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        let Serialize(pkE_3: G_t) = enc_2 in
          dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
          pkR_1: G_t <- exp(g, sk);
          kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
          key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
          info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
          zz_3: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_1, info_1));
          return(AuthDecap_Some(zz_3))
        else
          return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        return(ExtractAndExpand_inner(key_extr_3, x1))
      ))


Applying SA rename zz_2
  - Rename variable zz_2 into zz_11, zz_10
yields

Game 8 is
      Ostart() :=
      key_extr_3 <-R hash_key_t;
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_2: G_t <- exp(g, z_5);
          dh_2: GG_t <- concatDH(exp(g, mult(sk[i1_6], z_5)), exp(g, mult(sk[i1_6], sk)));
          enc_8: bitstring <- Serialize(pkE_2);
          pkS: G_t <- exp(g, sk);
          kemContext_2: GGG_t <- concatContext(pkE_2, pk_R, pkS);
          key: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_2);
          info: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_2);
          zz_10: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key, info));
          return(AuthEncap_tuple(zz_10, enc_8))
        else
          z_6 <-R Z_t;
          pkE_2: G_t <- exp(g, z_6);
          dh_2: GG_t <- concatDH(exp(pk_R, z_6), exp(pk_R, sk));
          enc_9: bitstring <- Serialize(pkE_2);
          pkS: G_t <- exp(g, sk);
          kemContext_2: GGG_t <- concatContext(pkE_2, pk_R, pkS);
          key: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_2);
          info: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_2);
          zz_11: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key, info));
          return(AuthEncap_tuple(zz_11, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        let Serialize(pkE_3: G_t) = enc_2 in
          dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
          pkR_1: G_t <- exp(g, sk);
          kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
          key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
          info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
          zz_3: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_1, info_1));
          return(AuthDecap_Some(zz_3))
        else
          return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        return(ExtractAndExpand_inner(key_extr_3, x1))
      ))


Applying SA rename pkE_2
  - Rename variable pkE_2 into pkE_11, pkE_10
yields

Game 9 is
      Ostart() :=
      key_extr_3 <-R hash_key_t;
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          dh_2: GG_t <- concatDH(exp(g, mult(sk[i1_6], z_5)), exp(g, mult(sk[i1_6], sk)));
          enc_8: bitstring <- Serialize(pkE_10);
          pkS: G_t <- exp(g, sk);
          kemContext_2: GGG_t <- concatContext(pkE_10, pk_R, pkS);
          key: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_2);
          info: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_2);
          zz_10: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key, info));
          return(AuthEncap_tuple(zz_10, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          dh_2: GG_t <- concatDH(exp(pk_R, z_6), exp(pk_R, sk));
          enc_9: bitstring <- Serialize(pkE_11);
          pkS: G_t <- exp(g, sk);
          kemContext_2: GGG_t <- concatContext(pkE_11, pk_R, pkS);
          key: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_2);
          info: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_2);
          zz_11: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key, info));
          return(AuthEncap_tuple(zz_11, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        let Serialize(pkE_3: G_t) = enc_2 in
          dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
          pkR_1: G_t <- exp(g, sk);
          kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
          key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
          info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
          zz_3: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_1, info_1));
          return(AuthDecap_Some(zz_3))
        else
          return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        return(ExtractAndExpand_inner(key_extr_3, x1))
      ))


Applying SA rename pkS
  - Rename variable pkS into pkS_5, pkS_4
yields

Game 10 is
      Ostart() :=
      key_extr_3 <-R hash_key_t;
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          dh_2: GG_t <- concatDH(exp(g, mult(sk[i1_6], z_5)), exp(g, mult(sk[i1_6], sk)));
          enc_8: bitstring <- Serialize(pkE_10);
          pkS_4: G_t <- exp(g, sk);
          kemContext_2: GGG_t <- concatContext(pkE_10, pk_R, pkS_4);
          key: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_2);
          info: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_2);
          zz_10: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key, info));
          return(AuthEncap_tuple(zz_10, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          dh_2: GG_t <- concatDH(exp(pk_R, z_6), exp(pk_R, sk));
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          kemContext_2: GGG_t <- concatContext(pkE_11, pk_R, pkS_5);
          key: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_2);
          info: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_2);
          zz_11: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key, info));
          return(AuthEncap_tuple(zz_11, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        let Serialize(pkE_3: G_t) = enc_2 in
          dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
          pkR_1: G_t <- exp(g, sk);
          kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
          key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
          info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
          zz_3: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_1, info_1));
          return(AuthDecap_Some(zz_3))
        else
          return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        return(ExtractAndExpand_inner(key_extr_3, x1))
      ))


Applying SA rename dh_2
  - Rename variable dh_2 into dh_11, dh_10
yields

Game 11 is
      Ostart() :=
      key_extr_3 <-R hash_key_t;
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          dh_10: GG_t <- concatDH(exp(g, mult(sk[i1_6], z_5)), exp(g, mult(sk[i1_6], sk)));
          enc_8: bitstring <- Serialize(pkE_10);
          pkS_4: G_t <- exp(g, sk);
          kemContext_2: GGG_t <- concatContext(pkE_10, pk_R, pkS_4);
          key: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_10);
          info: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_2);
          zz_10: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key, info));
          return(AuthEncap_tuple(zz_10, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          dh_11: GG_t <- concatDH(exp(pk_R, z_6), exp(pk_R, sk));
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          kemContext_2: GGG_t <- concatContext(pkE_11, pk_R, pkS_5);
          key: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_11);
          info: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_2);
          zz_11: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key, info));
          return(AuthEncap_tuple(zz_11, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        let Serialize(pkE_3: G_t) = enc_2 in
          dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
          pkR_1: G_t <- exp(g, sk);
          kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
          key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
          info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
          zz_3: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_1, info_1));
          return(AuthDecap_Some(zz_3))
        else
          return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        return(ExtractAndExpand_inner(key_extr_3, x1))
      ))


Applying SA rename kemContext_2
  - Rename variable kemContext_2 into kemContext_11, kemContext_10
yields

Game 12 is
      Ostart() :=
      key_extr_3 <-R hash_key_t;
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          dh_10: GG_t <- concatDH(exp(g, mult(sk[i1_6], z_5)), exp(g, mult(sk[i1_6], sk)));
          enc_8: bitstring <- Serialize(pkE_10);
          pkS_4: G_t <- exp(g, sk);
          kemContext_10: GGG_t <- concatContext(pkE_10, pk_R, pkS_4);
          key: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_10);
          info: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_10);
          zz_10: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key, info));
          return(AuthEncap_tuple(zz_10, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          dh_11: GG_t <- concatDH(exp(pk_R, z_6), exp(pk_R, sk));
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          kemContext_11: GGG_t <- concatContext(pkE_11, pk_R, pkS_5);
          key: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_11);
          info: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_11);
          zz_11: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key, info));
          return(AuthEncap_tuple(zz_11, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        let Serialize(pkE_3: G_t) = enc_2 in
          dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
          pkR_1: G_t <- exp(g, sk);
          kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
          key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
          info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
          zz_3: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_1, info_1));
          return(AuthDecap_Some(zz_3))
        else
          return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        return(ExtractAndExpand_inner(key_extr_3, x1))
      ))


Applying SA rename key
  - Rename variable key into key_6, key_5
yields

Game 13 is
      Ostart() :=
      key_extr_3 <-R hash_key_t;
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          dh_10: GG_t <- concatDH(exp(g, mult(sk[i1_6], z_5)), exp(g, mult(sk[i1_6], sk)));
          enc_8: bitstring <- Serialize(pkE_10);
          pkS_4: G_t <- exp(g, sk);
          kemContext_10: GGG_t <- concatContext(pkE_10, pk_R, pkS_4);
          key_5: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_10);
          info: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_10);
          zz_10: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_5, info));
          return(AuthEncap_tuple(zz_10, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          dh_11: GG_t <- concatDH(exp(pk_R, z_6), exp(pk_R, sk));
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          kemContext_11: GGG_t <- concatContext(pkE_11, pk_R, pkS_5);
          key_6: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_11);
          info: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_11);
          zz_11: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_6, info));
          return(AuthEncap_tuple(zz_11, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        let Serialize(pkE_3: G_t) = enc_2 in
          dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
          pkR_1: G_t <- exp(g, sk);
          kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
          key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
          info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
          zz_3: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_1, info_1));
          return(AuthDecap_Some(zz_3))
        else
          return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        return(ExtractAndExpand_inner(key_extr_3, x1))
      ))


Applying SA rename info
  - Rename variable info into info_6, info_5
yields

Game 14 is
      Ostart() :=
      key_extr_3 <-R hash_key_t;
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          dh_10: GG_t <- concatDH(exp(g, mult(sk[i1_6], z_5)), exp(g, mult(sk[i1_6], sk)));
          enc_8: bitstring <- Serialize(pkE_10);
          pkS_4: G_t <- exp(g, sk);
          kemContext_10: GGG_t <- concatContext(pkE_10, pk_R, pkS_4);
          key_5: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_10);
          info_5: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_10);
          zz_10: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_5, info_5));
          return(AuthEncap_tuple(zz_10, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          dh_11: GG_t <- concatDH(exp(pk_R, z_6), exp(pk_R, sk));
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          kemContext_11: GGG_t <- concatContext(pkE_11, pk_R, pkS_5);
          key_6: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_11);
          info_6: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_11);
          zz_11: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_6, info_6));
          return(AuthEncap_tuple(zz_11, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
 {218}  let Serialize(pkE_3: G_t) = enc_2 in
          dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
          pkR_1: G_t <- exp(g, sk);
          kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
          key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
          info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
          zz_3: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_1, info_1));
          return(AuthDecap_Some(zz_3))
        else
          return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        return(ExtractAndExpand_inner(key_extr_3, x1))
      ))


Applying insert instruction find ie1 <= Qe, i1 <= N suchthat
      defined(sk[i1], pk_R[ie1, i1], zz_10[ie1, i1], z_5[ie1, i1], enc_8[ie1, i1])
      && exp(g, sk) = pk_R[ie1, i1]
      && pk_S = exp(g, sk[i1])
      && enc_8[ie1, i1] = enc_2 then at occurrence 218
yields

Game 15 is
      Ostart() :=
      key_extr_3 <-R hash_key_t;
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          dh_10: GG_t <- concatDH(exp(g, mult(sk[i1_6], z_5)), exp(g, mult(sk[i1_6], sk)));
          enc_8: bitstring <- Serialize(pkE_10);
          pkS_4: G_t <- exp(g, sk);
          kemContext_10: GGG_t <- concatContext(pkE_10, pk_R, pkS_4);
          key_5: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_10);
          info_5: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_10);
          zz_10: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_5, info_5));
          return(AuthEncap_tuple(zz_10, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          dh_11: GG_t <- concatDH(exp(pk_R, z_6), exp(pk_R, sk));
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          kemContext_11: GGG_t <- concatContext(pkE_11, pk_R, pkS_5);
          key_6: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_11);
          info_6: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_11);
          zz_11: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_6, info_6));
          return(AuthEncap_tuple(zz_11, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        find ie1_2 = ie1_3 <= Qe, i1_8 = i1_9 <= N suchthat defined(sk[i1_9], pk_R[ie1_3, i1_9], zz_10[ie1_3, i1_9], z_5[ie1_3, i1_9], enc_8[ie1_3, i1_9]) && (exp(g, sk) = pk_R[ie1_3, i1_9]) && (pk_S = exp(g, sk[i1_9])) && (enc_8[ie1_3, i1_9] = enc_2) then
          let Serialize(pkE_3: G_t) = enc_2 in
            dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
            pkR_1: G_t <- exp(g, sk);
            kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
            key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
            info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
            zz_3: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_1, info_1));
            return(AuthDecap_Some({319}zz_3))
          else
            return(AuthDecap_None)
        else
          let Serialize(pkE_3: G_t) = enc_2 in
            dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
            pkR_1: G_t <- exp(g, sk);
            kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
            key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
            info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
            zz_3: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_1, info_1));
            return(AuthDecap_Some(zz_3))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        return(ExtractAndExpand_inner(key_extr_3, x1))
      ))


Applying replace term at occurrence 319 with zz_10[ie1_2, i1_8] [probability N * N * PCollKey]
yields

Game 16 is
      Ostart() :=
      key_extr_3 <-R hash_key_t;
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          dh_10: GG_t <- concatDH(exp(g, mult(sk[i1_6], z_5)), exp(g, mult(sk[i1_6], sk)));
          enc_8: bitstring <- Serialize(pkE_10);
          pkS_4: G_t <- exp(g, sk);
          kemContext_10: GGG_t <- concatContext(pkE_10, pk_R, pkS_4);
          key_5: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_10);
          info_5: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_10);
          zz_10: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_5, info_5));
          return(AuthEncap_tuple(zz_10, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          dh_11: GG_t <- concatDH(exp(pk_R, z_6), exp(pk_R, sk));
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          kemContext_11: GGG_t <- concatContext(pkE_11, pk_R, pkS_5);
          key_6: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_11);
          info_6: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_11);
          zz_11: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_6, info_6));
          return(AuthEncap_tuple(zz_11, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        find ie1_2 = ie1_3 <= Qe, i1_8 = i1_9 <= N suchthat defined(zz_10[ie1_3, i1_9], enc_8[ie1_3, i1_9], sk[i1_9], pk_R[ie1_3, i1_9]) && (exp(g, sk) = pk_R[ie1_3, i1_9]) && (pk_S = exp(g, sk[i1_9])) && (enc_8[ie1_3, i1_9] = enc_2) then
          let Serialize(pkE_3: G_t) = enc_2 in
            dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
            pkR_1: G_t <- exp(g, sk);
            kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
            key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
            info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
            zz_3: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_1, info_1));
            return(AuthDecap_Some(zz_10[ie1_2, i1_8]))
          else
            return(AuthDecap_None)
        else
          let Serialize(pkE_3: G_t) = enc_2 in
            dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
            pkR_1: G_t <- exp(g, sk);
            kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
            key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
            info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
            zz_3: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_1, info_1));
            return(AuthDecap_Some(zz_3))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        return(ExtractAndExpand_inner(key_extr_3, x1))
      ))


Applying remove assignments of findcond
  - Remove assignments on zz_3 (definition removed, all usages removed)
  - Remove assignments on key_1 (definition removed, all usages removed)
  - Remove assignments on info_1 (definition removed, all usages removed)
  - Remove assignments on dh_3 (definition removed, all usages removed)
  - Remove assignments on kemContext_3 (definition removed, all usages removed)
  - Remove assignments on pkR_1 (definition removed, all usages removed)
yields

Game 17 is
      Ostart() :=
      key_extr_3 <-R hash_key_t;
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          dh_10: GG_t <- concatDH(exp(g, mult(sk[i1_6], z_5)), exp(g, mult(sk[i1_6], sk)));
          enc_8: bitstring <- Serialize(pkE_10);
          pkS_4: G_t <- exp(g, sk);
          kemContext_10: GGG_t <- concatContext(pkE_10, pk_R, pkS_4);
          key_5: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_10);
          info_5: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_10);
          zz_10: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_5, info_5));
          return(AuthEncap_tuple(zz_10, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          dh_11: GG_t <- concatDH(exp(pk_R, z_6), exp(pk_R, sk));
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          kemContext_11: GGG_t <- concatContext(pkE_11, pk_R, pkS_5);
          key_6: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_11);
          info_6: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_11);
          zz_11: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_6, info_6));
          return(AuthEncap_tuple(zz_11, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
 {218}  find ie1_2 = ie1_3 <= Qe, i1_8 = i1_9 <= N suchthat defined(zz_10[ie1_3, i1_9], enc_8[ie1_3, i1_9], sk[i1_9], pk_R[ie1_3, i1_9]) && {226}((exp(g, sk) = pk_R[ie1_3, i1_9]) && (pk_S = exp(g, sk[i1_9])) && (enc_8[ie1_3, i1_9] = enc_2)) then
 {251}    let Serialize(pkE_3: G_t) = {252}enc_2 in
            return(AuthDecap_Some(zz_10[ie1_2, i1_8]))
          else
            return(AuthDecap_None)
        else
          let Serialize(pkE_3: G_t) = enc_2 in
            dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
            pkR_1: G_t <- exp(g, sk);
            kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
            key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
            info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
            zz_3: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_1, info_1));
            return(AuthDecap_Some(zz_3))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        return(ExtractAndExpand_inner(key_extr_3, x1))
      ))


Applying simplify [probability N * N * PCollKey]
  - Simplification pass
    - Replaced ((exp(g, sk) = pk_R[ie1_3, i1_9]) && (pk_S = exp(g, sk[i1_9])) && (enc_8[ie1_3, i1_9] = enc_2)) with ((i = i1_6[ie1_3, i1_9]) && (pk_S = exp(g, sk[i1_9])) && (enc_8[ie1_3, i1_9] = enc_2)) at 226
    - Replaced enc_2 with Serialize(pkE_10[ie1_2, i1_8]) at 252
    - Remove else branch of let at 251
    - Simplify pattern Serialize(pkE_3: G_t) (tuple expanded) at 251
    - Replaced defined condition zz_10[ie1_3, i1_9], enc_8[ie1_3, i1_9], sk[i1_9], pk_R[ie1_3, i1_9] with zz_10[ie1_3, i1_9], pkE_10[ie1_3, i1_9], enc_8[ie1_3, i1_9], sk[i1_9], i1_6[ie1_3, i1_9] in find at 218
yields

Game 18 is
      Ostart() :=
      key_extr_3 <-R hash_key_t;
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          dh_10: GG_t <- concatDH(exp(g, mult(sk[i1_6], z_5)), exp(g, mult(sk[i1_6], sk)));
          enc_8: bitstring <- Serialize(pkE_10);
          pkS_4: G_t <- exp(g, sk);
          kemContext_10: GGG_t <- concatContext(pkE_10, pk_R, pkS_4);
          key_5: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_10);
          info_5: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_10);
          zz_10: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_5, info_5));
          return(AuthEncap_tuple(zz_10, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          dh_11: GG_t <- concatDH(exp(pk_R, z_6), exp(pk_R, sk));
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          kemContext_11: GGG_t <- concatContext(pkE_11, pk_R, pkS_5);
          key_6: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_11);
          info_6: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_11);
          zz_11: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_6, info_6));
          return(AuthEncap_tuple(zz_11, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        find ie1_2 = ie1_3 <= Qe, i1_8 = i1_9 <= N suchthat defined(zz_10[ie1_3, i1_9], pkE_10[ie1_3, i1_9], enc_8[ie1_3, i1_9], sk[i1_9], i1_6[ie1_3, i1_9]) && (i = i1_6[ie1_3, i1_9]) && (pk_S = exp(g, sk[i1_9])) && (enc_8[ie1_3, i1_9] = enc_2) then
          pkE_3: G_t <- pkE_10[ie1_2, i1_8];
          return(AuthDecap_Some(zz_10[ie1_2, i1_8]))
        else
          let Serialize(pkE_3: G_t) = enc_2 in
            dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
            pkR_1: G_t <- exp(g, sk);
            kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
            key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
            info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
            zz_3: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_1, info_1));
            return(AuthDecap_Some(zz_3))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        return(ExtractAndExpand_inner(key_extr_3, x1))
      ))


Applying remove assignments of findcond
  - Remove assignments on pkE_3 (definition removed, all usages removed)
yields

Game 19 is
      Ostart() :=
      key_extr_3 <-R hash_key_t;
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          dh_10: GG_t <- concatDH(exp(g, mult(sk[i1_6], z_5)), exp(g, mult(sk[i1_6], sk)));
          enc_8: bitstring <- Serialize(pkE_10);
          pkS_4: G_t <- exp(g, sk);
          kemContext_10: GGG_t <- concatContext(pkE_10, pk_R, pkS_4);
          key_5: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_10);
          info_5: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_10);
          zz_10: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_5, info_5));
          return(AuthEncap_tuple(zz_10, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          dh_11: GG_t <- concatDH(exp(pk_R, z_6), exp(pk_R, sk));
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          kemContext_11: GGG_t <- concatContext(pkE_11, pk_R, pkS_5);
          key_6: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_11);
          info_6: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_11);
          zz_11: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_6, info_6));
          return(AuthEncap_tuple(zz_11, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        find ie1_2 = ie1_3 <= Qe, i1_8 = i1_9 <= N suchthat defined(zz_10[ie1_3, i1_9], pkE_10[ie1_3, i1_9], enc_8[ie1_3, i1_9], sk[i1_9], i1_6[ie1_3, i1_9]) && (i = i1_6[ie1_3, i1_9]) && (pk_S = exp(g, sk[i1_9])) && (enc_8[ie1_3, i1_9] = enc_2) then
          return(AuthDecap_Some(zz_10[ie1_2, i1_8]))
        else
          let Serialize(pkE_3: G_t) = enc_2 in
            dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
            pkR_1: G_t <- exp(g, sk);
            kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
            key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
            info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
            zz_3: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_1, info_1));
            return(AuthDecap_Some(zz_3))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
 {354}  return(ExtractAndExpand_inner(key_extr_3, x1))
      ))


Applying insert instruction let eae_input(
      salt: extract_salt_t,
      concatExtract(
        protocol1: label_protocol_t,
        suite1: suite_id_t,
        label1: label_extract_t,
        concatDH(dh1: G_t, dh2: G_t)),
      concatExpand(
        l: two_byte_t,
        protocol2: label_protocol_t,
        suite2: suite_id_t,
        label2: label_expand_t,
        concatContext(pkE': G_t, pkR': G_t, pkS': G_t))) = x1 in at occurrence 354
yields

Game 20 is
      Ostart() :=
      key_extr_3 <-R hash_key_t;
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          dh_10: GG_t <- concatDH(exp(g, mult(sk[i1_6], z_5)), exp(g, mult(sk[i1_6], sk)));
          enc_8: bitstring <- Serialize(pkE_10);
          pkS_4: G_t <- exp(g, sk);
          kemContext_10: GGG_t <- concatContext(pkE_10, pk_R, pkS_4);
          key_5: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_10);
          info_5: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_10);
          zz_10: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_5, info_5));
          return(AuthEncap_tuple(zz_10, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          dh_11: GG_t <- concatDH(exp(pk_R, z_6), exp(pk_R, sk));
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          kemContext_11: GGG_t <- concatContext(pkE_11, pk_R, pkS_5);
          key_6: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_11);
          info_6: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_11);
          zz_11: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_6, info_6));
          return(AuthEncap_tuple(zz_11, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        find ie1_2 = ie1_3 <= Qe, i1_8 = i1_9 <= N suchthat defined(zz_10[ie1_3, i1_9], pkE_10[ie1_3, i1_9], enc_8[ie1_3, i1_9], sk[i1_9], i1_6[ie1_3, i1_9]) && (i = i1_6[ie1_3, i1_9]) && (pk_S = exp(g, sk[i1_9])) && (enc_8[ie1_3, i1_9] = enc_2) then
          return(AuthDecap_Some(zz_10[ie1_2, i1_8]))
        else
          let Serialize(pkE_3: G_t) = enc_2 in
            dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
            pkR_1: G_t <- exp(g, sk);
            kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
            key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
            info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
            zz_3: eae_output_t <- ExtractAndExpand_inner(key_extr_3, eae_input(lbytes_empty, key_1, info_1));
            return(AuthDecap_Some(zz_3))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        let eae_input(salt: extract_salt_t, concatExtract(protocol1: label_protocol_t, suite1: suite_id_t, label1: label_extract_t, concatDH(dh1: G_t, dh2: G_t)), concatExpand(l: two_byte_t, protocol2: label_protocol_t, suite2: suite_id_t, label2: label_expand_t, concatContext(pkE': G_t, pkR': G_t, pkS': G_t))) = x1 in
          return(ExtractAndExpand_inner(key_extr_3, x1))
        else
          return(ExtractAndExpand_inner(key_extr_3, x1))
      ))


Applying equivalence rom(ExtractAndExpand_inner)
  - Equivalence rom(ExtractAndExpand_inner) with variables: key_extr_3 -> hk
yields

Game 21 is
      Ostart() :=
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          dh_10: GG_t <- concatDH(exp(g, mult(sk[i1_6], z_5)), exp(g, mult(sk[i1_6], sk)));
          enc_8: bitstring <- Serialize(pkE_10);
          pkS_4: G_t <- exp(g, sk);
          kemContext_10: GGG_t <- concatContext(pkE_10, pk_R, pkS_4);
          key_5: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_10);
          info_5: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_10);
          zz_10: eae_output_t <- (x_O_1: eae_input_t <- eae_input(lbytes_empty, key_5, info_5); {104}find [unique] u_48 = ri_48 <= Qe, u_49 = ri_49 <= N suchthat defined(x_O[ri_48, ri_49], r[ri_48, ri_49]) && (x_O_1 = x_O[ri_48, ri_49]) then r[u_48, u_49] orfind u_46 = ri_46 <= Qe, u_47 = ri_47 <= N suchthat defined(x_O_1[ri_46, ri_47], r_1[ri_46, ri_47]) && (x_O_1 = x_O_1[ri_46, ri_47]) then r_1[u_46, u_47] orfind u_44 = ri_44 <= Qd, u_45 = ri_45 <= N suchthat defined(x_O_2[ri_44, ri_45], r_2[ri_44, ri_45]) && (x_O_1 = x_O_2[ri_44, ri_45]) then r_2[u_44, u_45] orfind u_42 = ri_42 <= Qh, u_43 = ri_43 <= N suchthat defined(x_O_3[ri_42, ri_43], r_3[ri_42, ri_43]) && (x_O_1 = x_O_3[ri_42, ri_43]) then r_3[u_42, u_43] orfind u_40 = ri_40 <= Qh, u_41 = ri_41 <= N suchthat defined(x_O_4[ri_40, ri_41], r_4[ri_40, ri_41]) && {181}(x_O_1 = x_O_4[ri_40, ri_41]) then r_4[u_40, u_41] else r_1 <-R eae_output_t; r_1);
          return(AuthEncap_tuple(zz_10, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          dh_11: GG_t <- concatDH(exp(pk_R, z_6), exp(pk_R, sk));
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          kemContext_11: GGG_t <- concatContext(pkE_11, pk_R, pkS_5);
          key_6: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_11);
          info_6: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_11);
          zz_11: eae_output_t <- (x_O: eae_input_t <- eae_input(lbytes_empty, key_6, info_6); {288}find [unique] u_38 = ri_38 <= Qe, u_39 = ri_39 <= N suchthat defined(x_O[ri_38, ri_39], r[ri_38, ri_39]) && (x_O = x_O[ri_38, ri_39]) then r[u_38, u_39] orfind u_36 = ri_36 <= Qe, u_37 = ri_37 <= N suchthat defined(x_O_1[ri_36, ri_37], r_1[ri_36, ri_37]) && (x_O = x_O_1[ri_36, ri_37]) then r_1[u_36, u_37] orfind u_34 = ri_34 <= Qd, u_35 = ri_35 <= N suchthat defined(x_O_2[ri_34, ri_35], r_2[ri_34, ri_35]) && (x_O = x_O_2[ri_34, ri_35]) then r_2[u_34, u_35] orfind u_32 = ri_32 <= Qh, u_33 = ri_33 <= N suchthat defined(x_O_3[ri_32, ri_33], r_3[ri_32, ri_33]) && (x_O = x_O_3[ri_32, ri_33]) then r_3[u_32, u_33] orfind u_30 = ri_30 <= Qh, u_31 = ri_31 <= N suchthat defined(x_O_4[ri_30, ri_31], r_4[ri_30, ri_31]) && {365}(x_O = x_O_4[ri_30, ri_31]) then r_4[u_30, u_31] else r <-R eae_output_t; r);
          return(AuthEncap_tuple(zz_11, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        find ie1_2 = ie1_3 <= Qe, i1_8 = i1_9 <= N suchthat defined(zz_10[ie1_3, i1_9], enc_8[ie1_3, i1_9], sk[i1_9], i1_6[ie1_3, i1_9]) && (i = i1_6[ie1_3, i1_9]) && (pk_S = exp(g, sk[i1_9])) && (enc_8[ie1_3, i1_9] = enc_2) then
          return(AuthDecap_Some(zz_10[ie1_2, i1_8]))
        else
          let Serialize(pkE_3: G_t) = enc_2 in
            dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
            pkR_1: G_t <- exp(g, sk);
            kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
            key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
            info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
            zz_3: eae_output_t <- (x_O_2: eae_input_t <- eae_input(lbytes_empty, key_1, info_1); {508}find [unique] u_28 = ri_28 <= Qe, u_29 = ri_29 <= N suchthat defined(x_O[ri_28, ri_29], r[ri_28, ri_29]) && (x_O_2 = x_O[ri_28, ri_29]) then r[u_28, u_29] orfind u_26 = ri_26 <= Qe, u_27 = ri_27 <= N suchthat defined(x_O_1[ri_26, ri_27], r_1[ri_26, ri_27]) && (x_O_2 = x_O_1[ri_26, ri_27]) then r_1[u_26, u_27] orfind u_24 = ri_24 <= Qd, u_25 = ri_25 <= N suchthat defined(x_O_2[ri_24, ri_25], r_2[ri_24, ri_25]) && (x_O_2 = x_O_2[ri_24, ri_25]) then r_2[u_24, u_25] orfind u_22 = ri_22 <= Qh, u_23 = ri_23 <= N suchthat defined(x_O_3[ri_22, ri_23], r_3[ri_22, ri_23]) && (x_O_2 = x_O_3[ri_22, ri_23]) then r_3[u_22, u_23] orfind u_20 = ri_20 <= Qh, u_21 = ri_21 <= N suchthat defined(x_O_4[ri_20, ri_21], r_4[ri_20, ri_21]) && {585}(x_O_2 = x_O_4[ri_20, ri_21]) then r_4[u_20, u_21] else r_2 <-R eae_output_t; r_2);
            return(AuthDecap_Some(zz_3))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        let eae_input(salt: extract_salt_t, concatExtract(protocol1: label_protocol_t, suite1: suite_id_t, label1: label_extract_t, concatDH(dh1: G_t, dh2: G_t)), concatExpand(l: two_byte_t, protocol2: label_protocol_t, suite2: suite_id_t, label2: label_expand_t, concatContext(pkE': G_t, pkR': G_t, pkS': G_t))) = x1 in
          return((x_O_3: eae_input_t <- x1; {643}find [unique] u_18 = ri_18 <= Qe, u_19 = ri_19 <= N suchthat defined(x_O[ri_18, ri_19], r[ri_18, ri_19]) && (x_O_3 = x_O[ri_18, ri_19]) then r[u_18, u_19] orfind u_16 = ri_16 <= Qe, u_17 = ri_17 <= N suchthat defined(x_O_1[ri_16, ri_17], r_1[ri_16, ri_17]) && (x_O_3 = x_O_1[ri_16, ri_17]) then r_1[u_16, u_17] orfind u_14 = ri_14 <= Qd, u_15 = ri_15 <= N suchthat defined(x_O_2[ri_14, ri_15], r_2[ri_14, ri_15]) && (x_O_3 = x_O_2[ri_14, ri_15]) then r_2[u_14, u_15] orfind u_12 = ri_12 <= Qh, u_13 = ri_13 <= N suchthat defined(x_O_3[ri_12, ri_13], r_3[ri_12, ri_13]) && (x_O_3 = x_O_3[ri_12, ri_13]) then r_3[u_12, u_13] orfind u_10 = ri_10 <= Qh, u_11 = ri_11 <= N suchthat defined(x_O_4[ri_10, ri_11], r_4[ri_10, ri_11]) && {720}(x_O_3 = x_O_4[ri_10, ri_11]) then r_4[u_10, u_11] else r_3 <-R eae_output_t; r_3))
        else
          return((x_O_4: eae_input_t <- x1; {745}find [unique] u_8 = ri_8 <= Qe, u_9 = ri_9 <= N suchthat defined(x_O[ri_8, ri_9], r[ri_8, ri_9]) && {750}(x_O_4 = x_O[ri_8, ri_9]) then r[u_8, u_9] orfind u_6 = ri_6 <= Qe, u_7 = ri_7 <= N suchthat defined(x_O_1[ri_6, ri_7], r_1[ri_6, ri_7]) && {768}(x_O_4 = x_O_1[ri_6, ri_7]) then r_1[u_6, u_7] orfind u_4 = ri_4 <= Qd, u_5 = ri_5 <= N suchthat defined(x_O_2[ri_4, ri_5], r_2[ri_4, ri_5]) && {786}(x_O_4 = x_O_2[ri_4, ri_5]) then r_2[u_4, u_5] orfind u_2 = ri_2 <= Qh, u_3 = ri_3 <= N suchthat defined(x_O_3[ri_2, ri_3], r_3[ri_2, ri_3]) && {804}(x_O_4 = x_O_3[ri_2, ri_3]) then r_3[u_2, u_3] orfind u = ri <= Qh, u_1 = ri_1 <= N suchthat defined(x_O_4[ri, ri_1], r_4[ri, ri_1]) && (x_O_4 = x_O_4[ri, ri_1]) then r_4[u, u_1] else r_4 <-R eae_output_t; r_4))
      ))


Applying simplify (non-expanded game) [probability N * N * PCollKey]
  - Simplification pass
    - Replaced (x_O_1 = x_O_4[ri_40, ri_41]) with false at 181
    - Remove branch 5 in find at 104
    - Replaced (x_O = x_O_4[ri_30, ri_31]) with false at 365
    - Remove branch 5 in find at 288
    - Replaced (x_O_2 = x_O_4[ri_20, ri_21]) with false at 585
    - Remove branch 5 in find at 508
    - Replaced (x_O_3 = x_O_4[ri_10, ri_11]) with false at 720
    - Remove branch 5 in find at 643
    - Replaced (x_O_4 = x_O_3[ri_2, ri_3]) with false at 804
    - Remove branch 4 in find at 745
    - Replaced (x_O_4 = x_O_2[ri_4, ri_5]) with false at 786
    - Remove branch 3 in find at 745
    - Replaced (x_O_4 = x_O_1[ri_6, ri_7]) with false at 768
    - Remove branch 2 in find at 745
    - Replaced (x_O_4 = x_O[ri_8, ri_9]) with false at 750
    - Remove branch 1 in find at 745
yields

Game 22 is
      Ostart() :=
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          dh_10: GG_t <- concatDH(exp(g, mult(sk[i1_6], z_5)), exp(g, mult(sk[i1_6], sk)));
          enc_8: bitstring <- Serialize(pkE_10);
          pkS_4: G_t <- exp(g, sk);
          kemContext_10: GGG_t <- concatContext(pkE_10, pk_R, pkS_4);
          key_5: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_10);
          info_5: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_10);
          zz_10: eae_output_t <- (x_O_1: eae_input_t <- eae_input(lbytes_empty, key_5, info_5); {104}find [unique] u_48 = ri_48 <= Qe, u_49 = ri_49 <= N suchthat defined(x_O[ri_48, ri_49], r[ri_48, ri_49]) && (x_O_1 = x_O[ri_48, ri_49]) then r[u_48, u_49] orfind u_46 = ri_46 <= Qe, u_47 = ri_47 <= N suchthat defined(x_O_1[ri_46, ri_47], r_1[ri_46, ri_47]) && (x_O_1 = x_O_1[ri_46, ri_47]) then r_1[u_46, u_47] orfind u_44 = ri_44 <= Qd, u_45 = ri_45 <= N suchthat defined(x_O_2[ri_44, ri_45], r_2[ri_44, ri_45]) && (x_O_1 = x_O_2[ri_44, ri_45]) then r_2[u_44, u_45] orfind u_42 = ri_42 <= Qh, u_43 = ri_43 <= N suchthat defined(x_O_3[ri_42, ri_43], r_3[ri_42, ri_43]) && (x_O_1 = x_O_3[ri_42, ri_43]) then r_3[u_42, u_43] else r_1 <-R eae_output_t; r_1);
          return(AuthEncap_tuple(zz_10, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          dh_11: GG_t <- concatDH(exp(pk_R, z_6), exp(pk_R, sk));
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          kemContext_11: GGG_t <- concatContext(pkE_11, pk_R, pkS_5);
          key_6: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_11);
          info_6: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_11);
          zz_11: eae_output_t <- (x_O: eae_input_t <- eae_input(lbytes_empty, key_6, info_6); {270}find [unique] u_38 = ri_38 <= Qe, u_39 = ri_39 <= N suchthat defined(x_O[ri_38, ri_39], r[ri_38, ri_39]) && (x_O = x_O[ri_38, ri_39]) then r[u_38, u_39] orfind u_36 = ri_36 <= Qe, u_37 = ri_37 <= N suchthat defined(x_O_1[ri_36, ri_37], r_1[ri_36, ri_37]) && (x_O = x_O_1[ri_36, ri_37]) then r_1[u_36, u_37] orfind u_34 = ri_34 <= Qd, u_35 = ri_35 <= N suchthat defined(x_O_2[ri_34, ri_35], r_2[ri_34, ri_35]) && (x_O = x_O_2[ri_34, ri_35]) then r_2[u_34, u_35] orfind u_32 = ri_32 <= Qh, u_33 = ri_33 <= N suchthat defined(x_O_3[ri_32, ri_33], r_3[ri_32, ri_33]) && (x_O = x_O_3[ri_32, ri_33]) then r_3[u_32, u_33] else r <-R eae_output_t; r);
          return(AuthEncap_tuple(zz_11, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        find ie1_2 = ie1_3 <= Qe, i1_8 = i1_9 <= N suchthat defined(zz_10[ie1_3, i1_9], enc_8[ie1_3, i1_9], sk[i1_9], i1_6[ie1_3, i1_9]) && (i = i1_6[ie1_3, i1_9]) && (pk_S = exp(g, sk[i1_9])) && (enc_8[ie1_3, i1_9] = enc_2) then
          return(AuthDecap_Some(zz_10[ie1_2, i1_8]))
        else
          let Serialize(pkE_3: G_t) = enc_2 in
            dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
            pkR_1: G_t <- exp(g, sk);
            kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
            key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
            info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
            zz_3: eae_output_t <- (x_O_2: eae_input_t <- eae_input(lbytes_empty, key_1, info_1); {472}find [unique] u_28 = ri_28 <= Qe, u_29 = ri_29 <= N suchthat defined(x_O[ri_28, ri_29], r[ri_28, ri_29]) && (x_O_2 = x_O[ri_28, ri_29]) then r[u_28, u_29] orfind u_26 = ri_26 <= Qe, u_27 = ri_27 <= N suchthat defined(x_O_1[ri_26, ri_27], r_1[ri_26, ri_27]) && (x_O_2 = x_O_1[ri_26, ri_27]) then r_1[u_26, u_27] orfind u_24 = ri_24 <= Qd, u_25 = ri_25 <= N suchthat defined(x_O_2[ri_24, ri_25], r_2[ri_24, ri_25]) && (x_O_2 = x_O_2[ri_24, ri_25]) then r_2[u_24, u_25] orfind u_22 = ri_22 <= Qh, u_23 = ri_23 <= N suchthat defined(x_O_3[ri_22, ri_23], r_3[ri_22, ri_23]) && (x_O_2 = x_O_3[ri_22, ri_23]) then r_3[u_22, u_23] else r_2 <-R eae_output_t; r_2);
            return(AuthDecap_Some(zz_3))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        let eae_input(salt: extract_salt_t, concatExtract(protocol1: label_protocol_t, suite1: suite_id_t, label1: label_extract_t, concatDH(dh1: G_t, dh2: G_t)), concatExpand(l: two_byte_t, protocol2: label_protocol_t, suite2: suite_id_t, label2: label_expand_t, concatContext(pkE': G_t, pkR': G_t, pkS': G_t))) = x1 in
          return((x_O_3: eae_input_t <- x1; find [unique] u_18 = ri_18 <= Qe, u_19 = ri_19 <= N suchthat defined(x_O[ri_18, ri_19], r[ri_18, ri_19]) && (x_O_3 = x_O[ri_18, ri_19]) then r[u_18, u_19] orfind u_16 = ri_16 <= Qe, u_17 = ri_17 <= N suchthat defined(x_O_1[ri_16, ri_17], r_1[ri_16, ri_17]) && (x_O_3 = x_O_1[ri_16, ri_17]) then r_1[u_16, u_17] orfind u_14 = ri_14 <= Qd, u_15 = ri_15 <= N suchthat defined(x_O_2[ri_14, ri_15], r_2[ri_14, ri_15]) && (x_O_3 = x_O_2[ri_14, ri_15]) then r_2[u_14, u_15] orfind u_12 = ri_12 <= Qh, u_13 = ri_13 <= N suchthat defined(x_O_3[ri_12, ri_13], r_3[ri_12, ri_13]) && (x_O_3 = x_O_3[ri_12, ri_13]) then r_3[u_12, u_13] else r_3 <-R eae_output_t; r_3))
        else
          return((x_O_4: eae_input_t <- x1; find [unique] u = ri <= Qh, u_1 = ri_1 <= N suchthat defined(x_O_4[ri, ri_1], r_4[ri, ri_1]) && (x_O_4 = x_O_4[ri, ri_1]) then r_4[u, u_1] else r_4 <-R eae_output_t; r_4))
      ))


Applying expand [probability (4 * Qe * Qe * N + N * N + N * N * Qe) * PCollKey]
  - Expand if/find/let
    - Remove branch 1 in find at 472
    - Remove branch 3 in find at 270
    - Remove branch 2 in find at 270
    - Remove branch 1 in find at 270
    - Remove branch 2 in find at 104
    - Remove branch 1 in find at 104
yields

Game 23 is
      Ostart() :=
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          dh_10: GG_t <- concatDH(exp(g, mult(sk[i1_6], z_5)), exp(g, mult(sk[i1_6], sk)));
          enc_8: bitstring <- Serialize(pkE_10);
          pkS_4: G_t <- exp(g, sk);
          kemContext_10: GGG_t <- concatContext(pkE_10, pk_R, pkS_4);
          key_5: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_10);
          info_5: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_10);
          x_O_1: eae_input_t <- eae_input(lbytes_empty, key_5, info_5);
          find [unique] u_44 = ri_44 <= Qd, u_45 = ri_45 <= N suchthat defined(x_O_2[ri_44, ri_45], r_2[ri_44, ri_45]) && (x_O_1 = x_O_2[ri_44, ri_45]) then
            zz_10: eae_output_t <- r_2[u_44, u_45];
            return(AuthEncap_tuple(zz_10, enc_8))
          orfind u_42 = ri_42 <= Qh, u_43 = ri_43 <= N suchthat defined(x_O_3[ri_42, ri_43], r_3[ri_42, ri_43]) && (x_O_1 = x_O_3[ri_42, ri_43]) then
            zz_10: eae_output_t <- r_3[u_42, u_43];
            return(AuthEncap_tuple(zz_10, enc_8))
          else
            r_1 <-R eae_output_t;
            zz_10: eae_output_t <- r_1;
            return(AuthEncap_tuple(zz_10, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          dh_11: GG_t <- concatDH(exp(pk_R, z_6), exp(pk_R, sk));
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          kemContext_11: GGG_t <- concatContext(pkE_11, pk_R, pkS_5);
          key_6: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_11);
          info_6: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_11);
          x_O: eae_input_t <- eae_input(lbytes_empty, key_6, info_6);
          find [unique] u_32 = ri_32 <= Qh, u_33 = ri_33 <= N suchthat defined(x_O_3[ri_32, ri_33], r_3[ri_32, ri_33]) && (x_O = x_O_3[ri_32, ri_33]) then
            zz_11: eae_output_t <- r_3[u_32, u_33];
            return(AuthEncap_tuple(zz_11, enc_9))
          else
            r <-R eae_output_t;
            zz_11: eae_output_t <- r;
            return(AuthEncap_tuple(zz_11, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        find ie1_2 = ie1_3 <= Qe, i1_8 = i1_9 <= N suchthat defined(zz_10[ie1_3, i1_9], enc_8[ie1_3, i1_9], sk[i1_9], i1_6[ie1_3, i1_9]) && (i = i1_6[ie1_3, i1_9]) && (pk_S = exp(g, sk[i1_9])) && (enc_8[ie1_3, i1_9] = enc_2) then
          return(AuthDecap_Some(zz_10[ie1_2, i1_8]))
        else
          let Serialize(pkE_3: G_t) = enc_2 in
            dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
            pkR_1: G_t <- exp(g, sk);
            kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
            key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
            info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
            x_O_2: eae_input_t <- eae_input(lbytes_empty, key_1, info_1);
            find [unique] u_26 = ri_26 <= Qe, u_27 = ri_27 <= N suchthat defined(x_O_1[ri_26, ri_27], r_1[ri_26, ri_27]) && (x_O_2 = x_O_1[ri_26, ri_27]) then
              zz_3: eae_output_t <- r_1[u_26, u_27];
              return(AuthDecap_Some(zz_3))
            orfind u_24 = ri_24 <= Qd, u_25 = ri_25 <= N suchthat defined(x_O_2[ri_24, ri_25], r_2[ri_24, ri_25]) && (x_O_2 = x_O_2[ri_24, ri_25]) then
              zz_3: eae_output_t <- r_2[u_24, u_25];
              return(AuthDecap_Some(zz_3))
            orfind u_22 = ri_22 <= Qh, u_23 = ri_23 <= N suchthat defined(x_O_3[ri_22, ri_23], r_3[ri_22, ri_23]) && (x_O_2 = x_O_3[ri_22, ri_23]) then
              zz_3: eae_output_t <- r_3[u_22, u_23];
              return(AuthDecap_Some(zz_3))
            else
              r_2 <-R eae_output_t;
              zz_3: eae_output_t <- r_2;
              return(AuthDecap_Some(zz_3))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        let eae_input(salt: extract_salt_t, concatExtract(protocol1: label_protocol_t, suite1: suite_id_t, label1: label_extract_t, concatDH(dh1: G_t, dh2: G_t)), concatExpand(l: two_byte_t, protocol2: label_protocol_t, suite2: suite_id_t, label2: label_expand_t, concatContext(pkE': G_t, pkR': G_t, pkS': G_t))) = x1 in
          x_O_3: eae_input_t <- x1;
          find [unique] u_18 = ri_18 <= Qe, u_19 = ri_19 <= N suchthat defined(x_O[ri_18, ri_19], r[ri_18, ri_19]) && (x_O_3 = x_O[ri_18, ri_19]) then
            return(r[u_18, u_19])
          orfind u_16 = ri_16 <= Qe, u_17 = ri_17 <= N suchthat defined(x_O_1[ri_16, ri_17], r_1[ri_16, ri_17]) && (x_O_3 = x_O_1[ri_16, ri_17]) then
            return(r_1[u_16, u_17])
          orfind u_14 = ri_14 <= Qd, u_15 = ri_15 <= N suchthat defined(x_O_2[ri_14, ri_15], r_2[ri_14, ri_15]) && (x_O_3 = x_O_2[ri_14, ri_15]) then
            return(r_2[u_14, u_15])
          orfind u_12 = ri_12 <= Qh, u_13 = ri_13 <= N suchthat defined(x_O_3[ri_12, ri_13], r_3[ri_12, ri_13]) && (x_O_3 = x_O_3[ri_12, ri_13]) then
            return(r_3[u_12, u_13])
          else
            r_3 <-R eae_output_t;
            return(r_3)
        else
          x_O_4: eae_input_t <- x1;
          find [unique] u = ri <= Qh, u_1 = ri_1 <= N suchthat defined(x_O_4[ri, ri_1], r_4[ri, ri_1]) && (x_O_4 = x_O_4[ri, ri_1]) then
            return(r_4[u, u_1])
          else
            r_4 <-R eae_output_t;
            return(r_4)
      ))


Applying remove assignments of findcond
  - Remove assignments on x_O_4 (definition point kept, all usages removed)
  - Remove assignments on x_O_3 (definition point kept, all usages removed)
  - Remove assignments on zz_3 (definition removed, all usages removed)
  - Remove assignments on zz_3 (definition removed, all usages removed)
  - Remove assignments on zz_3 (definition removed, all usages removed)
  - Remove assignments on zz_3 (definition removed, all usages removed)
  - Remove assignments on zz_11 (definition removed, all usages removed)
  - Remove assignments on zz_11 (definition removed, all usages removed)
  - Remove assignments on zz_10 (definition kept, array references kept)
  - Remove assignments on zz_10 (definition kept, array references kept)
  - Remove assignments on zz_10 (definition kept, array references kept)
yields

Game 24 is
      Ostart() :=
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          dh_10: GG_t <- concatDH(exp(g, mult(sk[i1_6], z_5)), exp(g, mult(sk[i1_6], sk)));
          enc_8: bitstring <- Serialize(pkE_10);
          pkS_4: G_t <- exp(g, sk);
          kemContext_10: GGG_t <- concatContext(pkE_10, pk_R, pkS_4);
          key_5: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_10);
          info_5: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_10);
          x_O_1: eae_input_t <- eae_input(lbytes_empty, key_5, info_5);
 {103}    find [unique] u_44 = ri_44 <= Qd, u_45 = ri_45 <= N suchthat defined(x_O_2[ri_44, ri_45], r_2[ri_44, ri_45]) && {108}(x_O_1 = x_O_2[ri_44, ri_45]) then
            zz_10: eae_output_t <- r_2[u_44, u_45];
            return(AuthEncap_tuple(r_2[u_44, u_45], enc_8))
          orfind u_42 = ri_42 <= Qh, u_43 = ri_43 <= N suchthat defined(x1[ri_42, ri_43], x_O_3[ri_42, ri_43], r_3[ri_42, ri_43]) && {144}(x_O_1 = x1[ri_42, ri_43]) then
            zz_10: eae_output_t <- r_3[u_42, u_43];
            return(AuthEncap_tuple(r_3[u_42, u_43], enc_8))
          else
            r_1 <-R eae_output_t;
            zz_10: eae_output_t <- r_1;
            return(AuthEncap_tuple(r_1, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          dh_11: GG_t <- concatDH(exp(pk_R, z_6), exp(pk_R, sk));
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          kemContext_11: GGG_t <- concatContext(pkE_11, pk_R, pkS_5);
          key_6: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_11);
          info_6: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_11);
          x_O: eae_input_t <- eae_input(lbytes_empty, key_6, info_6);
 {268}    find [unique] u_32 = ri_32 <= Qh, u_33 = ri_33 <= N suchthat defined(x1[ri_32, ri_33], x_O_3[ri_32, ri_33], r_3[ri_32, ri_33]) && {275}(x_O = x1[ri_32, ri_33]) then
            return(AuthEncap_tuple(r_3[u_32, u_33], enc_9))
          else
            r <-R eae_output_t;
            return(AuthEncap_tuple(r, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        find ie1_2 = ie1_3 <= Qe, i1_8 = i1_9 <= N suchthat defined(zz_10[ie1_3, i1_9], enc_8[ie1_3, i1_9], sk[i1_9], i1_6[ie1_3, i1_9]) && (i = i1_6[ie1_3, i1_9]) && (pk_S = exp(g, sk[i1_9])) && (enc_8[ie1_3, i1_9] = enc_2) then
          return(AuthDecap_Some(zz_10[ie1_2, i1_8]))
        else
          let Serialize(pkE_3: G_t) = enc_2 in
            dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
            pkR_1: G_t <- exp(g, sk);
            kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
            key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
            info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
            x_O_2: eae_input_t <- eae_input(lbytes_empty, key_1, info_1);
 {421}      find [unique] u_26 = ri_26 <= Qe, u_27 = ri_27 <= N suchthat defined(x_O_1[ri_26, ri_27], r_1[ri_26, ri_27]) && {426}(x_O_2 = x_O_1[ri_26, ri_27]) then
              return(AuthDecap_Some(r_1[u_26, u_27]))
            orfind u_24 = ri_24 <= Qd, u_25 = ri_25 <= N suchthat defined(x_O_2[ri_24, ri_25], r_2[ri_24, ri_25]) && {448}(x_O_2 = x_O_2[ri_24, ri_25]) then
              return(AuthDecap_Some(r_2[u_24, u_25]))
            orfind u_22 = ri_22 <= Qh, u_23 = ri_23 <= N suchthat defined(x1[ri_22, ri_23], x_O_3[ri_22, ri_23], r_3[ri_22, ri_23]) && {472}(x_O_2 = x1[ri_22, ri_23]) then
              return(AuthDecap_Some(r_3[u_22, u_23]))
            else
              r_2 <-R eae_output_t;
              return(AuthDecap_Some(r_2))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        let eae_input(salt: extract_salt_t, concatExtract(protocol1: label_protocol_t, suite1: suite_id_t, label1: label_extract_t, concatDH(dh1: G_t, dh2: G_t)), concatExpand(l: two_byte_t, protocol2: label_protocol_t, suite2: suite_id_t, label2: label_expand_t, concatContext(pkE': G_t, pkR': G_t, pkS': G_t))) = x1 in
          x_O_3: eae_input_t <- cst_eae_input_t;
 {527}    find [unique] u_18 = ri_18 <= Qe, u_19 = ri_19 <= N suchthat defined(x_O[ri_18, ri_19], r[ri_18, ri_19]) && {532}(x1 = x_O[ri_18, ri_19]) then
            return(r[u_18, u_19])
          orfind u_16 = ri_16 <= Qe, u_17 = ri_17 <= N suchthat defined(x_O_1[ri_16, ri_17], r_1[ri_16, ri_17]) && {553}(x1 = x_O_1[ri_16, ri_17]) then
            return(r_1[u_16, u_17])
          orfind u_14 = ri_14 <= Qd, u_15 = ri_15 <= N suchthat defined(x_O_2[ri_14, ri_15], r_2[ri_14, ri_15]) && {574}(x1 = x_O_2[ri_14, ri_15]) then
            return(r_2[u_14, u_15])
          orfind u_12 = ri_12 <= Qh, u_13 = ri_13 <= N suchthat defined(x1[ri_12, ri_13], x_O_3[ri_12, ri_13], r_3[ri_12, ri_13]) && {597}(x1 = x1[ri_12, ri_13]) then
            return(r_3[u_12, u_13])
          else
            r_3 <-R eae_output_t;
            return(r_3)
        else
          x_O_4: eae_input_t <- cst_eae_input_t;
 {624}    find [unique] u = ri <= Qh, u_1 = ri_1 <= N suchthat defined(x1[ri, ri_1], x_O_4[ri, ri_1], r_4[ri, ri_1]) && (x1 = x1[ri, ri_1]) then
            return(r_4[u, u_1])
          else
            r_4 <-R eae_output_t;
            return(r_4)
      ))


Applying simplify [probability (4 * N * N + N * N * Qe) * PCollKey]
  - Simplification pass
    - Replaced defined condition x1[ri, ri_1], x_O_4[ri, ri_1], r_4[ri, ri_1] with r_4[ri, ri_1], x1[ri, ri_1] in find at 624
    - Replaced (x1 = x1[ri_12, ri_13]) with ((pkS' = pkS'[ri_12, ri_13]) && (pkR' = pkR'[ri_12, ri_13]) && (pkE' = pkE'[ri_12, ri_13]) && (label2 = label2[ri_12, ri_13]) && (suite2 = suite2[ri_12, ri_13]) && (protocol2 = protocol2[ri_12, ri_13]) && (l = l[ri_12, ri_13]) && (dh2 = dh2[ri_12, ri_13]) && (dh1 = dh1[ri_12, ri_13]) && (label1 = label1[ri_12, ri_13]) && (suite1 = suite1[ri_12, ri_13]) && (protocol1 = protocol1[ri_12, ri_13]) && (salt = salt[ri_12, ri_13])) at 597
    - Replaced defined condition x1[ri_12, ri_13], x_O_3[ri_12, ri_13], r_3[ri_12, ri_13] with r_3[ri_12, ri_13], salt[ri_12, ri_13], protocol1[ri_12, ri_13], suite1[ri_12, ri_13], label1[ri_12, ri_13], dh1[ri_12, ri_13], dh2[ri_12, ri_13], l[ri_12, ri_13], protocol2[ri_12, ri_13], suite2[ri_12, ri_13], label2[ri_12, ri_13], pkE'[ri_12, ri_13], pkR'[ri_12, ri_13], pkS'[ri_12, ri_13] in find at 527
    - Replaced (x1 = x_O_2[ri_14, ri_15]) with ((pkS' = pk_S[ri_14, ri_15]) && (pkR' = pkR_1[ri_14, ri_15]) && (pkE' = pkE_3[ri_14, ri_15]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (dh2 = exp(pk_S[ri_14, ri_15], sk[ri_15])) && (dh1 = exp(pkE_3[ri_14, ri_15], sk[ri_15])) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty)) at 574
    - Replaced defined condition x_O_2[ri_14, ri_15], r_2[ri_14, ri_15] with r_2[ri_14, ri_15], sk[ri_15], pkE_3[ri_14, ri_15], pkR_1[ri_14, ri_15], pk_S[ri_14, ri_15] in find at 527
    - Replaced (x1 = x_O_1[ri_16, ri_17]) with ((pkS' = pkS_4[ri_16, ri_17]) && (pkR' = pk_R[ri_16, ri_17]) && (pkE' = pkE_10[ri_16, ri_17]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (dh2 = exp(g, mult(sk[i1_6[ri_16, ri_17]], sk[ri_17]))) && (dh1 = exp(g, mult(sk[i1_6[ri_16, ri_17]], z_5[ri_16, ri_17]))) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty)) at 553
    - Replaced defined condition x_O_1[ri_16, ri_17], r_1[ri_16, ri_17] with r_1[ri_16, ri_17], z_5[ri_16, ri_17], sk[ri_17], sk[i1_6[ri_16, ri_17]], pkE_10[ri_16, ri_17], pk_R[ri_16, ri_17], pkS_4[ri_16, ri_17] in find at 527
    - Replaced (x1 = x_O[ri_18, ri_19]) with ((pkS' = pkS_5[ri_18, ri_19]) && (pkR' = pk_R[ri_18, ri_19]) && (pkE' = pkE_11[ri_18, ri_19]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (dh2 = exp(pk_R[ri_18, ri_19], sk[ri_19])) && (dh1 = exp(pk_R[ri_18, ri_19], z_6[ri_18, ri_19])) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty)) at 532
    - Replaced defined condition x_O[ri_18, ri_19], r[ri_18, ri_19] with r[ri_18, ri_19], z_6[ri_18, ri_19], sk[ri_19], pkE_11[ri_18, ri_19], pk_R[ri_18, ri_19], pkS_5[ri_18, ri_19] in find at 527
    - Replaced (x_O_2 = x1[ri_22, ri_23]) with ((pk_S = pkS'[ri_22, ri_23]) && (pkR_1 = pkR'[ri_22, ri_23]) && (pkE_3 = pkE'[ri_22, ri_23]) && (label_shared_secret = label2[ri_22, ri_23]) && (suite_id = suite2[ri_22, ri_23]) && (RFCXXXX = protocol2[ri_22, ri_23]) && (I2OSP2(Nsecret) = l[ri_22, ri_23]) && (exp(pk_S, sk) = dh2[ri_22, ri_23]) && (exp(pkE_3, sk) = dh1[ri_22, ri_23]) && (label_eae_prk = label1[ri_22, ri_23]) && (suite_id = suite1[ri_22, ri_23]) && (RFCXXXX = protocol1[ri_22, ri_23]) && (lbytes_empty = salt[ri_22, ri_23])) at 472
    - Replaced defined condition x1[ri_22, ri_23], x_O_3[ri_22, ri_23], r_3[ri_22, ri_23] with r_3[ri_22, ri_23], salt[ri_22, ri_23], protocol1[ri_22, ri_23], suite1[ri_22, ri_23], label1[ri_22, ri_23], dh1[ri_22, ri_23], dh2[ri_22, ri_23], l[ri_22, ri_23], protocol2[ri_22, ri_23], suite2[ri_22, ri_23], label2[ri_22, ri_23], pkE'[ri_22, ri_23], pkR'[ri_22, ri_23], pkS'[ri_22, ri_23] in find at 421
    - Replaced (x_O_2 = x_O_2[ri_24, ri_25]) with ((pk_S = pk_S[ri_24, ri_25]) && (i = ri_25) && (pkE_3 = pkE_3[ri_24, ri_25])) at 448
    - In branch 2 of find at 421, substituting u_25 with i
    - Replaced defined condition x_O_2[ri_24, ri_25], r_2[ri_24, ri_25] with r_2[ri_24], pkE_3[ri_24], pk_S[ri_24] in find at 421
    - Replaced (x_O_2 = x_O_1[ri_26, ri_27]) with ((pk_S = pkS_4[ri_26, ri_27]) && (i = i1_6[ri_26, ri_27]) && (pkE_3 = pkE_10[ri_26, ri_27])) at 426
    - Remove branch 1 in find at 421
    - Replaced (x_O = x1[ri_32, ri_33]) with ((pkS_5 = pkS'[ri_32, ri_33]) && (pk_R = pkR'[ri_32, ri_33]) && (pkE_11 = pkE'[ri_32, ri_33]) && (label_shared_secret = label2[ri_32, ri_33]) && (suite_id = suite2[ri_32, ri_33]) && (RFCXXXX = protocol2[ri_32, ri_33]) && (I2OSP2(Nsecret) = l[ri_32, ri_33]) && (exp(pk_R, sk) = dh2[ri_32, ri_33]) && (exp(pk_R, z_6) = dh1[ri_32, ri_33]) && (label_eae_prk = label1[ri_32, ri_33]) && (suite_id = suite1[ri_32, ri_33]) && (RFCXXXX = protocol1[ri_32, ri_33]) && (lbytes_empty = salt[ri_32, ri_33])) at 275
    - Replaced defined condition x1[ri_32, ri_33], x_O_3[ri_32, ri_33], r_3[ri_32, ri_33] with r_3[ri_32, ri_33], salt[ri_32, ri_33], protocol1[ri_32, ri_33], suite1[ri_32, ri_33], label1[ri_32, ri_33], dh1[ri_32, ri_33], dh2[ri_32, ri_33], l[ri_32, ri_33], protocol2[ri_32, ri_33], suite2[ri_32, ri_33], label2[ri_32, ri_33], pkE'[ri_32, ri_33], pkR'[ri_32, ri_33], pkS'[ri_32, ri_33] in find at 268
    - Replaced (x_O_1 = x1[ri_42, ri_43]) with ((pkS_4 = pkS'[ri_42, ri_43]) && (pk_R = pkR'[ri_42, ri_43]) && (pkE_10 = pkE'[ri_42, ri_43]) && (label_shared_secret = label2[ri_42, ri_43]) && (suite_id = suite2[ri_42, ri_43]) && (RFCXXXX = protocol2[ri_42, ri_43]) && (I2OSP2(Nsecret) = l[ri_42, ri_43]) && (exp(g, mult(sk[i1_6], sk)) = dh2[ri_42, ri_43]) && (exp(g, mult(sk[i1_6], z_5)) = dh1[ri_42, ri_43]) && (label_eae_prk = label1[ri_42, ri_43]) && (suite_id = suite1[ri_42, ri_43]) && (RFCXXXX = protocol1[ri_42, ri_43]) && (lbytes_empty = salt[ri_42, ri_43])) at 144
    - Replaced defined condition x1[ri_42, ri_43], x_O_3[ri_42, ri_43], r_3[ri_42, ri_43] with r_3[ri_42, ri_43], salt[ri_42, ri_43], protocol1[ri_42, ri_43], suite1[ri_42, ri_43], label1[ri_42, ri_43], dh1[ri_42, ri_43], dh2[ri_42, ri_43], l[ri_42, ri_43], protocol2[ri_42, ri_43], suite2[ri_42, ri_43], label2[ri_42, ri_43], pkE'[ri_42, ri_43], pkR'[ri_42, ri_43], pkS'[ri_42, ri_43] in find at 103
    - Replaced (x_O_1 = x_O_2[ri_44, ri_45]) with ((pkS_4 = pk_S[ri_44, ri_45]) && (i1_6 = ri_45) && (pkE_10 = pkE_3[ri_44, ri_45])) at 108
    - In branch 1 of find at 103, substituting u_45 with i1_6
    - Replaced defined condition x_O_2[ri_44, ri_45], r_2[ri_44, ri_45] with r_2[ri_44, i1_6], pkE_3[ri_44, i1_6], pk_S[ri_44, i1_6] in find at 103
yields

Game 25 is
      Ostart() :=
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          dh_10: GG_t <- concatDH(exp(g, mult(sk[i1_6], z_5)), exp(g, mult(sk[i1_6], sk)));
          enc_8: bitstring <- Serialize(pkE_10);
          pkS_4: G_t <- exp(g, sk);
          kemContext_10: GGG_t <- concatContext(pkE_10, pk_R, pkS_4);
          key_5: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_10);
          info_5: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_10);
          x_O_1: eae_input_t <- eae_input(lbytes_empty, key_5, info_5);
          find [unique] u_44 = ri_44 <= Qd suchthat defined(r_2[ri_44, i1_6], pkE_3[ri_44, i1_6], pk_S[ri_44, i1_6]) && {116}((pkS_4 = pk_S[ri_44, i1_6]) && (i1_6 = i1_6) && (pkE_10 = pkE_3[ri_44, i1_6])) then
            u_45 <= N <- i1_6;
            zz_10: eae_output_t <- r_2[u_44, i1_6];
            return(AuthEncap_tuple(r_2[u_44, i1_6], enc_8))
          orfind u_42 = ri_42 <= Qh, u_43 = ri_43 <= N suchthat defined(r_3[ri_42, ri_43], salt[ri_42, ri_43], protocol1[ri_42, ri_43], suite1[ri_42, ri_43], label1[ri_42, ri_43], dh1[ri_42, ri_43], dh2[ri_42, ri_43], l[ri_42, ri_43], protocol2[ri_42, ri_43], suite2[ri_42, ri_43], label2[ri_42, ri_43], pkE'[ri_42, ri_43], pkR'[ri_42, ri_43], pkS'[ri_42, ri_43]) && (pkS_4 = pkS'[ri_42, ri_43]) && (pk_R = pkR'[ri_42, ri_43]) && (pkE_10 = pkE'[ri_42, ri_43]) && (label_shared_secret = label2[ri_42, ri_43]) && (suite_id = suite2[ri_42, ri_43]) && (RFCXXXX = protocol2[ri_42, ri_43]) && (I2OSP2(Nsecret) = l[ri_42, ri_43]) && (exp(g, mult(sk[i1_6], sk)) = dh2[ri_42, ri_43]) && (exp(g, mult(sk[i1_6], z_5)) = dh1[ri_42, ri_43]) && (label_eae_prk = label1[ri_42, ri_43]) && (suite_id = suite1[ri_42, ri_43]) && (RFCXXXX = protocol1[ri_42, ri_43]) && (lbytes_empty = salt[ri_42, ri_43]) then
            zz_10: eae_output_t <- r_3[u_42, u_43];
            return(AuthEncap_tuple(r_3[u_42, u_43], enc_8))
          else
            r_1 <-R eae_output_t;
            zz_10: eae_output_t <- r_1;
            return(AuthEncap_tuple(r_1, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          dh_11: GG_t <- concatDH(exp(pk_R, z_6), exp(pk_R, sk));
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          kemContext_11: GGG_t <- concatContext(pkE_11, pk_R, pkS_5);
          key_6: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_11);
          info_6: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_11);
          x_O: eae_input_t <- eae_input(lbytes_empty, key_6, info_6);
          find [unique] u_32 = ri_32 <= Qh, u_33 = ri_33 <= N suchthat defined(r_3[ri_32, ri_33], salt[ri_32, ri_33], protocol1[ri_32, ri_33], suite1[ri_32, ri_33], label1[ri_32, ri_33], dh1[ri_32, ri_33], dh2[ri_32, ri_33], l[ri_32, ri_33], protocol2[ri_32, ri_33], suite2[ri_32, ri_33], label2[ri_32, ri_33], pkE'[ri_32, ri_33], pkR'[ri_32, ri_33], pkS'[ri_32, ri_33]) && (pkS_5 = pkS'[ri_32, ri_33]) && (pk_R = pkR'[ri_32, ri_33]) && (pkE_11 = pkE'[ri_32, ri_33]) && (label_shared_secret = label2[ri_32, ri_33]) && (suite_id = suite2[ri_32, ri_33]) && (RFCXXXX = protocol2[ri_32, ri_33]) && (I2OSP2(Nsecret) = l[ri_32, ri_33]) && (exp(pk_R, sk) = dh2[ri_32, ri_33]) && (exp(pk_R, z_6) = dh1[ri_32, ri_33]) && (label_eae_prk = label1[ri_32, ri_33]) && (suite_id = suite1[ri_32, ri_33]) && (RFCXXXX = protocol1[ri_32, ri_33]) && (lbytes_empty = salt[ri_32, ri_33]) then
            return(AuthEncap_tuple(r_3[u_32, u_33], enc_9))
          else
            r <-R eae_output_t;
            return(AuthEncap_tuple(r, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        find ie1_2 = ie1_3 <= Qe, i1_8 = i1_9 <= N suchthat defined(zz_10[ie1_3, i1_9], enc_8[ie1_3, i1_9], sk[i1_9], i1_6[ie1_3, i1_9]) && (i = i1_6[ie1_3, i1_9]) && (pk_S = exp(g, sk[i1_9])) && (enc_8[ie1_3, i1_9] = enc_2) then
          return(AuthDecap_Some(zz_10[ie1_2, i1_8]))
        else
          let Serialize(pkE_3: G_t) = enc_2 in
            dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
            pkR_1: G_t <- exp(g, sk);
            kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
            key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
            info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
            x_O_2: eae_input_t <- eae_input(lbytes_empty, key_1, info_1);
            find [unique] u_24 = ri_24 <= Qd suchthat defined(r_2[ri_24], pkE_3[ri_24], pk_S[ri_24]) && {687}((pk_S = pk_S[ri_24]) && (i = i) && (pkE_3 = pkE_3[ri_24])) then
              u_25 <= N <- i;
              return(AuthDecap_Some(r_2[u_24]))
            orfind u_22 = ri_22 <= Qh, u_23 = ri_23 <= N suchthat defined(r_3[ri_22, ri_23], salt[ri_22, ri_23], protocol1[ri_22, ri_23], suite1[ri_22, ri_23], label1[ri_22, ri_23], dh1[ri_22, ri_23], dh2[ri_22, ri_23], l[ri_22, ri_23], protocol2[ri_22, ri_23], suite2[ri_22, ri_23], label2[ri_22, ri_23], pkE'[ri_22, ri_23], pkR'[ri_22, ri_23], pkS'[ri_22, ri_23]) && (pk_S = pkS'[ri_22, ri_23]) && (pkR_1 = pkR'[ri_22, ri_23]) && (pkE_3 = pkE'[ri_22, ri_23]) && (label_shared_secret = label2[ri_22, ri_23]) && (suite_id = suite2[ri_22, ri_23]) && (RFCXXXX = protocol2[ri_22, ri_23]) && (I2OSP2(Nsecret) = l[ri_22, ri_23]) && (exp(pk_S, sk) = dh2[ri_22, ri_23]) && (exp(pkE_3, sk) = dh1[ri_22, ri_23]) && (label_eae_prk = label1[ri_22, ri_23]) && (suite_id = suite1[ri_22, ri_23]) && (RFCXXXX = protocol1[ri_22, ri_23]) && (lbytes_empty = salt[ri_22, ri_23]) then
              return(AuthDecap_Some(r_3[u_22, u_23]))
            else
              r_2 <-R eae_output_t;
              return(AuthDecap_Some(r_2))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        let eae_input(salt: extract_salt_t, concatExtract(protocol1: label_protocol_t, suite1: suite_id_t, label1: label_extract_t, concatDH(dh1: G_t, dh2: G_t)), concatExpand(l: two_byte_t, protocol2: label_protocol_t, suite2: suite_id_t, label2: label_expand_t, concatContext(pkE': G_t, pkR': G_t, pkS': G_t))) = x1 in
          x_O_3: eae_input_t <- cst_eae_input_t;
          find [unique] u_18 = ri_18 <= Qe, u_19 = ri_19 <= N suchthat defined(r[ri_18, ri_19], z_6[ri_18, ri_19], sk[ri_19], pkE_11[ri_18, ri_19], pk_R[ri_18, ri_19], pkS_5[ri_18, ri_19]) && (pkS' = pkS_5[ri_18, ri_19]) && (pkR' = pk_R[ri_18, ri_19]) && (pkE' = pkE_11[ri_18, ri_19]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (dh2 = exp(pk_R[ri_18, ri_19], sk[ri_19])) && (dh1 = exp(pk_R[ri_18, ri_19], z_6[ri_18, ri_19])) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty) then
            return(r[u_18, u_19])
          orfind u_16 = ri_16 <= Qe, u_17 = ri_17 <= N suchthat defined(r_1[ri_16, ri_17], z_5[ri_16, ri_17], sk[ri_17], sk[i1_6[ri_16, ri_17]], pkE_10[ri_16, ri_17], pk_R[ri_16, ri_17], pkS_4[ri_16, ri_17]) && (pkS' = pkS_4[ri_16, ri_17]) && (pkR' = pk_R[ri_16, ri_17]) && (pkE' = pkE_10[ri_16, ri_17]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (dh2 = exp(g, mult(sk[i1_6[ri_16, ri_17]], sk[ri_17]))) && (dh1 = exp(g, mult(sk[i1_6[ri_16, ri_17]], z_5[ri_16, ri_17]))) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty) then
            return(r_1[u_16, u_17])
          orfind u_14 = ri_14 <= Qd, u_15 = ri_15 <= N suchthat defined(r_2[ri_14, ri_15], sk[ri_15], pkE_3[ri_14, ri_15], pkR_1[ri_14, ri_15], pk_S[ri_14, ri_15]) && (pkS' = pk_S[ri_14, ri_15]) && (pkR' = pkR_1[ri_14, ri_15]) && (pkE' = pkE_3[ri_14, ri_15]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (dh2 = exp(pk_S[ri_14, ri_15], sk[ri_15])) && (dh1 = exp(pkE_3[ri_14, ri_15], sk[ri_15])) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty) then
            return(r_2[u_14, u_15])
          orfind u_12 = ri_12 <= Qh, u_13 = ri_13 <= N suchthat defined(r_3[ri_12, ri_13], salt[ri_12, ri_13], protocol1[ri_12, ri_13], suite1[ri_12, ri_13], label1[ri_12, ri_13], dh1[ri_12, ri_13], dh2[ri_12, ri_13], l[ri_12, ri_13], protocol2[ri_12, ri_13], suite2[ri_12, ri_13], label2[ri_12, ri_13], pkE'[ri_12, ri_13], pkR'[ri_12, ri_13], pkS'[ri_12, ri_13]) && (pkS' = pkS'[ri_12, ri_13]) && (pkR' = pkR'[ri_12, ri_13]) && (pkE' = pkE'[ri_12, ri_13]) && (label2 = label2[ri_12, ri_13]) && (suite2 = suite2[ri_12, ri_13]) && (protocol2 = protocol2[ri_12, ri_13]) && (l = l[ri_12, ri_13]) && (dh2 = dh2[ri_12, ri_13]) && (dh1 = dh1[ri_12, ri_13]) && (label1 = label1[ri_12, ri_13]) && (suite1 = suite1[ri_12, ri_13]) && (protocol1 = protocol1[ri_12, ri_13]) && (salt = salt[ri_12, ri_13]) then
            return(r_3[u_12, u_13])
          else
            r_3 <-R eae_output_t;
            return(r_3)
        else
          x_O_4: eae_input_t <- cst_eae_input_t;
          find [unique] u = ri <= Qh, u_1 = ri_1 <= N suchthat defined(r_4[ri, ri_1], x1[ri, ri_1]) && (x1 = x1[ri, ri_1]) then
            return(r_4[u, u_1])
          else
            r_4 <-R eae_output_t;
            return(r_4)
      ))


Applying simplify [probability N * N * Qe * PCollKey]
  - Simplification pass
    - Replaced ((pk_S = pk_S[ri_24]) && (i = i) && (pkE_3 = pkE_3[ri_24])) with ((pk_S = pk_S[ri_24]) && (pkE_3 = pkE_3[ri_24])) at 687
    - Replaced ((pkS_4 = pk_S[ri_44, i1_6]) && (i1_6 = i1_6) && (pkE_10 = pkE_3[ri_44, i1_6])) with ((pkS_4 = pk_S[ri_44, i1_6]) && (pkE_10 = pkE_3[ri_44, i1_6])) at 116
yields

Game 26 is
      Ostart() :=
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          dh_10: GG_t <- concatDH(exp(g, mult(sk[i1_6], z_5)), exp(g, mult(sk[i1_6], sk)));
          enc_8: bitstring <- Serialize(pkE_10);
          pkS_4: G_t <- exp(g, sk);
          kemContext_10: GGG_t <- concatContext(pkE_10, pk_R, pkS_4);
          key_5: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_10);
          info_5: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_10);
          x_O_1: eae_input_t <- eae_input(lbytes_empty, key_5, info_5);
          find [unique] u_44 = ri_44 <= Qd suchthat defined(r_2[ri_44, i1_6], pkE_3[ri_44, i1_6], pk_S[ri_44, i1_6]) && (pkS_4 = pk_S[ri_44, i1_6]) && (pkE_10 = pkE_3[ri_44, i1_6]) then
            u_45 <= N <- i1_6;
            zz_10: eae_output_t <- r_2[u_44, i1_6];
            return(AuthEncap_tuple(r_2[u_44, i1_6], enc_8))
          orfind u_42 = ri_42 <= Qh, u_43 = ri_43 <= N suchthat defined(r_3[ri_42, ri_43], salt[ri_42, ri_43], protocol1[ri_42, ri_43], suite1[ri_42, ri_43], label1[ri_42, ri_43], dh1[ri_42, ri_43], dh2[ri_42, ri_43], l[ri_42, ri_43], protocol2[ri_42, ri_43], suite2[ri_42, ri_43], label2[ri_42, ri_43], pkE'[ri_42, ri_43], pkR'[ri_42, ri_43], pkS'[ri_42, ri_43]) && (pkS_4 = pkS'[ri_42, ri_43]) && (pk_R = pkR'[ri_42, ri_43]) && (pkE_10 = pkE'[ri_42, ri_43]) && (label_shared_secret = label2[ri_42, ri_43]) && (suite_id = suite2[ri_42, ri_43]) && (RFCXXXX = protocol2[ri_42, ri_43]) && (I2OSP2(Nsecret) = l[ri_42, ri_43]) && (exp(g, mult(sk[i1_6], sk)) = dh2[ri_42, ri_43]) && (exp(g, mult(sk[i1_6], z_5)) = dh1[ri_42, ri_43]) && (label_eae_prk = label1[ri_42, ri_43]) && (suite_id = suite1[ri_42, ri_43]) && (RFCXXXX = protocol1[ri_42, ri_43]) && (lbytes_empty = salt[ri_42, ri_43]) then
            zz_10: eae_output_t <- r_3[u_42, u_43];
            return(AuthEncap_tuple(r_3[u_42, u_43], enc_8))
          else
            r_1 <-R eae_output_t;
            zz_10: eae_output_t <- r_1;
            return(AuthEncap_tuple(r_1, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          dh_11: GG_t <- concatDH(exp(pk_R, z_6), exp(pk_R, sk));
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          kemContext_11: GGG_t <- concatContext(pkE_11, pk_R, pkS_5);
          key_6: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_11);
          info_6: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_11);
          x_O: eae_input_t <- eae_input(lbytes_empty, key_6, info_6);
          find [unique] u_32 = ri_32 <= Qh, u_33 = ri_33 <= N suchthat defined(r_3[ri_32, ri_33], salt[ri_32, ri_33], protocol1[ri_32, ri_33], suite1[ri_32, ri_33], label1[ri_32, ri_33], dh1[ri_32, ri_33], dh2[ri_32, ri_33], l[ri_32, ri_33], protocol2[ri_32, ri_33], suite2[ri_32, ri_33], label2[ri_32, ri_33], pkE'[ri_32, ri_33], pkR'[ri_32, ri_33], pkS'[ri_32, ri_33]) && (pkS_5 = pkS'[ri_32, ri_33]) && (pk_R = pkR'[ri_32, ri_33]) && (pkE_11 = pkE'[ri_32, ri_33]) && (label_shared_secret = label2[ri_32, ri_33]) && (suite_id = suite2[ri_32, ri_33]) && (RFCXXXX = protocol2[ri_32, ri_33]) && (I2OSP2(Nsecret) = l[ri_32, ri_33]) && (exp(pk_R, sk) = dh2[ri_32, ri_33]) && (exp(pk_R, z_6) = dh1[ri_32, ri_33]) && (label_eae_prk = label1[ri_32, ri_33]) && (suite_id = suite1[ri_32, ri_33]) && (RFCXXXX = protocol1[ri_32, ri_33]) && (lbytes_empty = salt[ri_32, ri_33]) then
            return(AuthEncap_tuple(r_3[u_32, u_33], enc_9))
          else
            r <-R eae_output_t;
            return(AuthEncap_tuple(r, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        find ie1_2 = ie1_3 <= Qe, i1_8 = i1_9 <= N suchthat defined(zz_10[ie1_3, i1_9], enc_8[ie1_3, i1_9], sk[i1_9], i1_6[ie1_3, i1_9]) && (i = i1_6[ie1_3, i1_9]) && (pk_S = exp(g, sk[i1_9])) && (enc_8[ie1_3, i1_9] = enc_2) then
          return(AuthDecap_Some(zz_10[ie1_2, i1_8]))
        else
          let Serialize(pkE_3: G_t) = enc_2 in
            dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
            pkR_1: G_t <- exp(g, sk);
            kemContext_3: GGG_t <- concatContext(pkE_3, pkR_1, pk_S);
            key_1: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_3);
            info_1: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_3);
            x_O_2: eae_input_t <- eae_input(lbytes_empty, key_1, info_1);
            find [unique] u_24 = ri_24 <= Qd suchthat defined(r_2[ri_24], pkE_3[ri_24], pk_S[ri_24]) && (pk_S = pk_S[ri_24]) && (pkE_3 = pkE_3[ri_24]) then
              u_25 <= N <- i;
              return(AuthDecap_Some(r_2[u_24]))
            orfind u_22 = ri_22 <= Qh, u_23 = ri_23 <= N suchthat defined(r_3[ri_22, ri_23], salt[ri_22, ri_23], protocol1[ri_22, ri_23], suite1[ri_22, ri_23], label1[ri_22, ri_23], dh1[ri_22, ri_23], dh2[ri_22, ri_23], l[ri_22, ri_23], protocol2[ri_22, ri_23], suite2[ri_22, ri_23], label2[ri_22, ri_23], pkE'[ri_22, ri_23], pkR'[ri_22, ri_23], pkS'[ri_22, ri_23]) && (pk_S = pkS'[ri_22, ri_23]) && (pkR_1 = pkR'[ri_22, ri_23]) && (pkE_3 = pkE'[ri_22, ri_23]) && (label_shared_secret = label2[ri_22, ri_23]) && (suite_id = suite2[ri_22, ri_23]) && (RFCXXXX = protocol2[ri_22, ri_23]) && (I2OSP2(Nsecret) = l[ri_22, ri_23]) && (exp(pk_S, sk) = dh2[ri_22, ri_23]) && (exp(pkE_3, sk) = dh1[ri_22, ri_23]) && (label_eae_prk = label1[ri_22, ri_23]) && (suite_id = suite1[ri_22, ri_23]) && (RFCXXXX = protocol1[ri_22, ri_23]) && (lbytes_empty = salt[ri_22, ri_23]) then
              return(AuthDecap_Some(r_3[u_22, u_23]))
            else
              r_2 <-R eae_output_t;
              return(AuthDecap_Some(r_2))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        let eae_input(salt: extract_salt_t, concatExtract(protocol1: label_protocol_t, suite1: suite_id_t, label1: label_extract_t, concatDH(dh1: G_t, dh2: G_t)), concatExpand(l: two_byte_t, protocol2: label_protocol_t, suite2: suite_id_t, label2: label_expand_t, concatContext(pkE': G_t, pkR': G_t, pkS': G_t))) = x1 in
          x_O_3: eae_input_t <- cst_eae_input_t;
          find [unique] u_18 = ri_18 <= Qe, u_19 = ri_19 <= N suchthat defined(r[ri_18, ri_19], z_6[ri_18, ri_19], sk[ri_19], pkE_11[ri_18, ri_19], pk_R[ri_18, ri_19], pkS_5[ri_18, ri_19]) && (pkS' = pkS_5[ri_18, ri_19]) && (pkR' = pk_R[ri_18, ri_19]) && (pkE' = pkE_11[ri_18, ri_19]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (dh2 = exp(pk_R[ri_18, ri_19], sk[ri_19])) && (dh1 = exp(pk_R[ri_18, ri_19], z_6[ri_18, ri_19])) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty) then
            return(r[u_18, u_19])
          orfind u_16 = ri_16 <= Qe, u_17 = ri_17 <= N suchthat defined(r_1[ri_16, ri_17], z_5[ri_16, ri_17], sk[ri_17], sk[i1_6[ri_16, ri_17]], pkE_10[ri_16, ri_17], pk_R[ri_16, ri_17], pkS_4[ri_16, ri_17]) && (pkS' = pkS_4[ri_16, ri_17]) && (pkR' = pk_R[ri_16, ri_17]) && (pkE' = pkE_10[ri_16, ri_17]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (dh2 = exp(g, mult(sk[i1_6[ri_16, ri_17]], sk[ri_17]))) && (dh1 = exp(g, mult(sk[i1_6[ri_16, ri_17]], z_5[ri_16, ri_17]))) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty) then
            return(r_1[u_16, u_17])
          orfind u_14 = ri_14 <= Qd, u_15 = ri_15 <= N suchthat defined(r_2[ri_14, ri_15], sk[ri_15], pkE_3[ri_14, ri_15], pkR_1[ri_14, ri_15], pk_S[ri_14, ri_15]) && (pkS' = pk_S[ri_14, ri_15]) && (pkR' = pkR_1[ri_14, ri_15]) && (pkE' = pkE_3[ri_14, ri_15]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (dh2 = exp(pk_S[ri_14, ri_15], sk[ri_15])) && (dh1 = exp(pkE_3[ri_14, ri_15], sk[ri_15])) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty) then
            return(r_2[u_14, u_15])
          orfind u_12 = ri_12 <= Qh, u_13 = ri_13 <= N suchthat defined(r_3[ri_12, ri_13], salt[ri_12, ri_13], protocol1[ri_12, ri_13], suite1[ri_12, ri_13], label1[ri_12, ri_13], dh1[ri_12, ri_13], dh2[ri_12, ri_13], l[ri_12, ri_13], protocol2[ri_12, ri_13], suite2[ri_12, ri_13], label2[ri_12, ri_13], pkE'[ri_12, ri_13], pkR'[ri_12, ri_13], pkS'[ri_12, ri_13]) && (pkS' = pkS'[ri_12, ri_13]) && (pkR' = pkR'[ri_12, ri_13]) && (pkE' = pkE'[ri_12, ri_13]) && (label2 = label2[ri_12, ri_13]) && (suite2 = suite2[ri_12, ri_13]) && (protocol2 = protocol2[ri_12, ri_13]) && (l = l[ri_12, ri_13]) && (dh2 = dh2[ri_12, ri_13]) && (dh1 = dh1[ri_12, ri_13]) && (label1 = label1[ri_12, ri_13]) && (suite1 = suite1[ri_12, ri_13]) && (protocol1 = protocol1[ri_12, ri_13]) && (salt = salt[ri_12, ri_13]) then
            return(r_3[u_12, u_13])
          else
            r_3 <-R eae_output_t;
            return(r_3)
        else
          x_O_4: eae_input_t <- cst_eae_input_t;
          find [unique] u = ri <= Qh, u_1 = ri_1 <= N suchthat defined(r_4[ri, ri_1], x1[ri, ri_1]) && (x1 = x1[ri, ri_1]) then
            return(r_4[u, u_1])
          else
            r_4 <-R eae_output_t;
            return(r_4)
      ))


Applying move all binders
  - Move assignment to x_O_4
  - Move assignment to x_O_3
  - Move assignment to x_O_2
  - Move assignment to info_1
  - Move assignment to key_1
  - Move assignment to kemContext_3
  - Move assignment to x_O
  - Move assignment to info_6
  - Move assignment to key_6
  - Move assignment to kemContext_11
  - Move assignment to x_O_1
  - Move assignment to info_5
  - Move assignment to key_5
  - Move assignment to kemContext_10
yields

Game 27 is
      Ostart() :=
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          dh_10: GG_t <- concatDH(exp(g, mult(sk[i1_6], z_5)), exp(g, mult(sk[i1_6], sk)));
          enc_8: bitstring <- Serialize(pkE_10);
          pkS_4: G_t <- exp(g, sk);
          find [unique] u_44 = ri_44 <= Qd suchthat defined(r_2[ri_44, i1_6], pkE_3[ri_44, i1_6], pk_S[ri_44, i1_6]) && (pkS_4 = pk_S[ri_44, i1_6]) && (pkE_10 = pkE_3[ri_44, i1_6]) then
            u_45 <= N <- i1_6;
            zz_10: eae_output_t <- r_2[u_44, i1_6];
            return(AuthEncap_tuple(r_2[u_44, i1_6], enc_8))
          orfind u_42 = ri_42 <= Qh, u_43 = ri_43 <= N suchthat defined(r_3[ri_42, ri_43], salt[ri_42, ri_43], protocol1[ri_42, ri_43], suite1[ri_42, ri_43], label1[ri_42, ri_43], dh1[ri_42, ri_43], dh2[ri_42, ri_43], l[ri_42, ri_43], protocol2[ri_42, ri_43], suite2[ri_42, ri_43], label2[ri_42, ri_43], pkE'[ri_42, ri_43], pkR'[ri_42, ri_43], pkS'[ri_42, ri_43]) && (pkS_4 = pkS'[ri_42, ri_43]) && (pk_R = pkR'[ri_42, ri_43]) && (pkE_10 = pkE'[ri_42, ri_43]) && (label_shared_secret = label2[ri_42, ri_43]) && (suite_id = suite2[ri_42, ri_43]) && (RFCXXXX = protocol2[ri_42, ri_43]) && (I2OSP2(Nsecret) = l[ri_42, ri_43]) && (exp(g, mult(sk[i1_6], sk)) = dh2[ri_42, ri_43]) && (exp(g, mult(sk[i1_6], z_5)) = dh1[ri_42, ri_43]) && (label_eae_prk = label1[ri_42, ri_43]) && (suite_id = suite1[ri_42, ri_43]) && (RFCXXXX = protocol1[ri_42, ri_43]) && (lbytes_empty = salt[ri_42, ri_43]) then
            zz_10: eae_output_t <- r_3[u_42, u_43];
            return(AuthEncap_tuple(r_3[u_42, u_43], enc_8))
          else
            r_1 <-R eae_output_t;
            zz_10: eae_output_t <- r_1;
            return(AuthEncap_tuple(r_1, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          dh_11: GG_t <- concatDH(exp(pk_R, z_6), exp(pk_R, sk));
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          find [unique] u_32 = ri_32 <= Qh, u_33 = ri_33 <= N suchthat defined(r_3[ri_32, ri_33], salt[ri_32, ri_33], protocol1[ri_32, ri_33], suite1[ri_32, ri_33], label1[ri_32, ri_33], dh1[ri_32, ri_33], dh2[ri_32, ri_33], l[ri_32, ri_33], protocol2[ri_32, ri_33], suite2[ri_32, ri_33], label2[ri_32, ri_33], pkE'[ri_32, ri_33], pkR'[ri_32, ri_33], pkS'[ri_32, ri_33]) && (pkS_5 = pkS'[ri_32, ri_33]) && (pk_R = pkR'[ri_32, ri_33]) && (pkE_11 = pkE'[ri_32, ri_33]) && (label_shared_secret = label2[ri_32, ri_33]) && (suite_id = suite2[ri_32, ri_33]) && (RFCXXXX = protocol2[ri_32, ri_33]) && (I2OSP2(Nsecret) = l[ri_32, ri_33]) && (exp(pk_R, sk) = dh2[ri_32, ri_33]) && (exp(pk_R, z_6) = dh1[ri_32, ri_33]) && (label_eae_prk = label1[ri_32, ri_33]) && (suite_id = suite1[ri_32, ri_33]) && (RFCXXXX = protocol1[ri_32, ri_33]) && (lbytes_empty = salt[ri_32, ri_33]) then
            return(AuthEncap_tuple(r_3[u_32, u_33], enc_9))
          else
            r <-R eae_output_t;
            return(AuthEncap_tuple(r, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        find ie1_2 = ie1_3 <= Qe, i1_8 = i1_9 <= N suchthat defined(zz_10[ie1_3, i1_9], enc_8[ie1_3, i1_9], sk[i1_9], i1_6[ie1_3, i1_9]) && (i = i1_6[ie1_3, i1_9]) && (pk_S = exp(g, sk[i1_9])) && (enc_8[ie1_3, i1_9] = enc_2) then
          return(AuthDecap_Some(zz_10[ie1_2, i1_8]))
        else
          let Serialize(pkE_3: G_t) = enc_2 in
            dh_3: GG_t <- concatDH(exp(pkE_3, sk), exp(pk_S, sk));
            pkR_1: G_t <- exp(g, sk);
            find [unique] u_24 = ri_24 <= Qd suchthat defined(r_2[ri_24], pkE_3[ri_24], pk_S[ri_24]) && (pk_S = pk_S[ri_24]) && (pkE_3 = pkE_3[ri_24]) then
              u_25 <= N <- i;
              return(AuthDecap_Some(r_2[u_24]))
            orfind u_22 = ri_22 <= Qh, u_23 = ri_23 <= N suchthat defined(r_3[ri_22, ri_23], salt[ri_22, ri_23], protocol1[ri_22, ri_23], suite1[ri_22, ri_23], label1[ri_22, ri_23], dh1[ri_22, ri_23], dh2[ri_22, ri_23], l[ri_22, ri_23], protocol2[ri_22, ri_23], suite2[ri_22, ri_23], label2[ri_22, ri_23], pkE'[ri_22, ri_23], pkR'[ri_22, ri_23], pkS'[ri_22, ri_23]) && (pk_S = pkS'[ri_22, ri_23]) && (pkR_1 = pkR'[ri_22, ri_23]) && (pkE_3 = pkE'[ri_22, ri_23]) && (label_shared_secret = label2[ri_22, ri_23]) && (suite_id = suite2[ri_22, ri_23]) && (RFCXXXX = protocol2[ri_22, ri_23]) && (I2OSP2(Nsecret) = l[ri_22, ri_23]) && (exp(pk_S, sk) = dh2[ri_22, ri_23]) && (exp(pkE_3, sk) = dh1[ri_22, ri_23]) && (label_eae_prk = label1[ri_22, ri_23]) && (suite_id = suite1[ri_22, ri_23]) && (RFCXXXX = protocol1[ri_22, ri_23]) && (lbytes_empty = salt[ri_22, ri_23]) then
              return(AuthDecap_Some(r_3[u_22, u_23]))
            else
              r_2 <-R eae_output_t;
              return(AuthDecap_Some(r_2))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        let eae_input(salt: extract_salt_t, concatExtract(protocol1: label_protocol_t, suite1: suite_id_t, label1: label_extract_t, concatDH(dh1: G_t, dh2: G_t)), concatExpand(l: two_byte_t, protocol2: label_protocol_t, suite2: suite_id_t, label2: label_expand_t, concatContext(pkE': G_t, pkR': G_t, pkS': G_t))) = x1 in
          find [unique] u_18 = ri_18 <= Qe, u_19 = ri_19 <= N suchthat defined(r[ri_18, ri_19], z_6[ri_18, ri_19], sk[ri_19], pkE_11[ri_18, ri_19], pk_R[ri_18, ri_19], pkS_5[ri_18, ri_19]) && (pkS' = pkS_5[ri_18, ri_19]) && (pkR' = pk_R[ri_18, ri_19]) && (pkE' = pkE_11[ri_18, ri_19]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (dh2 = exp(pk_R[ri_18, ri_19], sk[ri_19])) && (dh1 = exp(pk_R[ri_18, ri_19], z_6[ri_18, ri_19])) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty) then
            return(r[u_18, u_19])
          orfind u_16 = ri_16 <= Qe, u_17 = ri_17 <= N suchthat defined(r_1[ri_16, ri_17], z_5[ri_16, ri_17], sk[ri_17], sk[i1_6[ri_16, ri_17]], pkE_10[ri_16, ri_17], pk_R[ri_16, ri_17], pkS_4[ri_16, ri_17]) && (pkS' = pkS_4[ri_16, ri_17]) && (pkR' = pk_R[ri_16, ri_17]) && (pkE' = pkE_10[ri_16, ri_17]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (dh2 = exp(g, mult(sk[i1_6[ri_16, ri_17]], sk[ri_17]))) && (dh1 = exp(g, mult(sk[i1_6[ri_16, ri_17]], z_5[ri_16, ri_17]))) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty) then
            return(r_1[u_16, u_17])
          orfind u_14 = ri_14 <= Qd, u_15 = ri_15 <= N suchthat defined(r_2[ri_14, ri_15], sk[ri_15], pkE_3[ri_14, ri_15], pkR_1[ri_14, ri_15], pk_S[ri_14, ri_15]) && (pkS' = pk_S[ri_14, ri_15]) && (pkR' = pkR_1[ri_14, ri_15]) && (pkE' = pkE_3[ri_14, ri_15]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (dh2 = exp(pk_S[ri_14, ri_15], sk[ri_15])) && (dh1 = exp(pkE_3[ri_14, ri_15], sk[ri_15])) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty) then
            return(r_2[u_14, u_15])
          orfind u_12 = ri_12 <= Qh, u_13 = ri_13 <= N suchthat defined(r_3[ri_12, ri_13], salt[ri_12, ri_13], protocol1[ri_12, ri_13], suite1[ri_12, ri_13], label1[ri_12, ri_13], dh1[ri_12, ri_13], dh2[ri_12, ri_13], l[ri_12, ri_13], protocol2[ri_12, ri_13], suite2[ri_12, ri_13], label2[ri_12, ri_13], pkE'[ri_12, ri_13], pkR'[ri_12, ri_13], pkS'[ri_12, ri_13]) && (pkS' = pkS'[ri_12, ri_13]) && (pkR' = pkR'[ri_12, ri_13]) && (pkE' = pkE'[ri_12, ri_13]) && (label2 = label2[ri_12, ri_13]) && (suite2 = suite2[ri_12, ri_13]) && (protocol2 = protocol2[ri_12, ri_13]) && (l = l[ri_12, ri_13]) && (dh2 = dh2[ri_12, ri_13]) && (dh1 = dh1[ri_12, ri_13]) && (label1 = label1[ri_12, ri_13]) && (suite1 = suite1[ri_12, ri_13]) && (protocol1 = protocol1[ri_12, ri_13]) && (salt = salt[ri_12, ri_13]) then
            return(r_3[u_12, u_13])
          else
            r_3 <-R eae_output_t;
            return(r_3)
        else
          find [unique] u = ri <= Qh, u_1 = ri_1 <= N suchthat defined(r_4[ri, ri_1], x1[ri, ri_1]) && (x1 = x1[ri, ri_1]) then
            return(r_4[u, u_1])
          else
            r_4 <-R eae_output_t;
            return(r_4)
      ))


Applying remove assignments of findcond
  - Remove assignments on dh_3 (definition removed, all usages removed)
  - Remove assignments on u_25 (definition removed, all usages removed)
  - Remove assignments on dh_11 (definition removed, all usages removed)
  - Remove assignments on dh_10 (definition removed, all usages removed)
  - Remove assignments on u_45 (definition removed, all usages removed)
yields

Game 28 is
      Ostart() :=
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          enc_8: bitstring <- Serialize(pkE_10);
          pkS_4: G_t <- exp(g, sk);
          find [unique] u_44 = ri_44 <= Qd suchthat defined(r_2[ri_44, i1_6], pkE_3[ri_44, i1_6], pk_S[ri_44, i1_6]) && (pkS_4 = pk_S[ri_44, i1_6]) && (pkE_10 = pkE_3[ri_44, i1_6]) then
            zz_10: eae_output_t <- r_2[u_44, i1_6];
            return(AuthEncap_tuple(r_2[u_44, i1_6], enc_8))
          orfind u_42 = ri_42 <= Qh, u_43 = ri_43 <= N suchthat defined(r_3[ri_42, ri_43], salt[ri_42, ri_43], protocol1[ri_42, ri_43], suite1[ri_42, ri_43], label1[ri_42, ri_43], dh1[ri_42, ri_43], dh2[ri_42, ri_43], l[ri_42, ri_43], protocol2[ri_42, ri_43], suite2[ri_42, ri_43], label2[ri_42, ri_43], pkE'[ri_42, ri_43], pkR'[ri_42, ri_43], pkS'[ri_42, ri_43]) && (pkS_4 = pkS'[ri_42, ri_43]) && (pk_R = pkR'[ri_42, ri_43]) && (pkE_10 = pkE'[ri_42, ri_43]) && (label_shared_secret = label2[ri_42, ri_43]) && (suite_id = suite2[ri_42, ri_43]) && (RFCXXXX = protocol2[ri_42, ri_43]) && (I2OSP2(Nsecret) = l[ri_42, ri_43]) && (exp(g, mult(sk[i1_6], sk)) = dh2[ri_42, ri_43]) && (exp(g, mult(sk[i1_6], z_5)) = dh1[ri_42, ri_43]) && (label_eae_prk = label1[ri_42, ri_43]) && (suite_id = suite1[ri_42, ri_43]) && (RFCXXXX = protocol1[ri_42, ri_43]) && (lbytes_empty = salt[ri_42, ri_43]) then
            zz_10: eae_output_t <- r_3[u_42, u_43];
            return(AuthEncap_tuple(r_3[u_42, u_43], enc_8))
          else
            r_1 <-R eae_output_t;
            zz_10: eae_output_t <- r_1;
            return(AuthEncap_tuple(r_1, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          find [unique] u_32 = ri_32 <= Qh, u_33 = ri_33 <= N suchthat defined(r_3[ri_32, ri_33], salt[ri_32, ri_33], protocol1[ri_32, ri_33], suite1[ri_32, ri_33], label1[ri_32, ri_33], dh1[ri_32, ri_33], dh2[ri_32, ri_33], l[ri_32, ri_33], protocol2[ri_32, ri_33], suite2[ri_32, ri_33], label2[ri_32, ri_33], pkE'[ri_32, ri_33], pkR'[ri_32, ri_33], pkS'[ri_32, ri_33]) && (pkS_5 = pkS'[ri_32, ri_33]) && (pk_R = pkR'[ri_32, ri_33]) && (pkE_11 = pkE'[ri_32, ri_33]) && (label_shared_secret = label2[ri_32, ri_33]) && (suite_id = suite2[ri_32, ri_33]) && (RFCXXXX = protocol2[ri_32, ri_33]) && (I2OSP2(Nsecret) = l[ri_32, ri_33]) && (exp(pk_R, sk) = dh2[ri_32, ri_33]) && (exp(pk_R, z_6) = dh1[ri_32, ri_33]) && (label_eae_prk = label1[ri_32, ri_33]) && (suite_id = suite1[ri_32, ri_33]) && (RFCXXXX = protocol1[ri_32, ri_33]) && (lbytes_empty = salt[ri_32, ri_33]) then
            return(AuthEncap_tuple(r_3[u_32, u_33], enc_9))
          else
            r <-R eae_output_t;
            return(AuthEncap_tuple(r, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        find ie1_2 = ie1_3 <= Qe, i1_8 = i1_9 <= N suchthat defined(zz_10[ie1_3, i1_9], enc_8[ie1_3, i1_9], sk[i1_9], i1_6[ie1_3, i1_9]) && (i = i1_6[ie1_3, i1_9]) && (pk_S = exp(g, sk[i1_9])) && (enc_8[ie1_3, i1_9] = enc_2) then
          return(AuthDecap_Some(zz_10[ie1_2, i1_8]))
        else
          let Serialize(pkE_3: G_t) = enc_2 in
            pkR_1: G_t <- exp(g, sk);
            find [unique] u_24 = ri_24 <= Qd suchthat defined(r_2[ri_24], pkE_3[ri_24], pk_S[ri_24]) && (pk_S = pk_S[ri_24]) && (pkE_3 = pkE_3[ri_24]) then
              return(AuthDecap_Some(r_2[u_24]))
            orfind u_22 = ri_22 <= Qh, u_23 = ri_23 <= N suchthat defined(r_3[ri_22, ri_23], salt[ri_22, ri_23], protocol1[ri_22, ri_23], suite1[ri_22, ri_23], label1[ri_22, ri_23], dh1[ri_22, ri_23], dh2[ri_22, ri_23], l[ri_22, ri_23], protocol2[ri_22, ri_23], suite2[ri_22, ri_23], label2[ri_22, ri_23], pkE'[ri_22, ri_23], pkR'[ri_22, ri_23], pkS'[ri_22, ri_23]) && (pk_S = pkS'[ri_22, ri_23]) && (pkR_1 = pkR'[ri_22, ri_23]) && (pkE_3 = pkE'[ri_22, ri_23]) && (label_shared_secret = label2[ri_22, ri_23]) && (suite_id = suite2[ri_22, ri_23]) && (RFCXXXX = protocol2[ri_22, ri_23]) && (I2OSP2(Nsecret) = l[ri_22, ri_23]) && (exp(pk_S, sk) = dh2[ri_22, ri_23]) && (exp(pkE_3, sk) = dh1[ri_22, ri_23]) && (label_eae_prk = label1[ri_22, ri_23]) && (suite_id = suite1[ri_22, ri_23]) && (RFCXXXX = protocol1[ri_22, ri_23]) && (lbytes_empty = salt[ri_22, ri_23]) then
              return(AuthDecap_Some(r_3[u_22, u_23]))
            else
              r_2 <-R eae_output_t;
              return(AuthDecap_Some(r_2))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        let eae_input(salt: extract_salt_t, concatExtract(protocol1: label_protocol_t, suite1: suite_id_t, label1: label_extract_t, concatDH(dh1: G_t, dh2: G_t)), concatExpand(l: two_byte_t, protocol2: label_protocol_t, suite2: suite_id_t, label2: label_expand_t, concatContext(pkE': G_t, pkR': G_t, pkS': G_t))) = x1 in
          find [unique] u_18 = ri_18 <= Qe, u_19 = ri_19 <= N suchthat defined(r[ri_18, ri_19], z_6[ri_18, ri_19], sk[ri_19], pkE_11[ri_18, ri_19], pk_R[ri_18, ri_19], pkS_5[ri_18, ri_19]) && (pkS' = pkS_5[ri_18, ri_19]) && (pkR' = pk_R[ri_18, ri_19]) && (pkE' = pkE_11[ri_18, ri_19]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (dh2 = exp(pk_R[ri_18, ri_19], sk[ri_19])) && (dh1 = exp(pk_R[ri_18, ri_19], z_6[ri_18, ri_19])) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty) then
            return(r[u_18, u_19])
          orfind u_16 = ri_16 <= Qe, u_17 = ri_17 <= N suchthat defined(r_1[ri_16, ri_17], z_5[ri_16, ri_17], sk[ri_17], sk[i1_6[ri_16, ri_17]], pkE_10[ri_16, ri_17], pk_R[ri_16, ri_17], pkS_4[ri_16, ri_17]) && (pkS' = pkS_4[ri_16, ri_17]) && (pkR' = pk_R[ri_16, ri_17]) && (pkE' = pkE_10[ri_16, ri_17]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (dh2 = exp(g, mult(sk[i1_6[ri_16, ri_17]], sk[ri_17]))) && (dh1 = exp(g, mult(sk[i1_6[ri_16, ri_17]], z_5[ri_16, ri_17]))) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty) then
            return(r_1[u_16, u_17])
          orfind u_14 = ri_14 <= Qd, u_15 = ri_15 <= N suchthat defined(r_2[ri_14, ri_15], sk[ri_15], pkE_3[ri_14, ri_15], pkR_1[ri_14, ri_15], pk_S[ri_14, ri_15]) && (pkS' = pk_S[ri_14, ri_15]) && (pkR' = pkR_1[ri_14, ri_15]) && (pkE' = pkE_3[ri_14, ri_15]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (dh2 = exp(pk_S[ri_14, ri_15], sk[ri_15])) && (dh1 = exp(pkE_3[ri_14, ri_15], sk[ri_15])) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty) then
            return(r_2[u_14, u_15])
          orfind u_12 = ri_12 <= Qh, u_13 = ri_13 <= N suchthat defined(r_3[ri_12, ri_13], salt[ri_12, ri_13], protocol1[ri_12, ri_13], suite1[ri_12, ri_13], label1[ri_12, ri_13], dh1[ri_12, ri_13], dh2[ri_12, ri_13], l[ri_12, ri_13], protocol2[ri_12, ri_13], suite2[ri_12, ri_13], label2[ri_12, ri_13], pkE'[ri_12, ri_13], pkR'[ri_12, ri_13], pkS'[ri_12, ri_13]) && (pkS' = pkS'[ri_12, ri_13]) && (pkR' = pkR'[ri_12, ri_13]) && (pkE' = pkE'[ri_12, ri_13]) && (label2 = label2[ri_12, ri_13]) && (suite2 = suite2[ri_12, ri_13]) && (protocol2 = protocol2[ri_12, ri_13]) && (l = l[ri_12, ri_13]) && (dh2 = dh2[ri_12, ri_13]) && (dh1 = dh1[ri_12, ri_13]) && (label1 = label1[ri_12, ri_13]) && (suite1 = suite1[ri_12, ri_13]) && (protocol1 = protocol1[ri_12, ri_13]) && (salt = salt[ri_12, ri_13]) then
            return(r_3[u_12, u_13])
          else
            r_3 <-R eae_output_t;
            return(r_3)
        else
          find [unique] u = ri <= Qh, u_1 = ri_1 <= N suchthat defined(r_4[ri, ri_1], x1[ri, ri_1]) && (x1 = x1[ri, ri_1]) then
            return(r_4[u, u_1])
          else
            r_4 <-R eae_output_t;
            return(r_4)
      ))


Applying equivalence gdh(exp) with variables: sk -> a, z_5 -> b [probability Adv_GDH(time(context for game 28) + time + (1 + Qe * N + N) * time(exp), 2 * Qh * Qd * N + N * N * Qe + Qd * N * N + 3 * Qh * N * N) + (Qe * N + N) * PDistRerandom + (N * N + 2 * Qe * Qe * N) * PCollKey]
  - Equivalence gdh(exp) with variables: sk -> a, z_5 -> b
yields

Game 29 is
      Ostart() :=
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (m_1: G_t <- pk_R; m'_1: G_t <- g; (m_1 = exp(m'_1, sk[i1_7]))) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          enc_8: bitstring <- Serialize(pkE_10);
          pkS_4: G_t <- exp(g, sk);
  {54}    find [unique] u_44 = ri_44 <= Qd suchthat defined(r_2[ri_44, i1_6], pkE_3[ri_44, i1_6], pk_S[ri_44, i1_6]) && (pkS_4 = pk_S[ri_44, i1_6]) && (pkE_10 = pkE_3[ri_44, i1_6]) then
            zz_10: eae_output_t <- r_2[u_44, i1_6];
            return(AuthEncap_tuple(r_2[u_44, i1_6], enc_8))
          orfind u_42 = ri_42 <= Qh, u_43 = ri_43 <= N suchthat defined(r_3[ri_42, ri_43], salt[ri_42, ri_43], protocol1[ri_42, ri_43], suite1[ri_42, ri_43], label1[ri_42, ri_43], dh1[ri_42, ri_43], dh2[ri_42, ri_43], l[ri_42, ri_43], protocol2[ri_42, ri_43], suite2[ri_42, ri_43], label2[ri_42, ri_43], pkE'[ri_42, ri_43], pkR'[ri_42, ri_43], pkS'[ri_42, ri_43]) && (pkS_4 = pkS'[ri_42, ri_43]) && (pk_R = pkR'[ri_42, ri_43]) && (pkE_10 = pkE'[ri_42, ri_43]) && (label_shared_secret = label2[ri_42, ri_43]) && (suite_id = suite2[ri_42, ri_43]) && (RFCXXXX = protocol2[ri_42, ri_43]) && (I2OSP2(Nsecret) = l[ri_42, ri_43]) && (m_9: G_t <- dh2[ri_42, ri_43]; (m_9 = exp(g, mult(sk[i1_6], sk)))) && (m_4: G_t <- dh1[ri_42, ri_43]; false) && (label_eae_prk = label1[ri_42, ri_43]) && (suite_id = suite1[ri_42, ri_43]) && (RFCXXXX = protocol1[ri_42, ri_43]) && (lbytes_empty = salt[ri_42, ri_43]) then
            zz_10: eae_output_t <- r_3[u_42, u_43];
            return(AuthEncap_tuple(r_3[u_42, u_43], enc_8))
          else
            r_1 <-R eae_output_t;
            zz_10: eae_output_t <- r_1;
            return(AuthEncap_tuple(r_1, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          find [unique] u_32 = ri_32 <= Qh, u_33 = ri_33 <= N suchthat defined(r_3[ri_32, ri_33], salt[ri_32, ri_33], protocol1[ri_32, ri_33], suite1[ri_32, ri_33], label1[ri_32, ri_33], dh1[ri_32, ri_33], dh2[ri_32, ri_33], l[ri_32, ri_33], protocol2[ri_32, ri_33], suite2[ri_32, ri_33], label2[ri_32, ri_33], pkE'[ri_32, ri_33], pkR'[ri_32, ri_33], pkS'[ri_32, ri_33]) && (pkS_5 = pkS'[ri_32, ri_33]) && (pk_R = pkR'[ri_32, ri_33]) && (pkE_11 = pkE'[ri_32, ri_33]) && (label_shared_secret = label2[ri_32, ri_33]) && (suite_id = suite2[ri_32, ri_33]) && (RFCXXXX = protocol2[ri_32, ri_33]) && (I2OSP2(Nsecret) = l[ri_32, ri_33]) && (m: G_t <- dh2[ri_32, ri_33]; m': G_t <- pk_R; (m = exp(m', sk))) && (exp(pk_R, z_6) = dh1[ri_32, ri_33]) && (label_eae_prk = label1[ri_32, ri_33]) && (suite_id = suite1[ri_32, ri_33]) && (RFCXXXX = protocol1[ri_32, ri_33]) && (lbytes_empty = salt[ri_32, ri_33]) then
            return(AuthEncap_tuple(r_3[u_32, u_33], enc_9))
          else
            r <-R eae_output_t;
            return(AuthEncap_tuple(r, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        find ie1_2 = ie1_3 <= Qe, i1_8 = i1_9 <= N suchthat defined(zz_10[ie1_3, i1_9], enc_8[ie1_3, i1_9], sk[i1_9], i1_6[ie1_3, i1_9]) && (i = i1_6[ie1_3, i1_9]) && (m_12: G_t <- pk_S; m'_5: G_t <- g; (m_12 = exp(m'_5, sk[i1_9]))) && (enc_8[ie1_3, i1_9] = enc_2) then
          return(AuthDecap_Some(zz_10[ie1_2, i1_8]))
        else
          let Serialize(pkE_3: G_t) = enc_2 in
            pkR_1: G_t <- exp(g, sk);
            find [unique] u_24 = ri_24 <= Qd suchthat defined(r_2[ri_24], pkE_3[ri_24], pk_S[ri_24]) && (pk_S = pk_S[ri_24]) && (pkE_3 = pkE_3[ri_24]) then
              return(AuthDecap_Some(r_2[u_24]))
            orfind u_22 = ri_22 <= Qh, u_23 = ri_23 <= N suchthat defined(r_3[ri_22, ri_23], salt[ri_22, ri_23], protocol1[ri_22, ri_23], suite1[ri_22, ri_23], label1[ri_22, ri_23], dh1[ri_22, ri_23], dh2[ri_22, ri_23], l[ri_22, ri_23], protocol2[ri_22, ri_23], suite2[ri_22, ri_23], label2[ri_22, ri_23], pkE'[ri_22, ri_23], pkR'[ri_22, ri_23], pkS'[ri_22, ri_23]) && (pk_S = pkS'[ri_22, ri_23]) && (pkR_1 = pkR'[ri_22, ri_23]) && (pkE_3 = pkE'[ri_22, ri_23]) && (label_shared_secret = label2[ri_22, ri_23]) && (suite_id = suite2[ri_22, ri_23]) && (RFCXXXX = protocol2[ri_22, ri_23]) && (I2OSP2(Nsecret) = l[ri_22, ri_23]) && (m_11: G_t <- dh2[ri_22, ri_23]; m'_4: G_t <- pk_S; (m_11 = exp(m'_4, sk))) && (m_10: G_t <- dh1[ri_22, ri_23]; m'_3: G_t <- pkE_3; (m_10 = exp(m'_3, sk))) && (label_eae_prk = label1[ri_22, ri_23]) && (suite_id = suite1[ri_22, ri_23]) && (RFCXXXX = protocol1[ri_22, ri_23]) && (lbytes_empty = salt[ri_22, ri_23]) then
              return(AuthDecap_Some(r_3[u_22, u_23]))
            else
              r_2 <-R eae_output_t;
              return(AuthDecap_Some(r_2))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        let eae_input(salt: extract_salt_t, concatExtract(protocol1: label_protocol_t, suite1: suite_id_t, label1: label_extract_t, concatDH(dh1: G_t, dh2: G_t)), concatExpand(l: two_byte_t, protocol2: label_protocol_t, suite2: suite_id_t, label2: label_expand_t, concatContext(pkE': G_t, pkR': G_t, pkS': G_t))) = x1 in
 {742}    find [unique] u_18 = ri_18 <= Qe, u_19 = ri_19 <= N suchthat defined(r[ri_18, ri_19], z_6[ri_18, ri_19], sk[ri_19], pkE_11[ri_18, ri_19], pk_R[ri_18, ri_19], pkS_5[ri_18, ri_19]) && (pkS' = pkS_5[ri_18, ri_19]) && (pkR' = pk_R[ri_18, ri_19]) && (pkE' = pkE_11[ri_18, ri_19]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (m_13: G_t <- dh2; m'_6: G_t <- pk_R[ri_18, ri_19]; (m_13 = exp(m'_6, sk[ri_19]))) && (dh1 = exp(pk_R[ri_18, ri_19], z_6[ri_18, ri_19])) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty) then
            return(r[u_18, u_19])
          orfind u_16 = ri_16 <= Qe, u_17 = ri_17 <= N suchthat defined(r_1[ri_16, ri_17], sk[ri_17], sk[i1_6[ri_16, ri_17]], pkE_10[ri_16, ri_17], pk_R[ri_16, ri_17], pkS_4[ri_16, ri_17]) && (pkS' = pkS_4[ri_16, ri_17]) && (pkR' = pk_R[ri_16, ri_17]) && (pkE' = pkE_10[ri_16, ri_17]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (m_20: G_t <- dh2; (m_20 = exp(g, mult(sk[i1_6[ri_16, ri_17]], sk[ri_17])))) && (m_15: G_t <- dh1; false) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty) then
            return(r_1[u_16, u_17])
          orfind u_14 = ri_14 <= Qd, u_15 = ri_15 <= N suchthat defined(r_2[ri_14, ri_15], sk[ri_15], pkE_3[ri_14, ri_15], pkR_1[ri_14, ri_15], pk_S[ri_14, ri_15]) && (pkS' = pk_S[ri_14, ri_15]) && (pkR' = pkR_1[ri_14, ri_15]) && (pkE' = pkE_3[ri_14, ri_15]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (m_22: G_t <- dh2; m'_8: G_t <- pk_S[ri_14, ri_15]; (m_22 = exp(m'_8, sk[ri_15]))) && (m_21: G_t <- dh1; m'_7: G_t <- pkE_3[ri_14, ri_15]; (m_21 = exp(m'_7, sk[ri_15]))) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty) then
            return(r_2[u_14, u_15])
          orfind u_12 = ri_12 <= Qh, u_13 = ri_13 <= N suchthat defined(r_3[ri_12, ri_13], salt[ri_12, ri_13], protocol1[ri_12, ri_13], suite1[ri_12, ri_13], label1[ri_12, ri_13], dh1[ri_12, ri_13], dh2[ri_12, ri_13], l[ri_12, ri_13], protocol2[ri_12, ri_13], suite2[ri_12, ri_13], label2[ri_12, ri_13], pkE'[ri_12, ri_13], pkR'[ri_12, ri_13], pkS'[ri_12, ri_13]) && (pkS' = pkS'[ri_12, ri_13]) && (pkR' = pkR'[ri_12, ri_13]) && (pkE' = pkE'[ri_12, ri_13]) && (label2 = label2[ri_12, ri_13]) && (suite2 = suite2[ri_12, ri_13]) && (protocol2 = protocol2[ri_12, ri_13]) && (l = l[ri_12, ri_13]) && (dh2 = dh2[ri_12, ri_13]) && (dh1 = dh1[ri_12, ri_13]) && (label1 = label1[ri_12, ri_13]) && (suite1 = suite1[ri_12, ri_13]) && (protocol1 = protocol1[ri_12, ri_13]) && (salt = salt[ri_12, ri_13]) then
            return(r_3[u_12, u_13])
          else
            r_3 <-R eae_output_t;
            return(r_3)
        else
          find [unique] u = ri <= Qh, u_1 = ri_1 <= N suchthat defined(r_4[ri, ri_1], x1[ri, ri_1]) && (x1 = x1[ri, ri_1]) then
            return(r_4[u, u_1])
          else
            r_4 <-R eae_output_t;
            return(r_4)
      ))


Applying expand
  - Expand if/find/let
    - Remove branch 2 in find at 742
    - Remove branch 2 in find at 54
yields

Game 30 is
      Ostart() :=
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (m_1: G_t <- pk_R; m'_1: G_t <- g; (m_1 = exp(m'_1, sk[i1_7]))) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          enc_8: bitstring <- Serialize(pkE_10);
          pkS_4: G_t <- exp(g, sk);
          find [unique] u_44 = ri_44 <= Qd suchthat defined(r_2[ri_44, i1_6], pkE_3[ri_44, i1_6], pk_S[ri_44, i1_6]) && (pkS_4 = pk_S[ri_44, i1_6]) && (pkE_10 = pkE_3[ri_44, i1_6]) then
            zz_10: eae_output_t <- r_2[u_44, i1_6];
            return(AuthEncap_tuple(r_2[u_44, i1_6], enc_8))
          else
            r_1 <-R eae_output_t;
            zz_10: eae_output_t <- r_1;
            return(AuthEncap_tuple(r_1, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          find [unique] u_32 = ri_32 <= Qh, u_33 = ri_33 <= N suchthat defined(r_3[ri_32, ri_33], salt[ri_32, ri_33], protocol1[ri_32, ri_33], suite1[ri_32, ri_33], label1[ri_32, ri_33], dh1[ri_32, ri_33], dh2[ri_32, ri_33], l[ri_32, ri_33], protocol2[ri_32, ri_33], suite2[ri_32, ri_33], label2[ri_32, ri_33], pkE'[ri_32, ri_33], pkR'[ri_32, ri_33], pkS'[ri_32, ri_33]) && (m: G_t <- dh2[ri_32, ri_33]; m': G_t <- pk_R; ((pkS_5 = pkS'[ri_32, ri_33]) && (pk_R = pkR'[ri_32, ri_33]) && (pkE_11 = pkE'[ri_32, ri_33]) && (label_shared_secret = label2[ri_32, ri_33]) && (suite_id = suite2[ri_32, ri_33]) && (RFCXXXX = protocol2[ri_32, ri_33]) && (I2OSP2(Nsecret) = l[ri_32, ri_33]) && (m = exp(m', sk)) && (exp(pk_R, z_6) = dh1[ri_32, ri_33]) && (label_eae_prk = label1[ri_32, ri_33]) && (suite_id = suite1[ri_32, ri_33]) && (RFCXXXX = protocol1[ri_32, ri_33]) && (lbytes_empty = salt[ri_32, ri_33]))) then
            return(AuthEncap_tuple(r_3[u_32, u_33], enc_9))
          else
            r <-R eae_output_t;
            return(AuthEncap_tuple(r, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        find ie1_2 = ie1_3 <= Qe, i1_8 = i1_9 <= N suchthat defined(zz_10[ie1_3, i1_9], enc_8[ie1_3, i1_9], sk[i1_9], i1_6[ie1_3, i1_9]) && (m_12: G_t <- pk_S; m'_5: G_t <- g; ((i = i1_6[ie1_3, i1_9]) && (m_12 = exp(m'_5, sk[i1_9])) && (enc_8[ie1_3, i1_9] = enc_2))) then
          return(AuthDecap_Some(zz_10[ie1_2, i1_8]))
        else
          let Serialize(pkE_3: G_t) = enc_2 in
            pkR_1: G_t <- exp(g, sk);
            find [unique] u_24 = ri_24 <= Qd suchthat defined(r_2[ri_24], pkE_3[ri_24], pk_S[ri_24]) && (pk_S = pk_S[ri_24]) && (pkE_3 = pkE_3[ri_24]) then
              return(AuthDecap_Some(r_2[u_24]))
            orfind u_22 = ri_22 <= Qh, u_23 = ri_23 <= N suchthat defined(r_3[ri_22, ri_23], salt[ri_22, ri_23], protocol1[ri_22, ri_23], suite1[ri_22, ri_23], label1[ri_22, ri_23], dh1[ri_22, ri_23], dh2[ri_22, ri_23], l[ri_22, ri_23], protocol2[ri_22, ri_23], suite2[ri_22, ri_23], label2[ri_22, ri_23], pkE'[ri_22, ri_23], pkR'[ri_22, ri_23], pkS'[ri_22, ri_23]) && (m_11: G_t <- dh2[ri_22, ri_23]; m'_4: G_t <- pk_S; m_10: G_t <- dh1[ri_22, ri_23]; m'_3: G_t <- pkE_3; ((pk_S = pkS'[ri_22, ri_23]) && (pkR_1 = pkR'[ri_22, ri_23]) && (pkE_3 = pkE'[ri_22, ri_23]) && (label_shared_secret = label2[ri_22, ri_23]) && (suite_id = suite2[ri_22, ri_23]) && (RFCXXXX = protocol2[ri_22, ri_23]) && (I2OSP2(Nsecret) = l[ri_22, ri_23]) && (m_11 = exp(m'_4, sk)) && (m_10 = exp(m'_3, sk)) && (label_eae_prk = label1[ri_22, ri_23]) && (suite_id = suite1[ri_22, ri_23]) && (RFCXXXX = protocol1[ri_22, ri_23]) && (lbytes_empty = salt[ri_22, ri_23]))) then
              return(AuthDecap_Some(r_3[u_22, u_23]))
            else
              r_2 <-R eae_output_t;
              return(AuthDecap_Some(r_2))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        let eae_input(salt: extract_salt_t, concatExtract(protocol1: label_protocol_t, suite1: suite_id_t, label1: label_extract_t, concatDH(dh1: G_t, dh2: G_t)), concatExpand(l: two_byte_t, protocol2: label_protocol_t, suite2: suite_id_t, label2: label_expand_t, concatContext(pkE': G_t, pkR': G_t, pkS': G_t))) = x1 in
          find [unique] u_18 = ri_18 <= Qe, u_19 = ri_19 <= N suchthat defined(r[ri_18, ri_19], z_6[ri_18, ri_19], sk[ri_19], pkE_11[ri_18, ri_19], pk_R[ri_18, ri_19], pkS_5[ri_18, ri_19]) && (m_13: G_t <- dh2; m'_6: G_t <- pk_R[ri_18, ri_19]; ((pkS' = pkS_5[ri_18, ri_19]) && (pkR' = pk_R[ri_18, ri_19]) && (pkE' = pkE_11[ri_18, ri_19]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (m_13 = exp(m'_6, sk[ri_19])) && (dh1 = exp(pk_R[ri_18, ri_19], z_6[ri_18, ri_19])) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty))) then
            return(r[u_18, u_19])
          orfind u_14 = ri_14 <= Qd, u_15 = ri_15 <= N suchthat defined(r_2[ri_14, ri_15], sk[ri_15], pkE_3[ri_14, ri_15], pkR_1[ri_14, ri_15], pk_S[ri_14, ri_15]) && (m_22: G_t <- dh2; m'_8: G_t <- pk_S[ri_14, ri_15]; m_21: G_t <- dh1; m'_7: G_t <- pkE_3[ri_14, ri_15]; ((pkS' = pk_S[ri_14, ri_15]) && (pkR' = pkR_1[ri_14, ri_15]) && (pkE' = pkE_3[ri_14, ri_15]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (m_22 = exp(m'_8, sk[ri_15])) && (m_21 = exp(m'_7, sk[ri_15])) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty))) then
            return(r_2[u_14, u_15])
          orfind u_12 = ri_12 <= Qh, u_13 = ri_13 <= N suchthat defined(r_3[ri_12, ri_13], salt[ri_12, ri_13], protocol1[ri_12, ri_13], suite1[ri_12, ri_13], label1[ri_12, ri_13], dh1[ri_12, ri_13], dh2[ri_12, ri_13], l[ri_12, ri_13], protocol2[ri_12, ri_13], suite2[ri_12, ri_13], label2[ri_12, ri_13], pkE'[ri_12, ri_13], pkR'[ri_12, ri_13], pkS'[ri_12, ri_13]) && (pkS' = pkS'[ri_12, ri_13]) && (pkR' = pkR'[ri_12, ri_13]) && (pkE' = pkE'[ri_12, ri_13]) && (label2 = label2[ri_12, ri_13]) && (suite2 = suite2[ri_12, ri_13]) && (protocol2 = protocol2[ri_12, ri_13]) && (l = l[ri_12, ri_13]) && (dh2 = dh2[ri_12, ri_13]) && (dh1 = dh1[ri_12, ri_13]) && (label1 = label1[ri_12, ri_13]) && (suite1 = suite1[ri_12, ri_13]) && (protocol1 = protocol1[ri_12, ri_13]) && (salt = salt[ri_12, ri_13]) then
            return(r_3[u_12, u_13])
          else
            r_3 <-R eae_output_t;
            return(r_3)
        else
          find [unique] u = ri <= Qh, u_1 = ri_1 <= N suchthat defined(r_4[ri, ri_1], x1[ri, ri_1]) && (x1 = x1[ri, ri_1]) then
            return(r_4[u, u_1])
          else
            r_4 <-R eae_output_t;
            return(r_4)
      ))


Applying remove assignments of findcond
  - Remove assignments on m_13 (definition removed, all usages removed)
  - Remove assignments on m'_6 (definition removed, all usages removed)
  - Remove assignments on m_22 (definition removed, all usages removed)
  - Remove assignments on m'_8 (definition removed, all usages removed)
  - Remove assignments on m_21 (definition removed, all usages removed)
  - Remove assignments on m'_7 (definition removed, all usages removed)
  - Remove assignments on m_11 (definition removed, all usages removed)
  - Remove assignments on m'_4 (definition removed, all usages removed)
  - Remove assignments on m_10 (definition removed, all usages removed)
  - Remove assignments on m'_3 (definition removed, all usages removed)
  - Remove assignments on m_12 (definition removed, all usages removed)
  - Remove assignments on m'_5 (definition removed, all usages removed)
  - Remove assignments on m (definition removed, all usages removed)
  - Remove assignments on m' (definition removed, all usages removed)
  - Remove assignments on m_1 (definition removed, all usages removed)
  - Remove assignments on m'_1 (definition removed, all usages removed)
yields

Game 31 is
      Ostart() :=
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          enc_8: bitstring <- Serialize(pkE_10);
          pkS_4: G_t <- exp(g, sk);
  {44}    find [unique] u_44 = ri_44 <= Qd suchthat defined(r_2[ri_44, i1_6], pkE_3[ri_44, i1_6], pk_S[ri_44, i1_6]) && (pkS_4 = pk_S[ri_44, i1_6]) && (pkE_10 = pkE_3[ri_44, i1_6]) then
            zz_10: eae_output_t <- r_2[u_44, i1_6];
            return(AuthEncap_tuple(r_2[u_44, i1_6], enc_8))
          else
            r_1 <-R eae_output_t;
            zz_10: eae_output_t <- r_1;
            return(AuthEncap_tuple(r_1, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          find [unique] u_32 = ri_32 <= Qh, u_33 = ri_33 <= N suchthat defined(r_3[ri_32, ri_33], salt[ri_32, ri_33], protocol1[ri_32, ri_33], suite1[ri_32, ri_33], label1[ri_32, ri_33], dh1[ri_32, ri_33], dh2[ri_32, ri_33], l[ri_32, ri_33], protocol2[ri_32, ri_33], suite2[ri_32, ri_33], label2[ri_32, ri_33], pkE'[ri_32, ri_33], pkR'[ri_32, ri_33], pkS'[ri_32, ri_33]) && (pkS_5 = pkS'[ri_32, ri_33]) && (pk_R = pkR'[ri_32, ri_33]) && (pkE_11 = pkE'[ri_32, ri_33]) && (label_shared_secret = label2[ri_32, ri_33]) && (suite_id = suite2[ri_32, ri_33]) && (RFCXXXX = protocol2[ri_32, ri_33]) && (I2OSP2(Nsecret) = l[ri_32, ri_33]) && (dh2[ri_32, ri_33] = exp(pk_R, sk)) && (exp(pk_R, z_6) = dh1[ri_32, ri_33]) && (label_eae_prk = label1[ri_32, ri_33]) && (suite_id = suite1[ri_32, ri_33]) && (RFCXXXX = protocol1[ri_32, ri_33]) && (lbytes_empty = salt[ri_32, ri_33]) then
            return(AuthEncap_tuple(r_3[u_32, u_33], enc_9))
          else
            r <-R eae_output_t;
            return(AuthEncap_tuple(r, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        find ie1_2 = ie1_3 <= Qe, i1_8 = i1_9 <= N suchthat defined(zz_10[ie1_3, i1_9], enc_8[ie1_3, i1_9], sk[i1_9], i1_6[ie1_3, i1_9]) && (i = i1_6[ie1_3, i1_9]) && (pk_S = exp(g, sk[i1_9])) && (enc_8[ie1_3, i1_9] = enc_2) then
          return(AuthDecap_Some(zz_10[ie1_2, i1_8]))
        else
          let Serialize(pkE_3: G_t) = enc_2 in
            pkR_1: G_t <- exp(g, sk);
            find [unique] u_24 = ri_24 <= Qd suchthat defined(r_2[ri_24], pkE_3[ri_24], pk_S[ri_24]) && (pk_S = pk_S[ri_24]) && (pkE_3 = pkE_3[ri_24]) then
              return(AuthDecap_Some(r_2[u_24]))
            orfind u_22 = ri_22 <= Qh, u_23 = ri_23 <= N suchthat defined(r_3[ri_22, ri_23], salt[ri_22, ri_23], protocol1[ri_22, ri_23], suite1[ri_22, ri_23], label1[ri_22, ri_23], dh1[ri_22, ri_23], dh2[ri_22, ri_23], l[ri_22, ri_23], protocol2[ri_22, ri_23], suite2[ri_22, ri_23], label2[ri_22, ri_23], pkE'[ri_22, ri_23], pkR'[ri_22, ri_23], pkS'[ri_22, ri_23]) && (pk_S = pkS'[ri_22, ri_23]) && (pkR_1 = pkR'[ri_22, ri_23]) && (pkE_3 = pkE'[ri_22, ri_23]) && (label_shared_secret = label2[ri_22, ri_23]) && (suite_id = suite2[ri_22, ri_23]) && (RFCXXXX = protocol2[ri_22, ri_23]) && (I2OSP2(Nsecret) = l[ri_22, ri_23]) && (dh2[ri_22, ri_23] = exp(pk_S, sk)) && (dh1[ri_22, ri_23] = exp(pkE_3, sk)) && (label_eae_prk = label1[ri_22, ri_23]) && (suite_id = suite1[ri_22, ri_23]) && (RFCXXXX = protocol1[ri_22, ri_23]) && (lbytes_empty = salt[ri_22, ri_23]) then
              return(AuthDecap_Some(r_3[u_22, u_23]))
            else
              r_2 <-R eae_output_t;
              return(AuthDecap_Some(r_2))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        let eae_input(salt: extract_salt_t, concatExtract(protocol1: label_protocol_t, suite1: suite_id_t, label1: label_extract_t, concatDH(dh1: G_t, dh2: G_t)), concatExpand(l: two_byte_t, protocol2: label_protocol_t, suite2: suite_id_t, label2: label_expand_t, concatContext(pkE': G_t, pkR': G_t, pkS': G_t))) = x1 in
          find [unique] u_18 = ri_18 <= Qe, u_19 = ri_19 <= N suchthat defined(r[ri_18, ri_19], z_6[ri_18, ri_19], sk[ri_19], pkE_11[ri_18, ri_19], pk_R[ri_18, ri_19], pkS_5[ri_18, ri_19]) && (pkS' = pkS_5[ri_18, ri_19]) && (pkR' = pk_R[ri_18, ri_19]) && (pkE' = pkE_11[ri_18, ri_19]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (dh2 = exp(pk_R[ri_18, ri_19], sk[ri_19])) && (dh1 = exp(pk_R[ri_18, ri_19], z_6[ri_18, ri_19])) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty) then
            return(r[u_18, u_19])
          orfind u_14 = ri_14 <= Qd, u_15 = ri_15 <= N suchthat defined(r_2[ri_14, ri_15], sk[ri_15], pkE_3[ri_14, ri_15], pkR_1[ri_14, ri_15], pk_S[ri_14, ri_15]) && (pkS' = pk_S[ri_14, ri_15]) && (pkR' = pkR_1[ri_14, ri_15]) && (pkE' = pkE_3[ri_14, ri_15]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (dh2 = exp(pk_S[ri_14, ri_15], sk[ri_15])) && (dh1 = exp(pkE_3[ri_14, ri_15], sk[ri_15])) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty) then
            return(r_2[u_14, u_15])
          orfind u_12 = ri_12 <= Qh, u_13 = ri_13 <= N suchthat defined(r_3[ri_12, ri_13], salt[ri_12, ri_13], protocol1[ri_12, ri_13], suite1[ri_12, ri_13], label1[ri_12, ri_13], dh1[ri_12, ri_13], dh2[ri_12, ri_13], l[ri_12, ri_13], protocol2[ri_12, ri_13], suite2[ri_12, ri_13], label2[ri_12, ri_13], pkE'[ri_12, ri_13], pkR'[ri_12, ri_13], pkS'[ri_12, ri_13]) && (pkS' = pkS'[ri_12, ri_13]) && (pkR' = pkR'[ri_12, ri_13]) && (pkE' = pkE'[ri_12, ri_13]) && (label2 = label2[ri_12, ri_13]) && (suite2 = suite2[ri_12, ri_13]) && (protocol2 = protocol2[ri_12, ri_13]) && (l = l[ri_12, ri_13]) && (dh2 = dh2[ri_12, ri_13]) && (dh1 = dh1[ri_12, ri_13]) && (label1 = label1[ri_12, ri_13]) && (suite1 = suite1[ri_12, ri_13]) && (protocol1 = protocol1[ri_12, ri_13]) && (salt = salt[ri_12, ri_13]) then
            return(r_3[u_12, u_13])
          else
            r_3 <-R eae_output_t;
            return(r_3)
        else
          find [unique] u = ri <= Qh, u_1 = ri_1 <= N suchthat defined(r_4[ri, ri_1], x1[ri, ri_1]) && (x1 = x1[ri, ri_1]) then
            return(r_4[u, u_1])
          else
            r_4 <-R eae_output_t;
            return(r_4)
      ))


Applying simplify [probability (N * Qe + N * N * Qe) * PCollKey]
  - Simplification pass
    - Remove branch 1 in find at 44
    - Find at 44 removed (else branch kept if any)
yields

Game 32 is
      Ostart() :=
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          enc_8: bitstring <- Serialize(pkE_10);
          pkS_4: G_t <- exp(g, sk);
          r_1 <-R eae_output_t;
          zz_10: eae_output_t <- r_1;
          return(AuthEncap_tuple(r_1, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          find [unique] u_32 = ri_32 <= Qh, u_33 = ri_33 <= N suchthat defined(r_3[ri_32, ri_33], salt[ri_32, ri_33], protocol1[ri_32, ri_33], suite1[ri_32, ri_33], label1[ri_32, ri_33], dh1[ri_32, ri_33], dh2[ri_32, ri_33], l[ri_32, ri_33], protocol2[ri_32, ri_33], suite2[ri_32, ri_33], label2[ri_32, ri_33], pkE'[ri_32, ri_33], pkR'[ri_32, ri_33], pkS'[ri_32, ri_33]) && (pkS_5 = pkS'[ri_32, ri_33]) && (pk_R = pkR'[ri_32, ri_33]) && (pkE_11 = pkE'[ri_32, ri_33]) && (label_shared_secret = label2[ri_32, ri_33]) && (suite_id = suite2[ri_32, ri_33]) && (RFCXXXX = protocol2[ri_32, ri_33]) && (I2OSP2(Nsecret) = l[ri_32, ri_33]) && (dh2[ri_32, ri_33] = exp(pk_R, sk)) && (exp(pk_R, z_6) = dh1[ri_32, ri_33]) && (label_eae_prk = label1[ri_32, ri_33]) && (suite_id = suite1[ri_32, ri_33]) && (RFCXXXX = protocol1[ri_32, ri_33]) && (lbytes_empty = salt[ri_32, ri_33]) then
            return(AuthEncap_tuple(r_3[u_32, u_33], enc_9))
          else
            r <-R eae_output_t;
            return(AuthEncap_tuple(r, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        find ie1_2 = ie1_3 <= Qe, i1_8 = i1_9 <= N suchthat defined(zz_10[ie1_3, i1_9], enc_8[ie1_3, i1_9], sk[i1_9], i1_6[ie1_3, i1_9]) && (i = i1_6[ie1_3, i1_9]) && (pk_S = exp(g, sk[i1_9])) && (enc_8[ie1_3, i1_9] = enc_2) then
          return(AuthDecap_Some(zz_10[ie1_2, i1_8]))
        else
          let Serialize(pkE_3: G_t) = enc_2 in
            pkR_1: G_t <- exp(g, sk);
            find [unique] u_24 = ri_24 <= Qd suchthat defined(r_2[ri_24], pkE_3[ri_24], pk_S[ri_24]) && (pk_S = pk_S[ri_24]) && (pkE_3 = pkE_3[ri_24]) then
              return(AuthDecap_Some(r_2[u_24]))
            orfind u_22 = ri_22 <= Qh, u_23 = ri_23 <= N suchthat defined(r_3[ri_22, ri_23], salt[ri_22, ri_23], protocol1[ri_22, ri_23], suite1[ri_22, ri_23], label1[ri_22, ri_23], dh1[ri_22, ri_23], dh2[ri_22, ri_23], l[ri_22, ri_23], protocol2[ri_22, ri_23], suite2[ri_22, ri_23], label2[ri_22, ri_23], pkE'[ri_22, ri_23], pkR'[ri_22, ri_23], pkS'[ri_22, ri_23]) && (pk_S = pkS'[ri_22, ri_23]) && (pkR_1 = pkR'[ri_22, ri_23]) && (pkE_3 = pkE'[ri_22, ri_23]) && (label_shared_secret = label2[ri_22, ri_23]) && (suite_id = suite2[ri_22, ri_23]) && (RFCXXXX = protocol2[ri_22, ri_23]) && (I2OSP2(Nsecret) = l[ri_22, ri_23]) && (dh2[ri_22, ri_23] = exp(pk_S, sk)) && (dh1[ri_22, ri_23] = exp(pkE_3, sk)) && (label_eae_prk = label1[ri_22, ri_23]) && (suite_id = suite1[ri_22, ri_23]) && (RFCXXXX = protocol1[ri_22, ri_23]) && (lbytes_empty = salt[ri_22, ri_23]) then
              return(AuthDecap_Some(r_3[u_22, u_23]))
            else
              r_2 <-R eae_output_t;
              return(AuthDecap_Some(r_2))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        let eae_input(salt: extract_salt_t, concatExtract(protocol1: label_protocol_t, suite1: suite_id_t, label1: label_extract_t, concatDH(dh1: G_t, dh2: G_t)), concatExpand(l: two_byte_t, protocol2: label_protocol_t, suite2: suite_id_t, label2: label_expand_t, concatContext(pkE': G_t, pkR': G_t, pkS': G_t))) = x1 in
          find [unique] u_18 = ri_18 <= Qe, u_19 = ri_19 <= N suchthat defined(r[ri_18, ri_19], z_6[ri_18, ri_19], sk[ri_19], pkE_11[ri_18, ri_19], pk_R[ri_18, ri_19], pkS_5[ri_18, ri_19]) && (pkS' = pkS_5[ri_18, ri_19]) && (pkR' = pk_R[ri_18, ri_19]) && (pkE' = pkE_11[ri_18, ri_19]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (dh2 = exp(pk_R[ri_18, ri_19], sk[ri_19])) && (dh1 = exp(pk_R[ri_18, ri_19], z_6[ri_18, ri_19])) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty) then
            return(r[u_18, u_19])
          orfind u_14 = ri_14 <= Qd, u_15 = ri_15 <= N suchthat defined(r_2[ri_14, ri_15], sk[ri_15], pkE_3[ri_14, ri_15], pkR_1[ri_14, ri_15], pk_S[ri_14, ri_15]) && (pkS' = pk_S[ri_14, ri_15]) && (pkR' = pkR_1[ri_14, ri_15]) && (pkE' = pkE_3[ri_14, ri_15]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (dh2 = exp(pk_S[ri_14, ri_15], sk[ri_15])) && (dh1 = exp(pkE_3[ri_14, ri_15], sk[ri_15])) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty) then
            return(r_2[u_14, u_15])
          orfind u_12 = ri_12 <= Qh, u_13 = ri_13 <= N suchthat defined(r_3[ri_12, ri_13], salt[ri_12, ri_13], protocol1[ri_12, ri_13], suite1[ri_12, ri_13], label1[ri_12, ri_13], dh1[ri_12, ri_13], dh2[ri_12, ri_13], l[ri_12, ri_13], protocol2[ri_12, ri_13], suite2[ri_12, ri_13], label2[ri_12, ri_13], pkE'[ri_12, ri_13], pkR'[ri_12, ri_13], pkS'[ri_12, ri_13]) && (pkS' = pkS'[ri_12, ri_13]) && (pkR' = pkR'[ri_12, ri_13]) && (pkE' = pkE'[ri_12, ri_13]) && (label2 = label2[ri_12, ri_13]) && (suite2 = suite2[ri_12, ri_13]) && (protocol2 = protocol2[ri_12, ri_13]) && (l = l[ri_12, ri_13]) && (dh2 = dh2[ri_12, ri_13]) && (dh1 = dh1[ri_12, ri_13]) && (label1 = label1[ri_12, ri_13]) && (suite1 = suite1[ri_12, ri_13]) && (protocol1 = protocol1[ri_12, ri_13]) && (salt = salt[ri_12, ri_13]) then
            return(r_3[u_12, u_13])
          else
            r_3 <-R eae_output_t;
            return(r_3)
        else
          find [unique] u = ri <= Qh, u_1 = ri_1 <= N suchthat defined(r_4[ri, ri_1], x1[ri, ri_1]) && (x1 = x1[ri, ri_1]) then
            return(r_4[u, u_1])
          else
            r_4 <-R eae_output_t;
            return(r_4)
      ))


Applying remove assignments of findcond
  - Remove assignments on pkS_4 (definition removed, all usages removed)
  - Remove assignments on zz_10 (definition removed, all usages removed)
yields

Game 33 is
      Ostart() :=
      return();
      foreach i <= N do
      Osetup() :=
      sk <-R Z_t;
      return();
      ((
        foreach ie <= Qe do
        OAEncap(pk_R: G_t) :=
        find i1_6 = i1_7 <= N suchthat defined(sk[i1_7]) && (pk_R = exp(g, sk[i1_7])) then
          z_5 <-R Z_t;
          pkE_10: G_t <- exp(g, z_5);
          enc_8: bitstring <- Serialize(pkE_10);
          r_1 <-R eae_output_t;
          return(AuthEncap_tuple(r_1, enc_8))
        else
          z_6 <-R Z_t;
          pkE_11: G_t <- exp(g, z_6);
          enc_9: bitstring <- Serialize(pkE_11);
          pkS_5: G_t <- exp(g, sk);
          find [unique] u_32 = ri_32 <= Qh, u_33 = ri_33 <= N suchthat defined(r_3[ri_32, ri_33], salt[ri_32, ri_33], protocol1[ri_32, ri_33], suite1[ri_32, ri_33], label1[ri_32, ri_33], dh1[ri_32, ri_33], dh2[ri_32, ri_33], l[ri_32, ri_33], protocol2[ri_32, ri_33], suite2[ri_32, ri_33], label2[ri_32, ri_33], pkE'[ri_32, ri_33], pkR'[ri_32, ri_33], pkS'[ri_32, ri_33]) && (pkS_5 = pkS'[ri_32, ri_33]) && (pk_R = pkR'[ri_32, ri_33]) && (pkE_11 = pkE'[ri_32, ri_33]) && (label_shared_secret = label2[ri_32, ri_33]) && (suite_id = suite2[ri_32, ri_33]) && (RFCXXXX = protocol2[ri_32, ri_33]) && (I2OSP2(Nsecret) = l[ri_32, ri_33]) && (dh2[ri_32, ri_33] = exp(pk_R, sk)) && (exp(pk_R, z_6) = dh1[ri_32, ri_33]) && (label_eae_prk = label1[ri_32, ri_33]) && (suite_id = suite1[ri_32, ri_33]) && (RFCXXXX = protocol1[ri_32, ri_33]) && (lbytes_empty = salt[ri_32, ri_33]) then
            return(AuthEncap_tuple(r_3[u_32, u_33], enc_9))
          else
            r <-R eae_output_t;
            return(AuthEncap_tuple(r, enc_9))
      ) | (
        foreach id <= Qd do
        OADecap(pk_S: G_t, enc_2: bitstring) :=
        find ie1_2 = ie1_3 <= Qe, i1_8 = i1_9 <= N suchthat defined(r_1[ie1_3, i1_9], r_1[ie1_3, i1_9], enc_8[ie1_3, i1_9], sk[i1_9], i1_6[ie1_3, i1_9]) && (i = i1_6[ie1_3, i1_9]) && (pk_S = exp(g, sk[i1_9])) && (enc_8[ie1_3, i1_9] = enc_2) then
          return(AuthDecap_Some(r_1[ie1_2, i1_8]))
        else
          let Serialize(pkE_3: G_t) = enc_2 in
            pkR_1: G_t <- exp(g, sk);
            find [unique] u_24 = ri_24 <= Qd suchthat defined(r_2[ri_24], pkE_3[ri_24], pk_S[ri_24]) && (pk_S = pk_S[ri_24]) && (pkE_3 = pkE_3[ri_24]) then
              return(AuthDecap_Some(r_2[u_24]))
            orfind u_22 = ri_22 <= Qh, u_23 = ri_23 <= N suchthat defined(r_3[ri_22, ri_23], salt[ri_22, ri_23], protocol1[ri_22, ri_23], suite1[ri_22, ri_23], label1[ri_22, ri_23], dh1[ri_22, ri_23], dh2[ri_22, ri_23], l[ri_22, ri_23], protocol2[ri_22, ri_23], suite2[ri_22, ri_23], label2[ri_22, ri_23], pkE'[ri_22, ri_23], pkR'[ri_22, ri_23], pkS'[ri_22, ri_23]) && (pk_S = pkS'[ri_22, ri_23]) && (pkR_1 = pkR'[ri_22, ri_23]) && (pkE_3 = pkE'[ri_22, ri_23]) && (label_shared_secret = label2[ri_22, ri_23]) && (suite_id = suite2[ri_22, ri_23]) && (RFCXXXX = protocol2[ri_22, ri_23]) && (I2OSP2(Nsecret) = l[ri_22, ri_23]) && (dh2[ri_22, ri_23] = exp(pk_S, sk)) && (dh1[ri_22, ri_23] = exp(pkE_3, sk)) && (label_eae_prk = label1[ri_22, ri_23]) && (suite_id = suite1[ri_22, ri_23]) && (RFCXXXX = protocol1[ri_22, ri_23]) && (lbytes_empty = salt[ri_22, ri_23]) then
              return(AuthDecap_Some(r_3[u_22, u_23]))
            else
              r_2 <-R eae_output_t;
              return(AuthDecap_Some(r_2))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk))
      ) | (
        foreach iH <= Qh do
        OH(x1: eae_input_t) :=
        let eae_input(salt: extract_salt_t, concatExtract(protocol1: label_protocol_t, suite1: suite_id_t, label1: label_extract_t, concatDH(dh1: G_t, dh2: G_t)), concatExpand(l: two_byte_t, protocol2: label_protocol_t, suite2: suite_id_t, label2: label_expand_t, concatContext(pkE': G_t, pkR': G_t, pkS': G_t))) = x1 in
          find [unique] u_18 = ri_18 <= Qe, u_19 = ri_19 <= N suchthat defined(r[ri_18, ri_19], z_6[ri_18, ri_19], sk[ri_19], pkE_11[ri_18, ri_19], pk_R[ri_18, ri_19], pkS_5[ri_18, ri_19]) && (pkS' = pkS_5[ri_18, ri_19]) && (pkR' = pk_R[ri_18, ri_19]) && (pkE' = pkE_11[ri_18, ri_19]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (dh2 = exp(pk_R[ri_18, ri_19], sk[ri_19])) && (dh1 = exp(pk_R[ri_18, ri_19], z_6[ri_18, ri_19])) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty) then
            return(r[u_18, u_19])
          orfind u_14 = ri_14 <= Qd, u_15 = ri_15 <= N suchthat defined(r_2[ri_14, ri_15], sk[ri_15], pkE_3[ri_14, ri_15], pkR_1[ri_14, ri_15], pk_S[ri_14, ri_15]) && (pkS' = pk_S[ri_14, ri_15]) && (pkR' = pkR_1[ri_14, ri_15]) && (pkE' = pkE_3[ri_14, ri_15]) && (label2 = label_shared_secret) && (suite2 = suite_id) && (protocol2 = RFCXXXX) && (l = I2OSP2(Nsecret)) && (dh2 = exp(pk_S[ri_14, ri_15], sk[ri_15])) && (dh1 = exp(pkE_3[ri_14, ri_15], sk[ri_15])) && (label1 = label_eae_prk) && (suite1 = suite_id) && (protocol1 = RFCXXXX) && (salt = lbytes_empty) then
            return(r_2[u_14, u_15])
          orfind u_12 = ri_12 <= Qh, u_13 = ri_13 <= N suchthat defined(r_3[ri_12, ri_13], salt[ri_12, ri_13], protocol1[ri_12, ri_13], suite1[ri_12, ri_13], label1[ri_12, ri_13], dh1[ri_12, ri_13], dh2[ri_12, ri_13], l[ri_12, ri_13], protocol2[ri_12, ri_13], suite2[ri_12, ri_13], label2[ri_12, ri_13], pkE'[ri_12, ri_13], pkR'[ri_12, ri_13], pkS'[ri_12, ri_13]) && (pkS' = pkS'[ri_12, ri_13]) && (pkR' = pkR'[ri_12, ri_13]) && (pkE' = pkE'[ri_12, ri_13]) && (label2 = label2[ri_12, ri_13]) && (suite2 = suite2[ri_12, ri_13]) && (protocol2 = protocol2[ri_12, ri_13]) && (l = l[ri_12, ri_13]) && (dh2 = dh2[ri_12, ri_13]) && (dh1 = dh1[ri_12, ri_13]) && (label1 = label1[ri_12, ri_13]) && (suite1 = suite1[ri_12, ri_13]) && (protocol1 = protocol1[ri_12, ri_13]) && (salt = salt[ri_12, ri_13]) then
            return(r_3[u_12, u_13])
          else
            r_3 <-R eae_output_t;
            return(r_3)
        else
          find [unique] u = ri <= Qh, u_1 = ri_1 <= N suchthat defined(r_4[ri, ri_1], x1[ri, ri_1]) && (x1 = x1[ri, ri_1]) then
            return(r_4[u, u_1])
          else
            r_4 <-R eae_output_t;
            return(r_4)
      ))

Initial state
Game 34 is
      Ostart() :=
      key_extr_11 <-R hash_key_t;
      return();
      foreach i_1 <= N do
      Osetup() :=
      sk_1 <-R Z_t;
      return();
      ((
        foreach ie_1 <= Qe do
        OAEncap(pk_R_1: G_t) :=
        find i1_4 = i1 <= N suchthat defined(sk_1[i1]) && (pk_R_1 = (exponent_15: Z_t <- sk_1[i1]; exp(g, exponent_15))) then
  {33}    let AuthEncap_tuple(k: eae_output_t, ce: bitstring) = (skS_1: Z_t <- sk_1; {37}let (skE_1: Z_t, pkE_8: G_t) = (z_1 <-R Z_t; (z_1, exp(g, z_1))) in dh_8: GG_t <- concatDH(exp(pk_R_1, skE_1), exp(pk_R_1, skS_1)); enc_7: bitstring <- Serialize(pkE_8); pkS_3: G_t <- exp(g, skS_1); kemContext_8: GGG_t <- concatContext(pkE_8, pk_R_1, pkS_3); zz_8: eae_output_t <- (key_3: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_8); info_3: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_8); ExtractAndExpand_inner(key_extr_11, eae_input(lbytes_empty, key_3, info_3))); AuthEncap_tuple(zz_8, enc_7) else AuthEncap_None) in
            k' <-R eae_output_t;
            return(AuthEncap_tuple(k', ce))
          else
            return(AuthEncap_None)
        else
          return((skS_1: Z_t <- sk_1; {143}let (skE_1: Z_t, pkE_7: G_t) = (z_1 <-R Z_t; (z_1, exp(g, z_1))) in dh_7: GG_t <- concatDH(exp(pk_R_1, skE_1), exp(pk_R_1, skS_1)); enc_6: bitstring <- Serialize(pkE_7); pkS_2: G_t <- exp(g, skS_1); kemContext_7: GGG_t <- concatContext(pkE_7, pk_R_1, pkS_2); zz_7: eae_output_t <- (key_2: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_7); info_2: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_7); ExtractAndExpand_inner(key_extr_11, eae_input(lbytes_empty, key_2, info_2))); AuthEncap_tuple(zz_7, enc_6) else AuthEncap_None))
      ) | (
        foreach id_1 <= Qd do
        OADecap(pk_S_1: G_t, cd: bitstring) :=
        find ie1_1 = ie1 <= Qe, i1_5 = i1_2 <= N suchthat defined(sk_1[i1_2], pk_R_1[ie1, i1_2], k'[ie1, i1_2], ce[ie1, i1_2]) && (exp(g, sk_1) = pk_R_1[ie1, i1_2]) && ((exponent_16: Z_t <- sk_1[i1_2]; exp(g, exponent_16)) = pk_S_1) && (ce[ie1, i1_2] = cd) then
          return(AuthDecap_Some(k'[ie1_1, i1_5]))
        else
          return((skR_1: Z_t <- sk_1; let Serialize(pkE_9: G_t) = cd in dh_9: GG_t <- concatDH(exp(pkE_9, skR_1), exp(pk_S_1, skR_1)); pkR_4: G_t <- exp(g, skR_1); kemContext_9: GGG_t <- concatContext(pkE_9, pkR_4, pk_S_1); zz_9: eae_output_t <- (key_4: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_9); info_4: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_9); ExtractAndExpand_inner(key_extr_11, eae_input(lbytes_empty, key_4, info_4))); AuthDecap_Some(zz_9) else AuthDecap_None))
      ) | (
        Opk() :=
        return(exp(g, sk_1))
      ) | (
        foreach iH_1 <= Qh do
        OH(x1_1: eae_input_t) :=
        return(ExtractAndExpand_inner(key_extr_11, x1_1))
      ))


Applying expand
  - Expand if/find/let
    - Simplify pattern (skE_1: Z_t, pkE_7: G_t) (tuple expanded) at 143
    - Remove else branch of let at 143
    - Simplify pattern (skE_1: Z_t, pkE_8: G_t) (tuple expanded) at 37
    - Remove else branch of let at 37
    - Simplify pattern AuthEncap_tuple(k: eae_output_t, ce: bitstring) (tuple expanded) at 33
    - Remove else branch of let at 33
yields

Game 35 is
      Ostart() :=
      key_extr_11 <-R hash_key_t;
      return();
      foreach i_1 <= N do
      Osetup() :=
      sk_1 <-R Z_t;
      return();
      ((
        foreach ie_1 <= Qe do
        OAEncap(pk_R_1: G_t) :=
        find i1_4 = i1 <= N suchthat defined(sk_1[i1]) && (exponent_15: Z_t <- sk_1[i1]; (pk_R_1 = exp(g, exponent_15))) then
          skS_1: Z_t <- sk_1;
          z_1 <-R Z_t;
          pkE_8: G_t <- exp(g, z_1);
          skE_1: Z_t <- z_1;
          dh_8: GG_t <- concatDH(exp(pk_R_1, skE_1), exp(pk_R_1, skS_1));
          enc_7: bitstring <- Serialize(pkE_8);
          pkS_3: G_t <- exp(g, skS_1);
          kemContext_8: GGG_t <- concatContext(pkE_8, pk_R_1, pkS_3);
          key_3: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_8);
          info_3: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_8);
          zz_8: eae_output_t <- ExtractAndExpand_inner(key_extr_11, eae_input(lbytes_empty, key_3, info_3));
          ce: bitstring <- enc_7;
          k: eae_output_t <- zz_8;
          k' <-R eae_output_t;
          return(AuthEncap_tuple(k', ce))
        else
          skS_1: Z_t <- sk_1;
          z_1 <-R Z_t;
          pkE_7: G_t <- exp(g, z_1);
          skE_1: Z_t <- z_1;
          dh_7: GG_t <- concatDH(exp(pk_R_1, skE_1), exp(pk_R_1, skS_1));
          enc_6: bitstring <- Serialize(pkE_7);
          pkS_2: G_t <- exp(g, skS_1);
          kemContext_7: GGG_t <- concatContext(pkE_7, pk_R_1, pkS_2);
          key_2: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_7);
          info_2: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_7);
          zz_7: eae_output_t <- ExtractAndExpand_inner(key_extr_11, eae_input(lbytes_empty, key_2, info_2));
          return(AuthEncap_tuple(zz_7, enc_6))
      ) | (
        foreach id_1 <= Qd do
        OADecap(pk_S_1: G_t, cd: bitstring) :=
        find ie1_1 = ie1 <= Qe, i1_5 = i1_2 <= N suchthat defined(sk_1[i1_2], pk_R_1[ie1, i1_2], k'[ie1, i1_2], ce[ie1, i1_2]) && (exponent_16: Z_t <- sk_1[i1_2]; ((exp(g, sk_1) = pk_R_1[ie1, i1_2]) && (exp(g, exponent_16) = pk_S_1) && (ce[ie1, i1_2] = cd))) then
          return(AuthDecap_Some(k'[ie1_1, i1_5]))
        else
          skR_1: Z_t <- sk_1;
          let Serialize(pkE_9: G_t) = cd in
            dh_9: GG_t <- concatDH(exp(pkE_9, skR_1), exp(pk_S_1, skR_1));
            pkR_4: G_t <- exp(g, skR_1);
            kemContext_9: GGG_t <- concatContext(pkE_9, pkR_4, pk_S_1);
            key_4: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_9);
            info_4: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_9);
            zz_9: eae_output_t <- ExtractAndExpand_inner(key_extr_11, eae_input(lbytes_empty, key_4, info_4));
            return(AuthDecap_Some(zz_9))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk_1))
      ) | (
        foreach iH_1 <= Qh do
        OH(x1_1: eae_input_t) :=
        return(ExtractAndExpand_inner(key_extr_11, x1_1))
      ))


Applying remove assignments of findcond
  - Remove assignments on skR_1 (definition removed, all usages removed)
  - Remove assignments on exponent_16 (definition removed, all usages removed)
  - Remove assignments on skS_1 (definition removed, all usages removed)
  - Remove assignments on skE_1 (definition removed, all usages removed)
  - Remove assignments on skS_1 (definition removed, all usages removed)
  - Remove assignments on skE_1 (definition removed, all usages removed)
  - Remove assignments on ce (definition removed, all usages removed)
  - Remove assignments on k (definition removed, all usages removed)
  - Remove assignments on exponent_15 (definition removed, all usages removed)
  - Remove assignments on zz_8 (definition removed, all usages removed)
  - Remove assignments on key_3 (definition removed, all usages removed)
  - Remove assignments on info_3 (definition removed, all usages removed)
  - Remove assignments on dh_8 (definition removed, all usages removed)
  - Remove assignments on kemContext_8 (definition removed, all usages removed)
  - Remove assignments on pkS_3 (definition removed, all usages removed)
yields

Game 36 is
      Ostart() :=
      key_extr_11 <-R hash_key_t;
      return();
      foreach i_1 <= N do
      Osetup() :=
      sk_1 <-R Z_t;
      return();
      ((
        foreach ie_1 <= Qe do
        OAEncap(pk_R_1: G_t) :=
        find i1_4 = i1 <= N suchthat defined(sk_1[i1]) && (pk_R_1 = exp(g, sk_1[i1])) then
          z_1 <-R Z_t;
          pkE_8: G_t <- exp(g, z_1);
          enc_7: bitstring <- Serialize(pkE_8);
          k' <-R eae_output_t;
          return(AuthEncap_tuple(k', enc_7))
        else
          z_1 <-R Z_t;
          pkE_7: G_t <- exp(g, z_1);
          dh_7: GG_t <- concatDH(exp(pk_R_1, z_1), exp(pk_R_1, sk_1));
          enc_6: bitstring <- Serialize(pkE_7);
          pkS_2: G_t <- exp(g, sk_1);
          kemContext_7: GGG_t <- concatContext(pkE_7, pk_R_1, pkS_2);
          key_2: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_7);
          info_2: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_7);
          zz_7: eae_output_t <- ExtractAndExpand_inner(key_extr_11, eae_input(lbytes_empty, key_2, info_2));
          return(AuthEncap_tuple(zz_7, enc_6))
      ) | (
        foreach id_1 <= Qd do
        OADecap(pk_S_1: G_t, cd: bitstring) :=
 {147}  find ie1_1 = ie1 <= Qe, i1_5 = i1_2 <= N suchthat defined(enc_7[ie1, i1_2], enc_7[ie1, i1_2], sk_1[i1_2], pk_R_1[ie1, i1_2], k'[ie1, i1_2]) && (exp(g, sk_1) = pk_R_1[ie1, i1_2]) && (exp(g, sk_1[i1_2]) = pk_S_1) && (enc_7[ie1, i1_2] = cd) then
          return(AuthDecap_Some(k'[ie1_1, i1_5]))
        else
          let Serialize(pkE_9: G_t) = cd in
            dh_9: GG_t <- concatDH(exp(pkE_9, sk_1), exp(pk_S_1, sk_1));
            pkR_4: G_t <- exp(g, sk_1);
            kemContext_9: GGG_t <- concatContext(pkE_9, pkR_4, pk_S_1);
            key_4: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_9);
            info_4: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_9);
            zz_9: eae_output_t <- ExtractAndExpand_inner(key_extr_11, eae_input(lbytes_empty, key_4, info_4));
            return(AuthDecap_Some(zz_9))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk_1))
      ) | (
        foreach iH_1 <= Qh do
        OH(x1_1: eae_input_t) :=
        return(ExtractAndExpand_inner(key_extr_11, x1_1))
      ))


Applying simplify
  - Simplification pass
    - Replaced defined condition enc_7[ie1, i1_2], enc_7[ie1, i1_2], sk_1[i1_2], pk_R_1[ie1, i1_2], k'[ie1, i1_2] with k'[ie1, i1_2], enc_7[ie1, i1_2], sk_1[i1_2], pk_R_1[ie1, i1_2] in find at 147
yields

Game 37 is
      Ostart() :=
      key_extr_11 <-R hash_key_t;
      return();
      foreach i_1 <= N do
      Osetup() :=
      sk_1 <-R Z_t;
      return();
      ((
        foreach ie_1 <= Qe do
        OAEncap(pk_R_1: G_t) :=
        find i1_4 = i1 <= N suchthat defined(sk_1[i1]) && (pk_R_1 = exp(g, sk_1[i1])) then
          z_1 <-R Z_t;
          pkE_8: G_t <- exp(g, z_1);
          enc_7: bitstring <- Serialize(pkE_8);
          k' <-R eae_output_t;
          return(AuthEncap_tuple(k', enc_7))
        else
          z_1 <-R Z_t;
          pkE_7: G_t <- exp(g, z_1);
          dh_7: GG_t <- concatDH(exp(pk_R_1, z_1), exp(pk_R_1, sk_1));
          enc_6: bitstring <- Serialize(pkE_7);
          pkS_2: G_t <- exp(g, sk_1);
          kemContext_7: GGG_t <- concatContext(pkE_7, pk_R_1, pkS_2);
          key_2: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_7);
          info_2: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_7);
          zz_7: eae_output_t <- ExtractAndExpand_inner(key_extr_11, eae_input(lbytes_empty, key_2, info_2));
          return(AuthEncap_tuple(zz_7, enc_6))
      ) | (
        foreach id_1 <= Qd do
        OADecap(pk_S_1: G_t, cd: bitstring) :=
        find ie1_1 = ie1 <= Qe, i1_5 = i1_2 <= N suchthat defined(k'[ie1, i1_2], enc_7[ie1, i1_2], sk_1[i1_2], pk_R_1[ie1, i1_2]) && (exp(g, sk_1) = pk_R_1[ie1, i1_2]) && (exp(g, sk_1[i1_2]) = pk_S_1) && (enc_7[ie1, i1_2] = cd) then
          return(AuthDecap_Some(k'[ie1_1, i1_5]))
        else
          let Serialize(pkE_9: G_t) = cd in
            dh_9: GG_t <- concatDH(exp(pkE_9, sk_1), exp(pk_S_1, sk_1));
            pkR_4: G_t <- exp(g, sk_1);
            kemContext_9: GGG_t <- concatContext(pkE_9, pkR_4, pk_S_1);
            key_4: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_9);
            info_4: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_9);
            zz_9: eae_output_t <- ExtractAndExpand_inner(key_extr_11, eae_input(lbytes_empty, key_4, info_4));
            return(AuthDecap_Some(zz_9))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk_1))
      ) | (
        foreach iH_1 <= Qh do
        OH(x1_1: eae_input_t) :=
        return(ExtractAndExpand_inner(key_extr_11, x1_1))
      ))


Applying remove assignments of findcond
  - Rename variable z_1 into z_4, z_3
yields

Game 38 is
      Ostart() :=
      key_extr_11 <-R hash_key_t;
      return();
      foreach i_1 <= N do
      Osetup() :=
      sk_1 <-R Z_t;
      return();
      ((
        foreach ie_1 <= Qe do
        OAEncap(pk_R_1: G_t) :=
        find i1_4 = i1 <= N suchthat defined(sk_1[i1]) && (pk_R_1 = exp(g, sk_1[i1])) then
          z_4 <-R Z_t;
          pkE_8: G_t <- exp(g, z_4);
          enc_7: bitstring <- Serialize(pkE_8);
          k' <-R eae_output_t;
          return(AuthEncap_tuple(k', enc_7))
        else
          z_3 <-R Z_t;
          pkE_7: G_t <- exp(g, z_3);
          dh_7: GG_t <- concatDH(exp(pk_R_1, z_3), exp(pk_R_1, sk_1));
          enc_6: bitstring <- Serialize(pkE_7);
          pkS_2: G_t <- exp(g, sk_1);
          kemContext_7: GGG_t <- concatContext(pkE_7, pk_R_1, pkS_2);
          key_2: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_7);
          info_2: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_7);
          zz_7: eae_output_t <- ExtractAndExpand_inner(key_extr_11, eae_input(lbytes_empty, key_2, info_2));
          return(AuthEncap_tuple(zz_7, enc_6))
      ) | (
        foreach id_1 <= Qd do
        OADecap(pk_S_1: G_t, cd: bitstring) :=
        find ie1_1 = ie1 <= Qe, i1_5 = i1_2 <= N suchthat defined(k'[ie1, i1_2], enc_7[ie1, i1_2], sk_1[i1_2], pk_R_1[ie1, i1_2]) && (exp(g, sk_1) = pk_R_1[ie1, i1_2]) && (exp(g, sk_1[i1_2]) = pk_S_1) && (enc_7[ie1, i1_2] = cd) then
          return(AuthDecap_Some(k'[ie1_1, i1_5]))
        else
          let Serialize(pkE_9: G_t) = cd in
            dh_9: GG_t <- concatDH(exp(pkE_9, sk_1), exp(pk_S_1, sk_1));
            pkR_4: G_t <- exp(g, sk_1);
            kemContext_9: GGG_t <- concatContext(pkE_9, pkR_4, pk_S_1);
            key_4: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_9);
            info_4: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_9);
            zz_9: eae_output_t <- ExtractAndExpand_inner(key_extr_11, eae_input(lbytes_empty, key_4, info_4));
            return(AuthDecap_Some(zz_9))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk_1))
      ) | (
        foreach iH_1 <= Qh do
        OH(x1_1: eae_input_t) :=
 {284}  return(ExtractAndExpand_inner(key_extr_11, x1_1))
      ))


Applying insert instruction let eae_input(
      salt: extract_salt_t,
      concatExtract(
        protocol1: label_protocol_t,
        suite1: suite_id_t,
        label1: label_extract_t,
        concatDH(dh1: G_t, dh2: G_t)),
      concatExpand(l: two_byte_t,
        protocol2: label_protocol_t,
        suite2: suite_id_t,
        label2: label_expand_t,
        concatContext(pkE'': G_t, pkR'': G_t, pkS'': G_t))) = x1_1 in at occurrence 284
yields

Game 39 is
      Ostart() :=
      key_extr_11 <-R hash_key_t;
      return();
      foreach i_1 <= N do
      Osetup() :=
      sk_1 <-R Z_t;
      return();
      ((
        foreach ie_1 <= Qe do
        OAEncap(pk_R_1: G_t) :=
        find i1_4 = i1 <= N suchthat defined(sk_1[i1]) && (pk_R_1 = exp(g, sk_1[i1])) then
          z_4 <-R Z_t;
          pkE_8: G_t <- exp(g, z_4);
          enc_7: bitstring <- Serialize(pkE_8);
          k' <-R eae_output_t;
          return(AuthEncap_tuple(k', enc_7))
        else
          z_3 <-R Z_t;
          pkE_7: G_t <- exp(g, z_3);
          dh_7: GG_t <- concatDH(exp(pk_R_1, z_3), exp(pk_R_1, sk_1));
          enc_6: bitstring <- Serialize(pkE_7);
          pkS_2: G_t <- exp(g, sk_1);
          kemContext_7: GGG_t <- concatContext(pkE_7, pk_R_1, pkS_2);
          key_2: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_7);
          info_2: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_7);
          zz_7: eae_output_t <- ExtractAndExpand_inner(key_extr_11, eae_input(lbytes_empty, key_2, info_2));
          return(AuthEncap_tuple(zz_7, enc_6))
      ) | (
        foreach id_1 <= Qd do
        OADecap(pk_S_1: G_t, cd: bitstring) :=
        find ie1_1 = ie1 <= Qe, i1_5 = i1_2 <= N suchthat defined(k'[ie1, i1_2], enc_7[ie1, i1_2], sk_1[i1_2], pk_R_1[ie1, i1_2]) && (exp(g, sk_1) = pk_R_1[ie1, i1_2]) && (exp(g, sk_1[i1_2]) = pk_S_1) && (enc_7[ie1, i1_2] = cd) then
          return(AuthDecap_Some(k'[ie1_1, i1_5]))
        else
          let Serialize(pkE_9: G_t) = cd in
            dh_9: GG_t <- concatDH(exp(pkE_9, sk_1), exp(pk_S_1, sk_1));
            pkR_4: G_t <- exp(g, sk_1);
            kemContext_9: GGG_t <- concatContext(pkE_9, pkR_4, pk_S_1);
            key_4: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_9);
            info_4: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_9);
            zz_9: eae_output_t <- ExtractAndExpand_inner(key_extr_11, eae_input(lbytes_empty, key_4, info_4));
            return(AuthDecap_Some(zz_9))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk_1))
      ) | (
        foreach iH_1 <= Qh do
        OH(x1_1: eae_input_t) :=
        let eae_input(salt_1: extract_salt_t, concatExtract(protocol1_1: label_protocol_t, suite1_1: suite_id_t, label1_1: label_extract_t, concatDH(dh1_1: G_t, dh2_1: G_t)), concatExpand(l_1: two_byte_t, protocol2_1: label_protocol_t, suite2_1: suite_id_t, label2_1: label_expand_t, concatContext(pkE'': G_t, pkR'': G_t, pkS'': G_t))) = x1_1 in
          return(ExtractAndExpand_inner(key_extr_11, x1_1))
        else
          return(ExtractAndExpand_inner(key_extr_11, x1_1))
      ))


Applying equivalence rom(ExtractAndExpand_inner)
  - Equivalence rom(ExtractAndExpand_inner) with variables: key_extr_11 -> hk
yields

Game 40 is
      Ostart() :=
      return();
      foreach i_1 <= N do
      Osetup() :=
      sk_1 <-R Z_t;
      return();
      ((
        foreach ie_1 <= Qe do
        OAEncap(pk_R_1: G_t) :=
        find i1_4 = i1 <= N suchthat defined(sk_1[i1]) && (pk_R_1 = exp(g, sk_1[i1])) then
          z_4 <-R Z_t;
          pkE_8: G_t <- exp(g, z_4);
          enc_7: bitstring <- Serialize(pkE_8);
          k' <-R eae_output_t;
          return(AuthEncap_tuple(k', enc_7))
        else
          z_3 <-R Z_t;
          pkE_7: G_t <- exp(g, z_3);
          dh_7: GG_t <- concatDH(exp(pk_R_1, z_3), exp(pk_R_1, sk_1));
          enc_6: bitstring <- Serialize(pkE_7);
          pkS_2: G_t <- exp(g, sk_1);
          kemContext_7: GGG_t <- concatContext(pkE_7, pk_R_1, pkS_2);
          key_2: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_7);
          info_2: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_7);
          zz_7: eae_output_t <- (x_O_5: eae_input_t <- eae_input(lbytes_empty, key_2, info_2); {123}find [unique] u_80 = ri_80 <= Qe, u_81 = ri_81 <= N suchthat defined(x_O_5[ri_80, ri_81], r_5[ri_80, ri_81]) && (x_O_5 = x_O_5[ri_80, ri_81]) then r_5[u_80, u_81] orfind u_78 = ri_78 <= Qd, u_79 = ri_79 <= N suchthat defined(x_O_6[ri_78, ri_79], r_6[ri_78, ri_79]) && (x_O_5 = x_O_6[ri_78, ri_79]) then r_6[u_78, u_79] orfind u_76 = ri_76 <= Qh, u_77 = ri_77 <= N suchthat defined(x_O_7[ri_76, ri_77], r_7[ri_76, ri_77]) && (x_O_5 = x_O_7[ri_76, ri_77]) then r_7[u_76, u_77] orfind u_74 = ri_74 <= Qh, u_75 = ri_75 <= N suchthat defined(x_O_8[ri_74, ri_75], r_8[ri_74, ri_75]) && {182}(x_O_5 = x_O_8[ri_74, ri_75]) then r_8[u_74, u_75] else r_5 <-R eae_output_t; r_5);
          return(AuthEncap_tuple(zz_7, enc_6))
      ) | (
        foreach id_1 <= Qd do
        OADecap(pk_S_1: G_t, cd: bitstring) :=
        find ie1_1 = ie1 <= Qe, i1_5 = i1_2 <= N suchthat defined(k'[ie1, i1_2], enc_7[ie1, i1_2], sk_1[i1_2], pk_R_1[ie1, i1_2]) && (exp(g, sk_1) = pk_R_1[ie1, i1_2]) && (exp(g, sk_1[i1_2]) = pk_S_1) && (enc_7[ie1, i1_2] = cd) then
          return(AuthDecap_Some(k'[ie1_1, i1_5]))
        else
          let Serialize(pkE_9: G_t) = cd in
            dh_9: GG_t <- concatDH(exp(pkE_9, sk_1), exp(pk_S_1, sk_1));
            pkR_4: G_t <- exp(g, sk_1);
            kemContext_9: GGG_t <- concatContext(pkE_9, pkR_4, pk_S_1);
            key_4: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_9);
            info_4: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_9);
            zz_9: eae_output_t <- (x_O_6: eae_input_t <- eae_input(lbytes_empty, key_4, info_4); {328}find [unique] u_72 = ri_72 <= Qe, u_73 = ri_73 <= N suchthat defined(x_O_5[ri_72, ri_73], r_5[ri_72, ri_73]) && (x_O_6 = x_O_5[ri_72, ri_73]) then r_5[u_72, u_73] orfind u_70 = ri_70 <= Qd, u_71 = ri_71 <= N suchthat defined(x_O_6[ri_70, ri_71], r_6[ri_70, ri_71]) && (x_O_6 = x_O_6[ri_70, ri_71]) then r_6[u_70, u_71] orfind u_68 = ri_68 <= Qh, u_69 = ri_69 <= N suchthat defined(x_O_7[ri_68, ri_69], r_7[ri_68, ri_69]) && (x_O_6 = x_O_7[ri_68, ri_69]) then r_7[u_68, u_69] orfind u_66 = ri_66 <= Qh, u_67 = ri_67 <= N suchthat defined(x_O_8[ri_66, ri_67], r_8[ri_66, ri_67]) && {387}(x_O_6 = x_O_8[ri_66, ri_67]) then r_8[u_66, u_67] else r_6 <-R eae_output_t; r_6);
            return(AuthDecap_Some(zz_9))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk_1))
      ) | (
        foreach iH_1 <= Qh do
        OH(x1_1: eae_input_t) :=
        let eae_input(salt_1: extract_salt_t, concatExtract(protocol1_1: label_protocol_t, suite1_1: suite_id_t, label1_1: label_extract_t, concatDH(dh1_1: G_t, dh2_1: G_t)), concatExpand(l_1: two_byte_t, protocol2_1: label_protocol_t, suite2_1: suite_id_t, label2_1: label_expand_t, concatContext(pkE'': G_t, pkR'': G_t, pkS'': G_t))) = x1_1 in
          return((x_O_7: eae_input_t <- x1_1; {445}find [unique] u_64 = ri_64 <= Qe, u_65 = ri_65 <= N suchthat defined(x_O_5[ri_64, ri_65], r_5[ri_64, ri_65]) && (x_O_7 = x_O_5[ri_64, ri_65]) then r_5[u_64, u_65] orfind u_62 = ri_62 <= Qd, u_63 = ri_63 <= N suchthat defined(x_O_6[ri_62, ri_63], r_6[ri_62, ri_63]) && (x_O_7 = x_O_6[ri_62, ri_63]) then r_6[u_62, u_63] orfind u_60 = ri_60 <= Qh, u_61 = ri_61 <= N suchthat defined(x_O_7[ri_60, ri_61], r_7[ri_60, ri_61]) && (x_O_7 = x_O_7[ri_60, ri_61]) then r_7[u_60, u_61] orfind u_58 = ri_58 <= Qh, u_59 = ri_59 <= N suchthat defined(x_O_8[ri_58, ri_59], r_8[ri_58, ri_59]) && {504}(x_O_7 = x_O_8[ri_58, ri_59]) then r_8[u_58, u_59] else r_7 <-R eae_output_t; r_7))
        else
          return((x_O_8: eae_input_t <- x1_1; {529}find [unique] u_56 = ri_56 <= Qe, u_57 = ri_57 <= N suchthat defined(x_O_5[ri_56, ri_57], r_5[ri_56, ri_57]) && {534}(x_O_8 = x_O_5[ri_56, ri_57]) then r_5[u_56, u_57] orfind u_54 = ri_54 <= Qd, u_55 = ri_55 <= N suchthat defined(x_O_6[ri_54, ri_55], r_6[ri_54, ri_55]) && {552}(x_O_8 = x_O_6[ri_54, ri_55]) then r_6[u_54, u_55] orfind u_52 = ri_52 <= Qh, u_53 = ri_53 <= N suchthat defined(x_O_7[ri_52, ri_53], r_7[ri_52, ri_53]) && {570}(x_O_8 = x_O_7[ri_52, ri_53]) then r_7[u_52, u_53] orfind u_50 = ri_50 <= Qh, u_51 = ri_51 <= N suchthat defined(x_O_8[ri_50, ri_51], r_8[ri_50, ri_51]) && (x_O_8 = x_O_8[ri_50, ri_51]) then r_8[u_50, u_51] else r_8 <-R eae_output_t; r_8))
      ))


Applying simplify (non-expanded game) [probability N * N * PCollKey]
  - Simplification pass
    - Replaced (x_O_5 = x_O_8[ri_74, ri_75]) with false at 182
    - Remove branch 4 in find at 123
    - Replaced (x_O_6 = x_O_8[ri_66, ri_67]) with false at 387
    - Remove branch 4 in find at 328
    - Replaced (x_O_7 = x_O_8[ri_58, ri_59]) with false at 504
    - Remove branch 4 in find at 445
    - Replaced (x_O_8 = x_O_7[ri_52, ri_53]) with false at 570
    - Remove branch 3 in find at 529
    - Replaced (x_O_8 = x_O_6[ri_54, ri_55]) with false at 552
    - Remove branch 2 in find at 529
    - Replaced (x_O_8 = x_O_5[ri_56, ri_57]) with false at 534
    - Remove branch 1 in find at 529
yields

Game 41 is
      Ostart() :=
      return();
      foreach i_1 <= N do
      Osetup() :=
      sk_1 <-R Z_t;
      return();
      ((
        foreach ie_1 <= Qe do
        OAEncap(pk_R_1: G_t) :=
        find i1_4 = i1 <= N suchthat defined(sk_1[i1]) && (pk_R_1 = exp(g, sk_1[i1])) then
          z_4 <-R Z_t;
          pkE_8: G_t <- exp(g, z_4);
          enc_7: bitstring <- Serialize(pkE_8);
          k' <-R eae_output_t;
          return(AuthEncap_tuple(k', enc_7))
        else
          z_3 <-R Z_t;
          pkE_7: G_t <- exp(g, z_3);
          dh_7: GG_t <- concatDH(exp(pk_R_1, z_3), exp(pk_R_1, sk_1));
          enc_6: bitstring <- Serialize(pkE_7);
          pkS_2: G_t <- exp(g, sk_1);
          kemContext_7: GGG_t <- concatContext(pkE_7, pk_R_1, pkS_2);
          key_2: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_7);
          info_2: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_7);
          zz_7: eae_output_t <- (x_O_5: eae_input_t <- eae_input(lbytes_empty, key_2, info_2); {123}find [unique] u_80 = ri_80 <= Qe, u_81 = ri_81 <= N suchthat defined(x_O_5[ri_80, ri_81], r_5[ri_80, ri_81]) && (x_O_5 = x_O_5[ri_80, ri_81]) then r_5[u_80, u_81] orfind u_78 = ri_78 <= Qd, u_79 = ri_79 <= N suchthat defined(x_O_6[ri_78, ri_79], r_6[ri_78, ri_79]) && (x_O_5 = x_O_6[ri_78, ri_79]) then r_6[u_78, u_79] orfind u_76 = ri_76 <= Qh, u_77 = ri_77 <= N suchthat defined(x_O_7[ri_76, ri_77], r_7[ri_76, ri_77]) && (x_O_5 = x_O_7[ri_76, ri_77]) then r_7[u_76, u_77] else r_5 <-R eae_output_t; r_5);
          return(AuthEncap_tuple(zz_7, enc_6))
      ) | (
        foreach id_1 <= Qd do
        OADecap(pk_S_1: G_t, cd: bitstring) :=
        find ie1_1 = ie1 <= Qe, i1_5 = i1_2 <= N suchthat defined(k'[ie1, i1_2], enc_7[ie1, i1_2], sk_1[i1_2], pk_R_1[ie1, i1_2]) && (exp(g, sk_1) = pk_R_1[ie1, i1_2]) && (exp(g, sk_1[i1_2]) = pk_S_1) && (enc_7[ie1, i1_2] = cd) then
          return(AuthDecap_Some(k'[ie1_1, i1_5]))
        else
          let Serialize(pkE_9: G_t) = cd in
            dh_9: GG_t <- concatDH(exp(pkE_9, sk_1), exp(pk_S_1, sk_1));
            pkR_4: G_t <- exp(g, sk_1);
            kemContext_9: GGG_t <- concatContext(pkE_9, pkR_4, pk_S_1);
            key_4: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_9);
            info_4: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_9);
            zz_9: eae_output_t <- (x_O_6: eae_input_t <- eae_input(lbytes_empty, key_4, info_4); {310}find [unique] u_72 = ri_72 <= Qe, u_73 = ri_73 <= N suchthat defined(x_O_5[ri_72, ri_73], r_5[ri_72, ri_73]) && (x_O_6 = x_O_5[ri_72, ri_73]) then r_5[u_72, u_73] orfind u_70 = ri_70 <= Qd, u_71 = ri_71 <= N suchthat defined(x_O_6[ri_70, ri_71], r_6[ri_70, ri_71]) && (x_O_6 = x_O_6[ri_70, ri_71]) then r_6[u_70, u_71] orfind u_68 = ri_68 <= Qh, u_69 = ri_69 <= N suchthat defined(x_O_7[ri_68, ri_69], r_7[ri_68, ri_69]) && (x_O_6 = x_O_7[ri_68, ri_69]) then r_7[u_68, u_69] else r_6 <-R eae_output_t; r_6);
            return(AuthDecap_Some(zz_9))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk_1))
      ) | (
        foreach iH_1 <= Qh do
        OH(x1_1: eae_input_t) :=
        let eae_input(salt_1: extract_salt_t, concatExtract(protocol1_1: label_protocol_t, suite1_1: suite_id_t, label1_1: label_extract_t, concatDH(dh1_1: G_t, dh2_1: G_t)), concatExpand(l_1: two_byte_t, protocol2_1: label_protocol_t, suite2_1: suite_id_t, label2_1: label_expand_t, concatContext(pkE'': G_t, pkR'': G_t, pkS'': G_t))) = x1_1 in
          return((x_O_7: eae_input_t <- x1_1; find [unique] u_64 = ri_64 <= Qe, u_65 = ri_65 <= N suchthat defined(x_O_5[ri_64, ri_65], r_5[ri_64, ri_65]) && (x_O_7 = x_O_5[ri_64, ri_65]) then r_5[u_64, u_65] orfind u_62 = ri_62 <= Qd, u_63 = ri_63 <= N suchthat defined(x_O_6[ri_62, ri_63], r_6[ri_62, ri_63]) && (x_O_7 = x_O_6[ri_62, ri_63]) then r_6[u_62, u_63] orfind u_60 = ri_60 <= Qh, u_61 = ri_61 <= N suchthat defined(x_O_7[ri_60, ri_61], r_7[ri_60, ri_61]) && (x_O_7 = x_O_7[ri_60, ri_61]) then r_7[u_60, u_61] else r_7 <-R eae_output_t; r_7))
        else
          return((x_O_8: eae_input_t <- x1_1; find [unique] u_50 = ri_50 <= Qh, u_51 = ri_51 <= N suchthat defined(x_O_8[ri_50, ri_51], r_8[ri_50, ri_51]) && (x_O_8 = x_O_8[ri_50, ri_51]) then r_8[u_50, u_51] else r_8 <-R eae_output_t; r_8))
      ))


Applying expand [probability (Qe * Qe * N + N * N + N * N * Qe) * PCollKey]
  - Expand if/find/let
    - Remove branch 1 in find at 310
    - Remove branch 2 in find at 123
    - Remove branch 1 in find at 123
yields

Game 42 is
      Ostart() :=
      return();
      foreach i_1 <= N do
      Osetup() :=
      sk_1 <-R Z_t;
      return();
      ((
        foreach ie_1 <= Qe do
        OAEncap(pk_R_1: G_t) :=
        find i1_4 = i1 <= N suchthat defined(sk_1[i1]) && (pk_R_1 = exp(g, sk_1[i1])) then
          z_4 <-R Z_t;
          pkE_8: G_t <- exp(g, z_4);
          enc_7: bitstring <- Serialize(pkE_8);
          k' <-R eae_output_t;
          return(AuthEncap_tuple(k', enc_7))
        else
          z_3 <-R Z_t;
          pkE_7: G_t <- exp(g, z_3);
          dh_7: GG_t <- concatDH(exp(pk_R_1, z_3), exp(pk_R_1, sk_1));
          enc_6: bitstring <- Serialize(pkE_7);
          pkS_2: G_t <- exp(g, sk_1);
          kemContext_7: GGG_t <- concatContext(pkE_7, pk_R_1, pkS_2);
          key_2: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_7);
          info_2: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_7);
          x_O_5: eae_input_t <- eae_input(lbytes_empty, key_2, info_2);
          find [unique] u_76 = ri_76 <= Qh, u_77 = ri_77 <= N suchthat defined(x_O_7[ri_76, ri_77], r_7[ri_76, ri_77]) && (x_O_5 = x_O_7[ri_76, ri_77]) then
            zz_7: eae_output_t <- r_7[u_76, u_77];
            return(AuthEncap_tuple(zz_7, enc_6))
          else
            r_5 <-R eae_output_t;
            zz_7: eae_output_t <- r_5;
            return(AuthEncap_tuple(zz_7, enc_6))
      ) | (
        foreach id_1 <= Qd do
        OADecap(pk_S_1: G_t, cd: bitstring) :=
        find ie1_1 = ie1 <= Qe, i1_5 = i1_2 <= N suchthat defined(k'[ie1, i1_2], enc_7[ie1, i1_2], sk_1[i1_2], pk_R_1[ie1, i1_2]) && (exp(g, sk_1) = pk_R_1[ie1, i1_2]) && (exp(g, sk_1[i1_2]) = pk_S_1) && (enc_7[ie1, i1_2] = cd) then
          return(AuthDecap_Some(k'[ie1_1, i1_5]))
        else
          let Serialize(pkE_9: G_t) = cd in
            dh_9: GG_t <- concatDH(exp(pkE_9, sk_1), exp(pk_S_1, sk_1));
            pkR_4: G_t <- exp(g, sk_1);
            kemContext_9: GGG_t <- concatContext(pkE_9, pkR_4, pk_S_1);
            key_4: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_9);
            info_4: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_9);
            x_O_6: eae_input_t <- eae_input(lbytes_empty, key_4, info_4);
            find [unique] u_70 = ri_70 <= Qd, u_71 = ri_71 <= N suchthat defined(x_O_6[ri_70, ri_71], r_6[ri_70, ri_71]) && (x_O_6 = x_O_6[ri_70, ri_71]) then
              zz_9: eae_output_t <- r_6[u_70, u_71];
              return(AuthDecap_Some(zz_9))
            orfind u_68 = ri_68 <= Qh, u_69 = ri_69 <= N suchthat defined(x_O_7[ri_68, ri_69], r_7[ri_68, ri_69]) && (x_O_6 = x_O_7[ri_68, ri_69]) then
              zz_9: eae_output_t <- r_7[u_68, u_69];
              return(AuthDecap_Some(zz_9))
            else
              r_6 <-R eae_output_t;
              zz_9: eae_output_t <- r_6;
              return(AuthDecap_Some(zz_9))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk_1))
      ) | (
        foreach iH_1 <= Qh do
        OH(x1_1: eae_input_t) :=
        let eae_input(salt_1: extract_salt_t, concatExtract(protocol1_1: label_protocol_t, suite1_1: suite_id_t, label1_1: label_extract_t, concatDH(dh1_1: G_t, dh2_1: G_t)), concatExpand(l_1: two_byte_t, protocol2_1: label_protocol_t, suite2_1: suite_id_t, label2_1: label_expand_t, concatContext(pkE'': G_t, pkR'': G_t, pkS'': G_t))) = x1_1 in
          x_O_7: eae_input_t <- x1_1;
          find [unique] u_64 = ri_64 <= Qe, u_65 = ri_65 <= N suchthat defined(x_O_5[ri_64, ri_65], r_5[ri_64, ri_65]) && (x_O_7 = x_O_5[ri_64, ri_65]) then
            return(r_5[u_64, u_65])
          orfind u_62 = ri_62 <= Qd, u_63 = ri_63 <= N suchthat defined(x_O_6[ri_62, ri_63], r_6[ri_62, ri_63]) && (x_O_7 = x_O_6[ri_62, ri_63]) then
            return(r_6[u_62, u_63])
          orfind u_60 = ri_60 <= Qh, u_61 = ri_61 <= N suchthat defined(x_O_7[ri_60, ri_61], r_7[ri_60, ri_61]) && (x_O_7 = x_O_7[ri_60, ri_61]) then
            return(r_7[u_60, u_61])
          else
            r_7 <-R eae_output_t;
            return(r_7)
        else
          x_O_8: eae_input_t <- x1_1;
          find [unique] u_50 = ri_50 <= Qh, u_51 = ri_51 <= N suchthat defined(x_O_8[ri_50, ri_51], r_8[ri_50, ri_51]) && (x_O_8 = x_O_8[ri_50, ri_51]) then
            return(r_8[u_50, u_51])
          else
            r_8 <-R eae_output_t;
            return(r_8)
      ))


Applying remove assignments of findcond
  - Remove assignments on x_O_8 (definition point kept, all usages removed)
  - Remove assignments on x_O_7 (definition point kept, all usages removed)
  - Remove assignments on zz_9 (definition removed, all usages removed)
  - Remove assignments on zz_9 (definition removed, all usages removed)
  - Remove assignments on zz_9 (definition removed, all usages removed)
  - Remove assignments on zz_7 (definition removed, all usages removed)
  - Remove assignments on zz_7 (definition removed, all usages removed)
yields

Game 43 is
      Ostart() :=
      return();
      foreach i_1 <= N do
      Osetup() :=
      sk_1 <-R Z_t;
      return();
      ((
        foreach ie_1 <= Qe do
        OAEncap(pk_R_1: G_t) :=
        find i1_4 = i1 <= N suchthat defined(sk_1[i1]) && (pk_R_1 = exp(g, sk_1[i1])) then
          z_4 <-R Z_t;
          pkE_8: G_t <- exp(g, z_4);
          enc_7: bitstring <- Serialize(pkE_8);
          k' <-R eae_output_t;
          return(AuthEncap_tuple(k', enc_7))
        else
          z_3 <-R Z_t;
          pkE_7: G_t <- exp(g, z_3);
          dh_7: GG_t <- concatDH(exp(pk_R_1, z_3), exp(pk_R_1, sk_1));
          enc_6: bitstring <- Serialize(pkE_7);
          pkS_2: G_t <- exp(g, sk_1);
          kemContext_7: GGG_t <- concatContext(pkE_7, pk_R_1, pkS_2);
          key_2: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_7);
          info_2: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_7);
          x_O_5: eae_input_t <- eae_input(lbytes_empty, key_2, info_2);
 {122}    find [unique] u_76 = ri_76 <= Qh, u_77 = ri_77 <= N suchthat defined(x1_1[ri_76, ri_77], x_O_7[ri_76, ri_77], r_7[ri_76, ri_77]) && {129}(x_O_5 = x1_1[ri_76, ri_77]) then
            return(AuthEncap_tuple(r_7[u_76, u_77], enc_6))
          else
            r_5 <-R eae_output_t;
            return(AuthEncap_tuple(r_5, enc_6))
      ) | (
        foreach id_1 <= Qd do
        OADecap(pk_S_1: G_t, cd: bitstring) :=
 {173}  find ie1_1 = ie1 <= Qe, i1_5 = i1_2 <= N suchthat defined(k'[ie1, i1_2], enc_7[ie1, i1_2], sk_1[i1_2], pk_R_1[ie1, i1_2]) && {181}((exp(g, sk_1) = pk_R_1[ie1, i1_2]) && (exp(g, sk_1[i1_2]) = pk_S_1) && (enc_7[ie1, i1_2] = cd)) then
          return(AuthDecap_Some(k'[ie1_1, i1_5]))
        else
          let Serialize(pkE_9: G_t) = cd in
            dh_9: GG_t <- concatDH(exp(pkE_9, sk_1), exp(pk_S_1, sk_1));
            pkR_4: G_t <- exp(g, sk_1);
            kemContext_9: GGG_t <- concatContext(pkE_9, pkR_4, pk_S_1);
            key_4: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_9);
            info_4: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_9);
            x_O_6: eae_input_t <- eae_input(lbytes_empty, key_4, info_4);
 {278}      find [unique] u_70 = ri_70 <= Qd, u_71 = ri_71 <= N suchthat defined(x_O_6[ri_70, ri_71], r_6[ri_70, ri_71]) && {283}(x_O_6 = x_O_6[ri_70, ri_71]) then
              return(AuthDecap_Some(r_6[u_70, u_71]))
            orfind u_68 = ri_68 <= Qh, u_69 = ri_69 <= N suchthat defined(x1_1[ri_68, ri_69], x_O_7[ri_68, ri_69], r_7[ri_68, ri_69]) && {307}(x_O_6 = x1_1[ri_68, ri_69]) then
              return(AuthDecap_Some(r_7[u_68, u_69]))
            else
              r_6 <-R eae_output_t;
              return(AuthDecap_Some(r_6))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk_1))
      ) | (
        foreach iH_1 <= Qh do
        OH(x1_1: eae_input_t) :=
        let eae_input(salt_1: extract_salt_t, concatExtract(protocol1_1: label_protocol_t, suite1_1: suite_id_t, label1_1: label_extract_t, concatDH(dh1_1: G_t, dh2_1: G_t)), concatExpand(l_1: two_byte_t, protocol2_1: label_protocol_t, suite2_1: suite_id_t, label2_1: label_expand_t, concatContext(pkE'': G_t, pkR'': G_t, pkS'': G_t))) = x1_1 in
          x_O_7: eae_input_t <- cst_eae_input_t;
 {362}    find [unique] u_64 = ri_64 <= Qe, u_65 = ri_65 <= N suchthat defined(x_O_5[ri_64, ri_65], r_5[ri_64, ri_65]) && {367}(x1_1 = x_O_5[ri_64, ri_65]) then
            return(r_5[u_64, u_65])
          orfind u_62 = ri_62 <= Qd, u_63 = ri_63 <= N suchthat defined(x_O_6[ri_62, ri_63], r_6[ri_62, ri_63]) && {388}(x1_1 = x_O_6[ri_62, ri_63]) then
            return(r_6[u_62, u_63])
          orfind u_60 = ri_60 <= Qh, u_61 = ri_61 <= N suchthat defined(x1_1[ri_60, ri_61], x_O_7[ri_60, ri_61], r_7[ri_60, ri_61]) && {411}(x1_1 = x1_1[ri_60, ri_61]) then
            return(r_7[u_60, u_61])
          else
            r_7 <-R eae_output_t;
            return(r_7)
        else
          x_O_8: eae_input_t <- cst_eae_input_t;
 {438}    find [unique] u_50 = ri_50 <= Qh, u_51 = ri_51 <= N suchthat defined(x1_1[ri_50, ri_51], x_O_8[ri_50, ri_51], r_8[ri_50, ri_51]) && (x1_1 = x1_1[ri_50, ri_51]) then
            return(r_8[u_50, u_51])
          else
            r_8 <-R eae_output_t;
            return(r_8)
      ))


Applying simplify [probability (2 * N * N + N * N * Qe) * PCollKey]
  - Simplification pass
    - Replaced defined condition x1_1[ri_50, ri_51], x_O_8[ri_50, ri_51], r_8[ri_50, ri_51] with r_8[ri_50, ri_51], x1_1[ri_50, ri_51] in find at 438
    - Replaced (x1_1 = x1_1[ri_60, ri_61]) with ((pkS'' = pkS''[ri_60, ri_61]) && (pkR'' = pkR''[ri_60, ri_61]) && (pkE'' = pkE''[ri_60, ri_61]) && (label2_1 = label2_1[ri_60, ri_61]) && (suite2_1 = suite2_1[ri_60, ri_61]) && (protocol2_1 = protocol2_1[ri_60, ri_61]) && (l_1 = l_1[ri_60, ri_61]) && (dh2_1 = dh2_1[ri_60, ri_61]) && (dh1_1 = dh1_1[ri_60, ri_61]) && (label1_1 = label1_1[ri_60, ri_61]) && (suite1_1 = suite1_1[ri_60, ri_61]) && (protocol1_1 = protocol1_1[ri_60, ri_61]) && (salt_1 = salt_1[ri_60, ri_61])) at 411
    - Replaced defined condition x1_1[ri_60, ri_61], x_O_7[ri_60, ri_61], r_7[ri_60, ri_61] with r_7[ri_60, ri_61], salt_1[ri_60, ri_61], protocol1_1[ri_60, ri_61], suite1_1[ri_60, ri_61], label1_1[ri_60, ri_61], dh1_1[ri_60, ri_61], dh2_1[ri_60, ri_61], l_1[ri_60, ri_61], protocol2_1[ri_60, ri_61], suite2_1[ri_60, ri_61], label2_1[ri_60, ri_61], pkE''[ri_60, ri_61], pkR''[ri_60, ri_61], pkS''[ri_60, ri_61] in find at 362
    - Replaced (x1_1 = x_O_6[ri_62, ri_63]) with ((pkS'' = pk_S_1[ri_62, ri_63]) && (pkR'' = pkR_4[ri_62, ri_63]) && (pkE'' = pkE_9[ri_62, ri_63]) && (label2_1 = label_shared_secret) && (suite2_1 = suite_id) && (protocol2_1 = RFCXXXX) && (l_1 = I2OSP2(Nsecret)) && (dh2_1 = exp(pk_S_1[ri_62, ri_63], sk_1[ri_63])) && (dh1_1 = exp(pkE_9[ri_62, ri_63], sk_1[ri_63])) && (label1_1 = label_eae_prk) && (suite1_1 = suite_id) && (protocol1_1 = RFCXXXX) && (salt_1 = lbytes_empty)) at 388
    - Replaced defined condition x_O_6[ri_62, ri_63], r_6[ri_62, ri_63] with r_6[ri_62, ri_63], sk_1[ri_63], pkE_9[ri_62, ri_63], pkR_4[ri_62, ri_63], pk_S_1[ri_62, ri_63] in find at 362
    - Replaced (x1_1 = x_O_5[ri_64, ri_65]) with ((pkS'' = pkS_2[ri_64, ri_65]) && (pkR'' = pk_R_1[ri_64, ri_65]) && (pkE'' = pkE_7[ri_64, ri_65]) && (label2_1 = label_shared_secret) && (suite2_1 = suite_id) && (protocol2_1 = RFCXXXX) && (l_1 = I2OSP2(Nsecret)) && (dh2_1 = exp(pk_R_1[ri_64, ri_65], sk_1[ri_65])) && (dh1_1 = exp(pk_R_1[ri_64, ri_65], z_3[ri_64, ri_65])) && (label1_1 = label_eae_prk) && (suite1_1 = suite_id) && (protocol1_1 = RFCXXXX) && (salt_1 = lbytes_empty)) at 367
    - Replaced defined condition x_O_5[ri_64, ri_65], r_5[ri_64, ri_65] with r_5[ri_64, ri_65], z_3[ri_64, ri_65], sk_1[ri_65], pkE_7[ri_64, ri_65], pk_R_1[ri_64, ri_65], pkS_2[ri_64, ri_65] in find at 362
    - Replaced (x_O_6 = x1_1[ri_68, ri_69]) with ((pk_S_1 = pkS''[ri_68, ri_69]) && (pkR_4 = pkR''[ri_68, ri_69]) && (pkE_9 = pkE''[ri_68, ri_69]) && (label_shared_secret = label2_1[ri_68, ri_69]) && (suite_id = suite2_1[ri_68, ri_69]) && (RFCXXXX = protocol2_1[ri_68, ri_69]) && (I2OSP2(Nsecret) = l_1[ri_68, ri_69]) && (exp(pk_S_1, sk_1) = dh2_1[ri_68, ri_69]) && (exp(pkE_9, sk_1) = dh1_1[ri_68, ri_69]) && (label_eae_prk = label1_1[ri_68, ri_69]) && (suite_id = suite1_1[ri_68, ri_69]) && (RFCXXXX = protocol1_1[ri_68, ri_69]) && (lbytes_empty = salt_1[ri_68, ri_69])) at 307
    - Replaced defined condition x1_1[ri_68, ri_69], x_O_7[ri_68, ri_69], r_7[ri_68, ri_69] with r_7[ri_68, ri_69], salt_1[ri_68, ri_69], protocol1_1[ri_68, ri_69], suite1_1[ri_68, ri_69], label1_1[ri_68, ri_69], dh1_1[ri_68, ri_69], dh2_1[ri_68, ri_69], l_1[ri_68, ri_69], protocol2_1[ri_68, ri_69], suite2_1[ri_68, ri_69], label2_1[ri_68, ri_69], pkE''[ri_68, ri_69], pkR''[ri_68, ri_69], pkS''[ri_68, ri_69] in find at 278
    - Replaced (x_O_6 = x_O_6[ri_70, ri_71]) with ((pk_S_1 = pk_S_1[ri_70, ri_71]) && (i_1 = ri_71) && (pkE_9 = pkE_9[ri_70, ri_71])) at 283
    - In branch 1 of find at 278, substituting u_71 with i_1
    - Replaced defined condition x_O_6[ri_70, ri_71], r_6[ri_70, ri_71] with r_6[ri_70], pkE_9[ri_70], pk_S_1[ri_70] in find at 278
    - Replaced ((exp(g, sk_1) = pk_R_1[ie1, i1_2]) && (exp(g, sk_1[i1_2]) = pk_S_1) && (enc_7[ie1, i1_2] = cd)) with ((i_1 = i1_4[ie1, i1_2]) && (exp(g, sk_1[i1_2]) = pk_S_1) && (enc_7[ie1, i1_2] = cd)) at 181
    - Replaced defined condition k'[ie1, i1_2], enc_7[ie1, i1_2], sk_1[i1_2], pk_R_1[ie1, i1_2] with k'[ie1, i1_2], enc_7[ie1, i1_2], sk_1[i1_2], i1_4[ie1, i1_2] in find at 173
    - Replaced (x_O_5 = x1_1[ri_76, ri_77]) with ((pkS_2 = pkS''[ri_76, ri_77]) && (pk_R_1 = pkR''[ri_76, ri_77]) && (pkE_7 = pkE''[ri_76, ri_77]) && (label_shared_secret = label2_1[ri_76, ri_77]) && (suite_id = suite2_1[ri_76, ri_77]) && (RFCXXXX = protocol2_1[ri_76, ri_77]) && (I2OSP2(Nsecret) = l_1[ri_76, ri_77]) && (exp(pk_R_1, sk_1) = dh2_1[ri_76, ri_77]) && (exp(pk_R_1, z_3) = dh1_1[ri_76, ri_77]) && (label_eae_prk = label1_1[ri_76, ri_77]) && (suite_id = suite1_1[ri_76, ri_77]) && (RFCXXXX = protocol1_1[ri_76, ri_77]) && (lbytes_empty = salt_1[ri_76, ri_77])) at 129
    - Replaced defined condition x1_1[ri_76, ri_77], x_O_7[ri_76, ri_77], r_7[ri_76, ri_77] with r_7[ri_76, ri_77], salt_1[ri_76, ri_77], protocol1_1[ri_76, ri_77], suite1_1[ri_76, ri_77], label1_1[ri_76, ri_77], dh1_1[ri_76, ri_77], dh2_1[ri_76, ri_77], l_1[ri_76, ri_77], protocol2_1[ri_76, ri_77], suite2_1[ri_76, ri_77], label2_1[ri_76, ri_77], pkE''[ri_76, ri_77], pkR''[ri_76, ri_77], pkS''[ri_76, ri_77] in find at 122
yields

Game 44 is
      Ostart() :=
      return();
      foreach i_1 <= N do
      Osetup() :=
      sk_1 <-R Z_t;
      return();
      ((
        foreach ie_1 <= Qe do
        OAEncap(pk_R_1: G_t) :=
        find i1_4 = i1 <= N suchthat defined(sk_1[i1]) && (pk_R_1 = exp(g, sk_1[i1])) then
          z_4 <-R Z_t;
          pkE_8: G_t <- exp(g, z_4);
          enc_7: bitstring <- Serialize(pkE_8);
          k' <-R eae_output_t;
          return(AuthEncap_tuple(k', enc_7))
        else
          z_3 <-R Z_t;
          pkE_7: G_t <- exp(g, z_3);
          dh_7: GG_t <- concatDH(exp(pk_R_1, z_3), exp(pk_R_1, sk_1));
          enc_6: bitstring <- Serialize(pkE_7);
          pkS_2: G_t <- exp(g, sk_1);
          kemContext_7: GGG_t <- concatContext(pkE_7, pk_R_1, pkS_2);
          key_2: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_7);
          info_2: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_7);
          x_O_5: eae_input_t <- eae_input(lbytes_empty, key_2, info_2);
          find [unique] u_76 = ri_76 <= Qh, u_77 = ri_77 <= N suchthat defined(r_7[ri_76, ri_77], salt_1[ri_76, ri_77], protocol1_1[ri_76, ri_77], suite1_1[ri_76, ri_77], label1_1[ri_76, ri_77], dh1_1[ri_76, ri_77], dh2_1[ri_76, ri_77], l_1[ri_76, ri_77], protocol2_1[ri_76, ri_77], suite2_1[ri_76, ri_77], label2_1[ri_76, ri_77], pkE''[ri_76, ri_77], pkR''[ri_76, ri_77], pkS''[ri_76, ri_77]) && (pkS_2 = pkS''[ri_76, ri_77]) && (pk_R_1 = pkR''[ri_76, ri_77]) && (pkE_7 = pkE''[ri_76, ri_77]) && (label_shared_secret = label2_1[ri_76, ri_77]) && (suite_id = suite2_1[ri_76, ri_77]) && (RFCXXXX = protocol2_1[ri_76, ri_77]) && (I2OSP2(Nsecret) = l_1[ri_76, ri_77]) && (exp(pk_R_1, sk_1) = dh2_1[ri_76, ri_77]) && (exp(pk_R_1, z_3) = dh1_1[ri_76, ri_77]) && (label_eae_prk = label1_1[ri_76, ri_77]) && (suite_id = suite1_1[ri_76, ri_77]) && (RFCXXXX = protocol1_1[ri_76, ri_77]) && (lbytes_empty = salt_1[ri_76, ri_77]) then
            return(AuthEncap_tuple(r_7[u_76, u_77], enc_6))
          else
            r_5 <-R eae_output_t;
            return(AuthEncap_tuple(r_5, enc_6))
      ) | (
        foreach id_1 <= Qd do
        OADecap(pk_S_1: G_t, cd: bitstring) :=
        find ie1_1 = ie1 <= Qe, i1_5 = i1_2 <= N suchthat defined(k'[ie1, i1_2], enc_7[ie1, i1_2], sk_1[i1_2], i1_4[ie1, i1_2]) && (i_1 = i1_4[ie1, i1_2]) && (exp(g, sk_1[i1_2]) = pk_S_1) && (enc_7[ie1, i1_2] = cd) then
          return(AuthDecap_Some(k'[ie1_1, i1_5]))
        else
          let Serialize(pkE_9: G_t) = cd in
            dh_9: GG_t <- concatDH(exp(pkE_9, sk_1), exp(pk_S_1, sk_1));
            pkR_4: G_t <- exp(g, sk_1);
            kemContext_9: GGG_t <- concatContext(pkE_9, pkR_4, pk_S_1);
            key_4: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_9);
            info_4: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_9);
            x_O_6: eae_input_t <- eae_input(lbytes_empty, key_4, info_4);
            find [unique] u_70 = ri_70 <= Qd suchthat defined(r_6[ri_70], pkE_9[ri_70], pk_S_1[ri_70]) && {392}((pk_S_1 = pk_S_1[ri_70]) && (i_1 = i_1) && (pkE_9 = pkE_9[ri_70])) then
              u_71 <= N <- i_1;
              return(AuthDecap_Some(r_6[u_70]))
            orfind u_68 = ri_68 <= Qh, u_69 = ri_69 <= N suchthat defined(r_7[ri_68, ri_69], salt_1[ri_68, ri_69], protocol1_1[ri_68, ri_69], suite1_1[ri_68, ri_69], label1_1[ri_68, ri_69], dh1_1[ri_68, ri_69], dh2_1[ri_68, ri_69], l_1[ri_68, ri_69], protocol2_1[ri_68, ri_69], suite2_1[ri_68, ri_69], label2_1[ri_68, ri_69], pkE''[ri_68, ri_69], pkR''[ri_68, ri_69], pkS''[ri_68, ri_69]) && (pk_S_1 = pkS''[ri_68, ri_69]) && (pkR_4 = pkR''[ri_68, ri_69]) && (pkE_9 = pkE''[ri_68, ri_69]) && (label_shared_secret = label2_1[ri_68, ri_69]) && (suite_id = suite2_1[ri_68, ri_69]) && (RFCXXXX = protocol2_1[ri_68, ri_69]) && (I2OSP2(Nsecret) = l_1[ri_68, ri_69]) && (exp(pk_S_1, sk_1) = dh2_1[ri_68, ri_69]) && (exp(pkE_9, sk_1) = dh1_1[ri_68, ri_69]) && (label_eae_prk = label1_1[ri_68, ri_69]) && (suite_id = suite1_1[ri_68, ri_69]) && (RFCXXXX = protocol1_1[ri_68, ri_69]) && (lbytes_empty = salt_1[ri_68, ri_69]) then
              return(AuthDecap_Some(r_7[u_68, u_69]))
            else
              r_6 <-R eae_output_t;
              return(AuthDecap_Some(r_6))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk_1))
      ) | (
        foreach iH_1 <= Qh do
        OH(x1_1: eae_input_t) :=
        let eae_input(salt_1: extract_salt_t, concatExtract(protocol1_1: label_protocol_t, suite1_1: suite_id_t, label1_1: label_extract_t, concatDH(dh1_1: G_t, dh2_1: G_t)), concatExpand(l_1: two_byte_t, protocol2_1: label_protocol_t, suite2_1: suite_id_t, label2_1: label_expand_t, concatContext(pkE'': G_t, pkR'': G_t, pkS'': G_t))) = x1_1 in
          x_O_7: eae_input_t <- cst_eae_input_t;
          find [unique] u_64 = ri_64 <= Qe, u_65 = ri_65 <= N suchthat defined(r_5[ri_64, ri_65], z_3[ri_64, ri_65], sk_1[ri_65], pkE_7[ri_64, ri_65], pk_R_1[ri_64, ri_65], pkS_2[ri_64, ri_65]) && (pkS'' = pkS_2[ri_64, ri_65]) && (pkR'' = pk_R_1[ri_64, ri_65]) && (pkE'' = pkE_7[ri_64, ri_65]) && (label2_1 = label_shared_secret) && (suite2_1 = suite_id) && (protocol2_1 = RFCXXXX) && (l_1 = I2OSP2(Nsecret)) && (dh2_1 = exp(pk_R_1[ri_64, ri_65], sk_1[ri_65])) && (dh1_1 = exp(pk_R_1[ri_64, ri_65], z_3[ri_64, ri_65])) && (label1_1 = label_eae_prk) && (suite1_1 = suite_id) && (protocol1_1 = RFCXXXX) && (salt_1 = lbytes_empty) then
            return(r_5[u_64, u_65])
          orfind u_62 = ri_62 <= Qd, u_63 = ri_63 <= N suchthat defined(r_6[ri_62, ri_63], sk_1[ri_63], pkE_9[ri_62, ri_63], pkR_4[ri_62, ri_63], pk_S_1[ri_62, ri_63]) && (pkS'' = pk_S_1[ri_62, ri_63]) && (pkR'' = pkR_4[ri_62, ri_63]) && (pkE'' = pkE_9[ri_62, ri_63]) && (label2_1 = label_shared_secret) && (suite2_1 = suite_id) && (protocol2_1 = RFCXXXX) && (l_1 = I2OSP2(Nsecret)) && (dh2_1 = exp(pk_S_1[ri_62, ri_63], sk_1[ri_63])) && (dh1_1 = exp(pkE_9[ri_62, ri_63], sk_1[ri_63])) && (label1_1 = label_eae_prk) && (suite1_1 = suite_id) && (protocol1_1 = RFCXXXX) && (salt_1 = lbytes_empty) then
            return(r_6[u_62, u_63])
          orfind u_60 = ri_60 <= Qh, u_61 = ri_61 <= N suchthat defined(r_7[ri_60, ri_61], salt_1[ri_60, ri_61], protocol1_1[ri_60, ri_61], suite1_1[ri_60, ri_61], label1_1[ri_60, ri_61], dh1_1[ri_60, ri_61], dh2_1[ri_60, ri_61], l_1[ri_60, ri_61], protocol2_1[ri_60, ri_61], suite2_1[ri_60, ri_61], label2_1[ri_60, ri_61], pkE''[ri_60, ri_61], pkR''[ri_60, ri_61], pkS''[ri_60, ri_61]) && (pkS'' = pkS''[ri_60, ri_61]) && (pkR'' = pkR''[ri_60, ri_61]) && (pkE'' = pkE''[ri_60, ri_61]) && (label2_1 = label2_1[ri_60, ri_61]) && (suite2_1 = suite2_1[ri_60, ri_61]) && (protocol2_1 = protocol2_1[ri_60, ri_61]) && (l_1 = l_1[ri_60, ri_61]) && (dh2_1 = dh2_1[ri_60, ri_61]) && (dh1_1 = dh1_1[ri_60, ri_61]) && (label1_1 = label1_1[ri_60, ri_61]) && (suite1_1 = suite1_1[ri_60, ri_61]) && (protocol1_1 = protocol1_1[ri_60, ri_61]) && (salt_1 = salt_1[ri_60, ri_61]) then
            return(r_7[u_60, u_61])
          else
            r_7 <-R eae_output_t;
            return(r_7)
        else
          x_O_8: eae_input_t <- cst_eae_input_t;
          find [unique] u_50 = ri_50 <= Qh, u_51 = ri_51 <= N suchthat defined(r_8[ri_50, ri_51], x1_1[ri_50, ri_51]) && (x1_1 = x1_1[ri_50, ri_51]) then
            return(r_8[u_50, u_51])
          else
            r_8 <-R eae_output_t;
            return(r_8)
      ))


Applying simplify [probability N * N * Qe * PCollKey]
  - Simplification pass
    - Replaced ((pk_S_1 = pk_S_1[ri_70]) && (i_1 = i_1) && (pkE_9 = pkE_9[ri_70])) with ((pk_S_1 = pk_S_1[ri_70]) && (pkE_9 = pkE_9[ri_70])) at 392
yields

Game 45 is
      Ostart() :=
      return();
      foreach i_1 <= N do
      Osetup() :=
      sk_1 <-R Z_t;
      return();
      ((
        foreach ie_1 <= Qe do
        OAEncap(pk_R_1: G_t) :=
        find i1_4 = i1 <= N suchthat defined(sk_1[i1]) && (pk_R_1 = exp(g, sk_1[i1])) then
          z_4 <-R Z_t;
          pkE_8: G_t <- exp(g, z_4);
          enc_7: bitstring <- Serialize(pkE_8);
          k' <-R eae_output_t;
          return(AuthEncap_tuple(k', enc_7))
        else
          z_3 <-R Z_t;
          pkE_7: G_t <- exp(g, z_3);
          dh_7: GG_t <- concatDH(exp(pk_R_1, z_3), exp(pk_R_1, sk_1));
          enc_6: bitstring <- Serialize(pkE_7);
          pkS_2: G_t <- exp(g, sk_1);
          kemContext_7: GGG_t <- concatContext(pkE_7, pk_R_1, pkS_2);
          key_2: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_7);
          info_2: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_7);
          x_O_5: eae_input_t <- eae_input(lbytes_empty, key_2, info_2);
          find [unique] u_76 = ri_76 <= Qh, u_77 = ri_77 <= N suchthat defined(r_7[ri_76, ri_77], salt_1[ri_76, ri_77], protocol1_1[ri_76, ri_77], suite1_1[ri_76, ri_77], label1_1[ri_76, ri_77], dh1_1[ri_76, ri_77], dh2_1[ri_76, ri_77], l_1[ri_76, ri_77], protocol2_1[ri_76, ri_77], suite2_1[ri_76, ri_77], label2_1[ri_76, ri_77], pkE''[ri_76, ri_77], pkR''[ri_76, ri_77], pkS''[ri_76, ri_77]) && (pkS_2 = pkS''[ri_76, ri_77]) && (pk_R_1 = pkR''[ri_76, ri_77]) && (pkE_7 = pkE''[ri_76, ri_77]) && (label_shared_secret = label2_1[ri_76, ri_77]) && (suite_id = suite2_1[ri_76, ri_77]) && (RFCXXXX = protocol2_1[ri_76, ri_77]) && (I2OSP2(Nsecret) = l_1[ri_76, ri_77]) && (exp(pk_R_1, sk_1) = dh2_1[ri_76, ri_77]) && (exp(pk_R_1, z_3) = dh1_1[ri_76, ri_77]) && (label_eae_prk = label1_1[ri_76, ri_77]) && (suite_id = suite1_1[ri_76, ri_77]) && (RFCXXXX = protocol1_1[ri_76, ri_77]) && (lbytes_empty = salt_1[ri_76, ri_77]) then
            return(AuthEncap_tuple(r_7[u_76, u_77], enc_6))
          else
            r_5 <-R eae_output_t;
            return(AuthEncap_tuple(r_5, enc_6))
      ) | (
        foreach id_1 <= Qd do
        OADecap(pk_S_1: G_t, cd: bitstring) :=
        find ie1_1 = ie1 <= Qe, i1_5 = i1_2 <= N suchthat defined(k'[ie1, i1_2], enc_7[ie1, i1_2], sk_1[i1_2], i1_4[ie1, i1_2]) && (i_1 = i1_4[ie1, i1_2]) && (exp(g, sk_1[i1_2]) = pk_S_1) && (enc_7[ie1, i1_2] = cd) then
          return(AuthDecap_Some(k'[ie1_1, i1_5]))
        else
          let Serialize(pkE_9: G_t) = cd in
            dh_9: GG_t <- concatDH(exp(pkE_9, sk_1), exp(pk_S_1, sk_1));
            pkR_4: G_t <- exp(g, sk_1);
            kemContext_9: GGG_t <- concatContext(pkE_9, pkR_4, pk_S_1);
            key_4: extract_key_t <- concatExtract(RFCXXXX, suite_id, label_eae_prk, dh_9);
            info_4: expand_info_t <- concatExpand(I2OSP2(Nsecret), RFCXXXX, suite_id, label_shared_secret, kemContext_9);
            x_O_6: eae_input_t <- eae_input(lbytes_empty, key_4, info_4);
            find [unique] u_70 = ri_70 <= Qd suchthat defined(r_6[ri_70], pkE_9[ri_70], pk_S_1[ri_70]) && (pk_S_1 = pk_S_1[ri_70]) && (pkE_9 = pkE_9[ri_70]) then
              u_71 <= N <- i_1;
              return(AuthDecap_Some(r_6[u_70]))
            orfind u_68 = ri_68 <= Qh, u_69 = ri_69 <= N suchthat defined(r_7[ri_68, ri_69], salt_1[ri_68, ri_69], protocol1_1[ri_68, ri_69], suite1_1[ri_68, ri_69], label1_1[ri_68, ri_69], dh1_1[ri_68, ri_69], dh2_1[ri_68, ri_69], l_1[ri_68, ri_69], protocol2_1[ri_68, ri_69], suite2_1[ri_68, ri_69], label2_1[ri_68, ri_69], pkE''[ri_68, ri_69], pkR''[ri_68, ri_69], pkS''[ri_68, ri_69]) && (pk_S_1 = pkS''[ri_68, ri_69]) && (pkR_4 = pkR''[ri_68, ri_69]) && (pkE_9 = pkE''[ri_68, ri_69]) && (label_shared_secret = label2_1[ri_68, ri_69]) && (suite_id = suite2_1[ri_68, ri_69]) && (RFCXXXX = protocol2_1[ri_68, ri_69]) && (I2OSP2(Nsecret) = l_1[ri_68, ri_69]) && (exp(pk_S_1, sk_1) = dh2_1[ri_68, ri_69]) && (exp(pkE_9, sk_1) = dh1_1[ri_68, ri_69]) && (label_eae_prk = label1_1[ri_68, ri_69]) && (suite_id = suite1_1[ri_68, ri_69]) && (RFCXXXX = protocol1_1[ri_68, ri_69]) && (lbytes_empty = salt_1[ri_68, ri_69]) then
              return(AuthDecap_Some(r_7[u_68, u_69]))
            else
              r_6 <-R eae_output_t;
              return(AuthDecap_Some(r_6))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk_1))
      ) | (
        foreach iH_1 <= Qh do
        OH(x1_1: eae_input_t) :=
        let eae_input(salt_1: extract_salt_t, concatExtract(protocol1_1: label_protocol_t, suite1_1: suite_id_t, label1_1: label_extract_t, concatDH(dh1_1: G_t, dh2_1: G_t)), concatExpand(l_1: two_byte_t, protocol2_1: label_protocol_t, suite2_1: suite_id_t, label2_1: label_expand_t, concatContext(pkE'': G_t, pkR'': G_t, pkS'': G_t))) = x1_1 in
          x_O_7: eae_input_t <- cst_eae_input_t;
          find [unique] u_64 = ri_64 <= Qe, u_65 = ri_65 <= N suchthat defined(r_5[ri_64, ri_65], z_3[ri_64, ri_65], sk_1[ri_65], pkE_7[ri_64, ri_65], pk_R_1[ri_64, ri_65], pkS_2[ri_64, ri_65]) && (pkS'' = pkS_2[ri_64, ri_65]) && (pkR'' = pk_R_1[ri_64, ri_65]) && (pkE'' = pkE_7[ri_64, ri_65]) && (label2_1 = label_shared_secret) && (suite2_1 = suite_id) && (protocol2_1 = RFCXXXX) && (l_1 = I2OSP2(Nsecret)) && (dh2_1 = exp(pk_R_1[ri_64, ri_65], sk_1[ri_65])) && (dh1_1 = exp(pk_R_1[ri_64, ri_65], z_3[ri_64, ri_65])) && (label1_1 = label_eae_prk) && (suite1_1 = suite_id) && (protocol1_1 = RFCXXXX) && (salt_1 = lbytes_empty) then
            return(r_5[u_64, u_65])
          orfind u_62 = ri_62 <= Qd, u_63 = ri_63 <= N suchthat defined(r_6[ri_62, ri_63], sk_1[ri_63], pkE_9[ri_62, ri_63], pkR_4[ri_62, ri_63], pk_S_1[ri_62, ri_63]) && (pkS'' = pk_S_1[ri_62, ri_63]) && (pkR'' = pkR_4[ri_62, ri_63]) && (pkE'' = pkE_9[ri_62, ri_63]) && (label2_1 = label_shared_secret) && (suite2_1 = suite_id) && (protocol2_1 = RFCXXXX) && (l_1 = I2OSP2(Nsecret)) && (dh2_1 = exp(pk_S_1[ri_62, ri_63], sk_1[ri_63])) && (dh1_1 = exp(pkE_9[ri_62, ri_63], sk_1[ri_63])) && (label1_1 = label_eae_prk) && (suite1_1 = suite_id) && (protocol1_1 = RFCXXXX) && (salt_1 = lbytes_empty) then
            return(r_6[u_62, u_63])
          orfind u_60 = ri_60 <= Qh, u_61 = ri_61 <= N suchthat defined(r_7[ri_60, ri_61], salt_1[ri_60, ri_61], protocol1_1[ri_60, ri_61], suite1_1[ri_60, ri_61], label1_1[ri_60, ri_61], dh1_1[ri_60, ri_61], dh2_1[ri_60, ri_61], l_1[ri_60, ri_61], protocol2_1[ri_60, ri_61], suite2_1[ri_60, ri_61], label2_1[ri_60, ri_61], pkE''[ri_60, ri_61], pkR''[ri_60, ri_61], pkS''[ri_60, ri_61]) && (pkS'' = pkS''[ri_60, ri_61]) && (pkR'' = pkR''[ri_60, ri_61]) && (pkE'' = pkE''[ri_60, ri_61]) && (label2_1 = label2_1[ri_60, ri_61]) && (suite2_1 = suite2_1[ri_60, ri_61]) && (protocol2_1 = protocol2_1[ri_60, ri_61]) && (l_1 = l_1[ri_60, ri_61]) && (dh2_1 = dh2_1[ri_60, ri_61]) && (dh1_1 = dh1_1[ri_60, ri_61]) && (label1_1 = label1_1[ri_60, ri_61]) && (suite1_1 = suite1_1[ri_60, ri_61]) && (protocol1_1 = protocol1_1[ri_60, ri_61]) && (salt_1 = salt_1[ri_60, ri_61]) then
            return(r_7[u_60, u_61])
          else
            r_7 <-R eae_output_t;
            return(r_7)
        else
          x_O_8: eae_input_t <- cst_eae_input_t;
          find [unique] u_50 = ri_50 <= Qh, u_51 = ri_51 <= N suchthat defined(r_8[ri_50, ri_51], x1_1[ri_50, ri_51]) && (x1_1 = x1_1[ri_50, ri_51]) then
            return(r_8[u_50, u_51])
          else
            r_8 <-R eae_output_t;
            return(r_8)
      ))


Applying move all binders
  - Move assignment to x_O_8
  - Move assignment to x_O_7
  - Move assignment to x_O_6
  - Move assignment to info_4
  - Move assignment to key_4
  - Move assignment to kemContext_9
  - Move assignment to x_O_5
  - Move assignment to info_2
  - Move assignment to key_2
  - Move assignment to kemContext_7
yields

Game 46 is
      Ostart() :=
      return();
      foreach i_1 <= N do
      Osetup() :=
      sk_1 <-R Z_t;
      return();
      ((
        foreach ie_1 <= Qe do
        OAEncap(pk_R_1: G_t) :=
        find i1_4 = i1 <= N suchthat defined(sk_1[i1]) && (pk_R_1 = exp(g, sk_1[i1])) then
          z_4 <-R Z_t;
          pkE_8: G_t <- exp(g, z_4);
          enc_7: bitstring <- Serialize(pkE_8);
          k' <-R eae_output_t;
          return(AuthEncap_tuple(k', enc_7))
        else
          z_3 <-R Z_t;
          pkE_7: G_t <- exp(g, z_3);
          dh_7: GG_t <- concatDH(exp(pk_R_1, z_3), exp(pk_R_1, sk_1));
          enc_6: bitstring <- Serialize(pkE_7);
          pkS_2: G_t <- exp(g, sk_1);
          find [unique] u_76 = ri_76 <= Qh, u_77 = ri_77 <= N suchthat defined(r_7[ri_76, ri_77], salt_1[ri_76, ri_77], protocol1_1[ri_76, ri_77], suite1_1[ri_76, ri_77], label1_1[ri_76, ri_77], dh1_1[ri_76, ri_77], dh2_1[ri_76, ri_77], l_1[ri_76, ri_77], protocol2_1[ri_76, ri_77], suite2_1[ri_76, ri_77], label2_1[ri_76, ri_77], pkE''[ri_76, ri_77], pkR''[ri_76, ri_77], pkS''[ri_76, ri_77]) && (pkS_2 = pkS''[ri_76, ri_77]) && (pk_R_1 = pkR''[ri_76, ri_77]) && (pkE_7 = pkE''[ri_76, ri_77]) && (label_shared_secret = label2_1[ri_76, ri_77]) && (suite_id = suite2_1[ri_76, ri_77]) && (RFCXXXX = protocol2_1[ri_76, ri_77]) && (I2OSP2(Nsecret) = l_1[ri_76, ri_77]) && (exp(pk_R_1, sk_1) = dh2_1[ri_76, ri_77]) && (exp(pk_R_1, z_3) = dh1_1[ri_76, ri_77]) && (label_eae_prk = label1_1[ri_76, ri_77]) && (suite_id = suite1_1[ri_76, ri_77]) && (RFCXXXX = protocol1_1[ri_76, ri_77]) && (lbytes_empty = salt_1[ri_76, ri_77]) then
            return(AuthEncap_tuple(r_7[u_76, u_77], enc_6))
          else
            r_5 <-R eae_output_t;
            return(AuthEncap_tuple(r_5, enc_6))
      ) | (
        foreach id_1 <= Qd do
        OADecap(pk_S_1: G_t, cd: bitstring) :=
        find ie1_1 = ie1 <= Qe, i1_5 = i1_2 <= N suchthat defined(k'[ie1, i1_2], enc_7[ie1, i1_2], sk_1[i1_2], i1_4[ie1, i1_2]) && (i_1 = i1_4[ie1, i1_2]) && (exp(g, sk_1[i1_2]) = pk_S_1) && (enc_7[ie1, i1_2] = cd) then
          return(AuthDecap_Some(k'[ie1_1, i1_5]))
        else
          let Serialize(pkE_9: G_t) = cd in
            dh_9: GG_t <- concatDH(exp(pkE_9, sk_1), exp(pk_S_1, sk_1));
            pkR_4: G_t <- exp(g, sk_1);
            find [unique] u_70 = ri_70 <= Qd suchthat defined(r_6[ri_70], pkE_9[ri_70], pk_S_1[ri_70]) && (pk_S_1 = pk_S_1[ri_70]) && (pkE_9 = pkE_9[ri_70]) then
              u_71 <= N <- i_1;
              return(AuthDecap_Some(r_6[u_70]))
            orfind u_68 = ri_68 <= Qh, u_69 = ri_69 <= N suchthat defined(r_7[ri_68, ri_69], salt_1[ri_68, ri_69], protocol1_1[ri_68, ri_69], suite1_1[ri_68, ri_69], label1_1[ri_68, ri_69], dh1_1[ri_68, ri_69], dh2_1[ri_68, ri_69], l_1[ri_68, ri_69], protocol2_1[ri_68, ri_69], suite2_1[ri_68, ri_69], label2_1[ri_68, ri_69], pkE''[ri_68, ri_69], pkR''[ri_68, ri_69], pkS''[ri_68, ri_69]) && (pk_S_1 = pkS''[ri_68, ri_69]) && (pkR_4 = pkR''[ri_68, ri_69]) && (pkE_9 = pkE''[ri_68, ri_69]) && (label_shared_secret = label2_1[ri_68, ri_69]) && (suite_id = suite2_1[ri_68, ri_69]) && (RFCXXXX = protocol2_1[ri_68, ri_69]) && (I2OSP2(Nsecret) = l_1[ri_68, ri_69]) && (exp(pk_S_1, sk_1) = dh2_1[ri_68, ri_69]) && (exp(pkE_9, sk_1) = dh1_1[ri_68, ri_69]) && (label_eae_prk = label1_1[ri_68, ri_69]) && (suite_id = suite1_1[ri_68, ri_69]) && (RFCXXXX = protocol1_1[ri_68, ri_69]) && (lbytes_empty = salt_1[ri_68, ri_69]) then
              return(AuthDecap_Some(r_7[u_68, u_69]))
            else
              r_6 <-R eae_output_t;
              return(AuthDecap_Some(r_6))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk_1))
      ) | (
        foreach iH_1 <= Qh do
        OH(x1_1: eae_input_t) :=
        let eae_input(salt_1: extract_salt_t, concatExtract(protocol1_1: label_protocol_t, suite1_1: suite_id_t, label1_1: label_extract_t, concatDH(dh1_1: G_t, dh2_1: G_t)), concatExpand(l_1: two_byte_t, protocol2_1: label_protocol_t, suite2_1: suite_id_t, label2_1: label_expand_t, concatContext(pkE'': G_t, pkR'': G_t, pkS'': G_t))) = x1_1 in
          find [unique] u_64 = ri_64 <= Qe, u_65 = ri_65 <= N suchthat defined(r_5[ri_64, ri_65], z_3[ri_64, ri_65], sk_1[ri_65], pkE_7[ri_64, ri_65], pk_R_1[ri_64, ri_65], pkS_2[ri_64, ri_65]) && (pkS'' = pkS_2[ri_64, ri_65]) && (pkR'' = pk_R_1[ri_64, ri_65]) && (pkE'' = pkE_7[ri_64, ri_65]) && (label2_1 = label_shared_secret) && (suite2_1 = suite_id) && (protocol2_1 = RFCXXXX) && (l_1 = I2OSP2(Nsecret)) && (dh2_1 = exp(pk_R_1[ri_64, ri_65], sk_1[ri_65])) && (dh1_1 = exp(pk_R_1[ri_64, ri_65], z_3[ri_64, ri_65])) && (label1_1 = label_eae_prk) && (suite1_1 = suite_id) && (protocol1_1 = RFCXXXX) && (salt_1 = lbytes_empty) then
            return(r_5[u_64, u_65])
          orfind u_62 = ri_62 <= Qd, u_63 = ri_63 <= N suchthat defined(r_6[ri_62, ri_63], sk_1[ri_63], pkE_9[ri_62, ri_63], pkR_4[ri_62, ri_63], pk_S_1[ri_62, ri_63]) && (pkS'' = pk_S_1[ri_62, ri_63]) && (pkR'' = pkR_4[ri_62, ri_63]) && (pkE'' = pkE_9[ri_62, ri_63]) && (label2_1 = label_shared_secret) && (suite2_1 = suite_id) && (protocol2_1 = RFCXXXX) && (l_1 = I2OSP2(Nsecret)) && (dh2_1 = exp(pk_S_1[ri_62, ri_63], sk_1[ri_63])) && (dh1_1 = exp(pkE_9[ri_62, ri_63], sk_1[ri_63])) && (label1_1 = label_eae_prk) && (suite1_1 = suite_id) && (protocol1_1 = RFCXXXX) && (salt_1 = lbytes_empty) then
            return(r_6[u_62, u_63])
          orfind u_60 = ri_60 <= Qh, u_61 = ri_61 <= N suchthat defined(r_7[ri_60, ri_61], salt_1[ri_60, ri_61], protocol1_1[ri_60, ri_61], suite1_1[ri_60, ri_61], label1_1[ri_60, ri_61], dh1_1[ri_60, ri_61], dh2_1[ri_60, ri_61], l_1[ri_60, ri_61], protocol2_1[ri_60, ri_61], suite2_1[ri_60, ri_61], label2_1[ri_60, ri_61], pkE''[ri_60, ri_61], pkR''[ri_60, ri_61], pkS''[ri_60, ri_61]) && (pkS'' = pkS''[ri_60, ri_61]) && (pkR'' = pkR''[ri_60, ri_61]) && (pkE'' = pkE''[ri_60, ri_61]) && (label2_1 = label2_1[ri_60, ri_61]) && (suite2_1 = suite2_1[ri_60, ri_61]) && (protocol2_1 = protocol2_1[ri_60, ri_61]) && (l_1 = l_1[ri_60, ri_61]) && (dh2_1 = dh2_1[ri_60, ri_61]) && (dh1_1 = dh1_1[ri_60, ri_61]) && (label1_1 = label1_1[ri_60, ri_61]) && (suite1_1 = suite1_1[ri_60, ri_61]) && (protocol1_1 = protocol1_1[ri_60, ri_61]) && (salt_1 = salt_1[ri_60, ri_61]) then
            return(r_7[u_60, u_61])
          else
            r_7 <-R eae_output_t;
            return(r_7)
        else
          find [unique] u_50 = ri_50 <= Qh, u_51 = ri_51 <= N suchthat defined(r_8[ri_50, ri_51], x1_1[ri_50, ri_51]) && (x1_1 = x1_1[ri_50, ri_51]) then
            return(r_8[u_50, u_51])
          else
            r_8 <-R eae_output_t;
            return(r_8)
      ))


Applying remove assignments of findcond
  - Remove assignments on dh_9 (definition removed, all usages removed)
  - Remove assignments on u_71 (definition removed, all usages removed)
  - Remove assignments on dh_7 (definition removed, all usages removed)
yields

Game 47 is
      Ostart() :=
      return();
      foreach i_1 <= N do
      Osetup() :=
      sk_1 <-R Z_t;
      return();
      ((
        foreach ie_1 <= Qe do
        OAEncap(pk_R_1: G_t) :=
        find i1_4 = i1 <= N suchthat defined(sk_1[i1]) && (pk_R_1 = exp(g, sk_1[i1])) then
          z_4 <-R Z_t;
          pkE_8: G_t <- exp(g, z_4);
          enc_7: bitstring <- Serialize(pkE_8);
          k' <-R eae_output_t;
          return(AuthEncap_tuple(k', enc_7))
        else
          z_3 <-R Z_t;
          pkE_7: G_t <- exp(g, z_3);
          enc_6: bitstring <- Serialize(pkE_7);
          pkS_2: G_t <- exp(g, sk_1);
          find [unique] u_76 = ri_76 <= Qh, u_77 = ri_77 <= N suchthat defined(r_7[ri_76, ri_77], salt_1[ri_76, ri_77], protocol1_1[ri_76, ri_77], suite1_1[ri_76, ri_77], label1_1[ri_76, ri_77], dh1_1[ri_76, ri_77], dh2_1[ri_76, ri_77], l_1[ri_76, ri_77], protocol2_1[ri_76, ri_77], suite2_1[ri_76, ri_77], label2_1[ri_76, ri_77], pkE''[ri_76, ri_77], pkR''[ri_76, ri_77], pkS''[ri_76, ri_77]) && (pkS_2 = pkS''[ri_76, ri_77]) && (pk_R_1 = pkR''[ri_76, ri_77]) && (pkE_7 = pkE''[ri_76, ri_77]) && (label_shared_secret = label2_1[ri_76, ri_77]) && (suite_id = suite2_1[ri_76, ri_77]) && (RFCXXXX = protocol2_1[ri_76, ri_77]) && (I2OSP2(Nsecret) = l_1[ri_76, ri_77]) && (exp(pk_R_1, sk_1) = dh2_1[ri_76, ri_77]) && (exp(pk_R_1, z_3) = dh1_1[ri_76, ri_77]) && (label_eae_prk = label1_1[ri_76, ri_77]) && (suite_id = suite1_1[ri_76, ri_77]) && (RFCXXXX = protocol1_1[ri_76, ri_77]) && (lbytes_empty = salt_1[ri_76, ri_77]) then
            return(AuthEncap_tuple(r_7[u_76, u_77], enc_6))
          else
            r_5 <-R eae_output_t;
            return(AuthEncap_tuple(r_5, enc_6))
      ) | (
        foreach id_1 <= Qd do
        OADecap(pk_S_1: G_t, cd: bitstring) :=
        find ie1_1 = ie1 <= Qe, i1_5 = i1_2 <= N suchthat defined(k'[ie1, i1_2], enc_7[ie1, i1_2], sk_1[i1_2], i1_4[ie1, i1_2]) && (i_1 = i1_4[ie1, i1_2]) && (exp(g, sk_1[i1_2]) = pk_S_1) && (enc_7[ie1, i1_2] = cd) then
          return(AuthDecap_Some(k'[ie1_1, i1_5]))
        else
          let Serialize(pkE_9: G_t) = cd in
            pkR_4: G_t <- exp(g, sk_1);
            find [unique] u_70 = ri_70 <= Qd suchthat defined(r_6[ri_70], pkE_9[ri_70], pk_S_1[ri_70]) && (pk_S_1 = pk_S_1[ri_70]) && (pkE_9 = pkE_9[ri_70]) then
              return(AuthDecap_Some(r_6[u_70]))
            orfind u_68 = ri_68 <= Qh, u_69 = ri_69 <= N suchthat defined(r_7[ri_68, ri_69], salt_1[ri_68, ri_69], protocol1_1[ri_68, ri_69], suite1_1[ri_68, ri_69], label1_1[ri_68, ri_69], dh1_1[ri_68, ri_69], dh2_1[ri_68, ri_69], l_1[ri_68, ri_69], protocol2_1[ri_68, ri_69], suite2_1[ri_68, ri_69], label2_1[ri_68, ri_69], pkE''[ri_68, ri_69], pkR''[ri_68, ri_69], pkS''[ri_68, ri_69]) && (pk_S_1 = pkS''[ri_68, ri_69]) && (pkR_4 = pkR''[ri_68, ri_69]) && (pkE_9 = pkE''[ri_68, ri_69]) && (label_shared_secret = label2_1[ri_68, ri_69]) && (suite_id = suite2_1[ri_68, ri_69]) && (RFCXXXX = protocol2_1[ri_68, ri_69]) && (I2OSP2(Nsecret) = l_1[ri_68, ri_69]) && (exp(pk_S_1, sk_1) = dh2_1[ri_68, ri_69]) && (exp(pkE_9, sk_1) = dh1_1[ri_68, ri_69]) && (label_eae_prk = label1_1[ri_68, ri_69]) && (suite_id = suite1_1[ri_68, ri_69]) && (RFCXXXX = protocol1_1[ri_68, ri_69]) && (lbytes_empty = salt_1[ri_68, ri_69]) then
              return(AuthDecap_Some(r_7[u_68, u_69]))
            else
              r_6 <-R eae_output_t;
              return(AuthDecap_Some(r_6))
          else
            return(AuthDecap_None)
      ) | (
        Opk() :=
        return(exp(g, sk_1))
      ) | (
        foreach iH_1 <= Qh do
        OH(x1_1: eae_input_t) :=
        let eae_input(salt_1: extract_salt_t, concatExtract(protocol1_1: label_protocol_t, suite1_1: suite_id_t, label1_1: label_extract_t, concatDH(dh1_1: G_t, dh2_1: G_t)), concatExpand(l_1: two_byte_t, protocol2_1: label_protocol_t, suite2_1: suite_id_t, label2_1: label_expand_t, concatContext(pkE'': G_t, pkR'': G_t, pkS'': G_t))) = x1_1 in
          find [unique] u_64 = ri_64 <= Qe, u_65 = ri_65 <= N suchthat defined(r_5[ri_64, ri_65], z_3[ri_64, ri_65], sk_1[ri_65], pkE_7[ri_64, ri_65], pk_R_1[ri_64, ri_65], pkS_2[ri_64, ri_65]) && (pkS'' = pkS_2[ri_64, ri_65]) && (pkR'' = pk_R_1[ri_64, ri_65]) && (pkE'' = pkE_7[ri_64, ri_65]) && (label2_1 = label_shared_secret) && (suite2_1 = suite_id) && (protocol2_1 = RFCXXXX) && (l_1 = I2OSP2(Nsecret)) && (dh2_1 = exp(pk_R_1[ri_64, ri_65], sk_1[ri_65])) && (dh1_1 = exp(pk_R_1[ri_64, ri_65], z_3[ri_64, ri_65])) && (label1_1 = label_eae_prk) && (suite1_1 = suite_id) && (protocol1_1 = RFCXXXX) && (salt_1 = lbytes_empty) then
            return(r_5[u_64, u_65])
          orfind u_62 = ri_62 <= Qd, u_63 = ri_63 <= N suchthat defined(r_6[ri_62, ri_63], sk_1[ri_63], pkE_9[ri_62, ri_63], pkR_4[ri_62, ri_63], pk_S_1[ri_62, ri_63]) && (pkS'' = pk_S_1[ri_62, ri_63]) && (pkR'' = pkR_4[ri_62, ri_63]) && (pkE'' = pkE_9[ri_62, ri_63]) && (label2_1 = label_shared_secret) && (suite2_1 = suite_id) && (protocol2_1 = RFCXXXX) && (l_1 = I2OSP2(Nsecret)) && (dh2_1 = exp(pk_S_1[ri_62, ri_63], sk_1[ri_63])) && (dh1_1 = exp(pkE_9[ri_62, ri_63], sk_1[ri_63])) && (label1_1 = label_eae_prk) && (suite1_1 = suite_id) && (protocol1_1 = RFCXXXX) && (salt_1 = lbytes_empty) then
            return(r_6[u_62, u_63])
          orfind u_60 = ri_60 <= Qh, u_61 = ri_61 <= N suchthat defined(r_7[ri_60, ri_61], salt_1[ri_60, ri_61], protocol1_1[ri_60, ri_61], suite1_1[ri_60, ri_61], label1_1[ri_60, ri_61], dh1_1[ri_60, ri_61], dh2_1[ri_60, ri_61], l_1[ri_60, ri_61], protocol2_1[ri_60, ri_61], suite2_1[ri_60, ri_61], label2_1[ri_60, ri_61], pkE''[ri_60, ri_61], pkR''[ri_60, ri_61], pkS''[ri_60, ri_61]) && (pkS'' = pkS''[ri_60, ri_61]) && (pkR'' = pkR''[ri_60, ri_61]) && (pkE'' = pkE''[ri_60, ri_61]) && (label2_1 = label2_1[ri_60, ri_61]) && (suite2_1 = suite2_1[ri_60, ri_61]) && (protocol2_1 = protocol2_1[ri_60, ri_61]) && (l_1 = l_1[ri_60, ri_61]) && (dh2_1 = dh2_1[ri_60, ri_61]) && (dh1_1 = dh1_1[ri_60, ri_61]) && (label1_1 = label1_1[ri_60, ri_61]) && (suite1_1 = suite1_1[ri_60, ri_61]) && (protocol1_1 = protocol1_1[ri_60, ri_61]) && (salt_1 = salt_1[ri_60, ri_61]) then
            return(r_7[u_60, u_61])
          else
            r_7 <-R eae_output_t;
            return(r_7)
        else
          find [unique] u_50 = ri_50 <= Qh, u_51 = ri_51 <= N suchthat defined(r_8[ri_50, ri_51], x1_1[ri_50, ri_51]) && (x1_1 = x1_1[ri_50, ri_51]) then
            return(r_8[u_50, u_51])
          else
            r_8 <-R eae_output_t;
            return(r_8)
      ))


Proved indistinguishability between game 47 and game 1
Game 47 is the same as game 33.
Adv[Game 1: indistinguishability from game 33] <= (N * Qe + 4 * N * N * Qe + 6 * Qe * Qe * N + 9 * N * N) * PCollKey + Adv_GDH(time_1, 2 * Qh * Qd * N + N * N * Qe + Qd * N * N + 3 * Qh * N * N) + (N + Qe * N) * PDistRerandom + Adv[Game 33: indistinguishability from game 33]
Adv[Game 33: indistinguishability from game 33] <= 0
Adv[Game 34: indistinguishability from game 47] <= (3 * N * N * Qe + Qe * Qe * N + 4 * N * N) * PCollKey + Adv[Game 47: indistinguishability from game 47]
Adv[Game 47: indistinguishability from game 47] <= 0
RESULT Proved indistinguishability between game 34 and game 1 up to probability (N * Qe + 7 * N * N * Qe + 7 * Qe * Qe * N + 13 * N * N) * PCollKey + Adv_GDH(time_1, 2 * Qh * Qd * N + N * N * Qe + Qd * N * N + 3 * Qh * N * N) + (N + Qe * N) * PDistRerandom
RESULT time_1 = time(context for game 28) + time + (1 + Qe * N + N) * time(exp)
RESULT time(context for game 28) = Qh * N * time(let concatDH) + Qh * N * time(let concatExtract) + Qh * N * time(let concatContext) + Qh * N * time(let concatExpand) + Qh * N * time(let eae_input) + (2 * Qd * N * N * Qh + 3 * Qe * N * N * Qh) * time(I2OSP2) + (2 * Qe * N * N * Qh + Qe * N) * time(exp) + Qd * N * time(let Serialize) + Qd * N * time(AuthDecap_Some) + Qe * N * N * Qd * time(= bitstring, maxlength(game 28: enc_8), maxlength(game 28: enc_2)) + Qe * N * time(AuthEncap_tuple, maxlength(game 28: enc_8)) + Qe * N * time(Serialize) + Qe * N * time(AuthEncap_tuple, maxlength(game 28: enc_9))
All queries proved.
